// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<> void $NameUint<8>::d_add
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  auto n2 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n3, n2);
  auto n5 = gate_and(b[1], a[1]);
  auto n4 = gate_and(n3, n2);
  auto n7 = gate_nor(n5, n4);
  auto n6 = gate_xnor(b[2], a[2]);
  y[2] = gate_xor(n7, n6);
  auto n9 = gate_and(b[2], a[2]);
  auto n8 = gate_nor(n7, n6);
  auto n11 = gate_nor(n9, n8);
  auto n10 = gate_xnor(b[3], a[3]);
  y[3] = gate_xor(n11, n10);
  auto n13 = gate_and(b[3], a[3]);
  auto n12 = gate_nor(n11, n10);
  auto n15 = gate_nor(n13, n12);
  auto n14 = gate_xnor(b[4], a[4]);
  y[4] = gate_xor(n15, n14);
  auto n17 = gate_and(b[4], a[4]);
  auto n16 = gate_nor(n15, n14);
  auto n19 = gate_nor(n17, n16);
  auto n18 = gate_xnor(b[5], a[5]);
  y[5] = gate_xor(n19, n18);
  auto n21 = gate_and(b[5], a[5]);
  auto n20 = gate_nor(n19, n18);
  auto n23 = gate_nor(n21, n20);
  auto n22 = gate_xnor(b[6], a[6]);
  y[6] = gate_xor(n23, n22);
  auto n25 = gate_and(b[6], a[6]);
  auto n24 = gate_nor(n23, n22);
  auto n26 = gate_nor(n25, n24);
  auto n27 = gate_xor(b[7], n26);
  y[7] = gate_xnor(a[7], n27);
}
template<> void $NameUint<8>::d_bitand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_and(b[7], a[7]);
  y[6] = gate_and(b[6], a[6]);
  y[5] = gate_and(b[5], a[5]);
  y[4] = gate_and(b[4], a[4]);
  y[3] = gate_and(b[3], a[3]);
  y[2] = gate_and(b[2], a[2]);
  y[1] = gate_and(b[1], a[1]);
  y[0] = gate_and(b[0], a[0]);
}
template<> void $NameUint<8>::d_bitnot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[7] = gate_not(a[7]);
  y[6] = gate_not(a[6]);
  y[5] = gate_not(a[5]);
  y[4] = gate_not(a[4]);
  y[3] = gate_not(a[3]);
  y[2] = gate_not(a[2]);
  y[1] = gate_not(a[1]);
  y[0] = gate_not(a[0]);
}
template<> void $NameUint<8>::d_bitor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_or(a[7], b[7]);
  y[0] = gate_or(a[0], b[0]);
  y[1] = gate_or(a[1], b[1]);
  y[2] = gate_or(a[2], b[2]);
  y[3] = gate_or(a[3], b[3]);
  y[4] = gate_or(a[4], b[4]);
  y[5] = gate_or(a[5], b[5]);
  y[6] = gate_or(a[6], b[6]);
}
template<> void $NameUint<8>::d_bitsum
(vector<Bit> & y, const vector<Bit> & a, const Bit & zero) noexcept
{
  y[4] = gate_buf(zero);
  y[5] = gate_buf(zero);
  y[6] = gate_buf(zero);
  y[7] = gate_buf(zero);
  auto N0 = gate_buf(a[0]);
  auto n3 = gate_xnor(a[3], a[5]);
  auto n5 = gate_xor(a[4], a[6]);
  auto n2 = gate_xnor(a[7], n5);
  auto n15 = gate_nor(n3, n2);
  auto n12 = gate_and(n3, n2);
  auto n4 = gate_nor(n15, n12);
  auto n8 = gate_xor(N0, a[1]);
  auto n13 = gate_xnor(a[2], n8);
  y[0] = gate_xnor(n4, n13);
  auto n7 = gate_and(a[4], a[6]);
  auto n6 = gate_and(n5, a[7]);
  auto n10 = gate_and(N0, a[1]);
  auto n9 = gate_and(n8, a[2]);
  auto n22 = gate_nor(n10, n9);
  auto n24 = gate_and(a[3], a[5]);
  auto n11 = gate_xnor(n22, n24);
  auto n14 = gate_nor(n13, n12);
  auto n19 = gate_nor(n15, n14);
  auto n23 = gate_not(n22);
  auto n26 = gate_and(n24, n23);
  auto n1 = gate_or(n7, n6);
  auto n21 = gate_nor(n1, n11);
  auto n17 = gate_and(n11, n1);
  auto n16 = gate_nor(n21, n17);
  y[1] = gate_xnor(n16, n19);
  auto n18 = gate_not(n17);
  auto n20 = gate_and(n19, n18);
  auto n25 = gate_nor(n21, n20);
  y[2] = gate_xor(n25, n26);
  y[3] = gate_and(n26, n25);
}
template<> void $NameUint<8>::d_bitxor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_xor(b[7], a[7]);
  y[6] = gate_xor(b[6], a[6]);
  y[5] = gate_xor(b[5], a[5]);
  y[4] = gate_xor(b[4], a[4]);
  y[3] = gate_xor(b[3], a[3]);
  y[2] = gate_xor(b[2], a[2]);
  y[1] = gate_xor(b[1], a[1]);
  y[0] = gate_xor(b[0], a[0]);
}
template<> void $NameUint<8>::d_boolmul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  y[1] = gate_and(a[0], b[1]);
  y[2] = gate_and(a[0], b[2]);
  y[3] = gate_and(a[0], b[3]);
  y[4] = gate_and(a[0], b[4]);
  y[5] = gate_and(a[0], b[5]);
  y[6] = gate_and(a[0], b[6]);
  y[7] = gate_and(a[0], b[7]);
}
template<> void $NameUint<8>::d_boolmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  y[0] = gate_mux(c[0], b[0], a[0]);
  y[1] = gate_mux(c[1], b[1], a[0]);
  y[2] = gate_mux(c[2], b[2], a[0]);
  y[3] = gate_mux(c[3], b[3], a[0]);
  y[4] = gate_mux(c[4], b[4], a[0]);
  y[5] = gate_mux(c[5], b[5], a[0]);
  y[6] = gate_mux(c[6], b[6], a[0]);
  y[7] = gate_mux(c[7], b[7], a[0]);
}
template<> void $NameUint<8>::d_carryadd
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n4 = gate_xor(b[1], a[1]);
  auto n3 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n4, n3);
  auto n6 = gate_and(b[1], a[1]);
  auto n5 = gate_and(n4, n3);
  auto n8 = gate_nor(n6, n5);
  auto n7 = gate_xnor(b[2], a[2]);
  y[2] = gate_xor(n8, n7);
  auto n10 = gate_and(b[2], a[2]);
  auto n9 = gate_nor(n8, n7);
  auto n12 = gate_nor(n10, n9);
  auto n11 = gate_xnor(b[3], a[3]);
  y[3] = gate_xor(n12, n11);
  auto n14 = gate_and(b[3], a[3]);
  auto n13 = gate_nor(n12, n11);
  auto n16 = gate_nor(n14, n13);
  auto n15 = gate_xnor(b[4], a[4]);
  y[4] = gate_xor(n16, n15);
  auto n18 = gate_and(b[4], a[4]);
  auto n17 = gate_nor(n16, n15);
  auto n20 = gate_nor(n18, n17);
  auto n19 = gate_xnor(b[5], a[5]);
  y[5] = gate_xor(n20, n19);
  auto n22 = gate_and(b[5], a[5]);
  auto n21 = gate_nor(n20, n19);
  auto n23 = gate_nor(n22, n21);
  auto n25 = gate_xor(b[6], a[6]);
  y[6] = gate_xnor(n23, n25);
  auto n27 = gate_and(b[6], a[6]);
  auto n24 = gate_not(n23);
  auto n26 = gate_and(n25, n24);
  y[7] = gate_or(n27, n26);
}
template<> void $NameUint<8>::d_dec
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xnor(a[1], a[0]);
  auto n3 = gate_nor(a[1], a[0]);
  auto n2 = gate_not(a[2]);
  y[2] = gate_xnor(n3, n2);
  auto n5 = gate_and(n3, n2);
  auto n4 = gate_not(a[3]);
  y[3] = gate_xnor(n5, n4);
  auto n7 = gate_and(n5, n4);
  auto n6 = gate_not(a[4]);
  y[4] = gate_xnor(n7, n6);
  auto n9 = gate_and(n7, n6);
  auto n8 = gate_not(a[5]);
  y[5] = gate_xnor(n9, n8);
  auto n11 = gate_and(n9, n8);
  auto n10 = gate_not(a[6]);
  y[6] = gate_xnor(n11, n10);
  auto n12 = gate_and(n11, n10);
  y[7] = gate_xor(a[7], n12);
}
template<> void $NameUint<8>::d_div
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n104 = gate_nor(b[7], b[6]);
  auto n109 = gate_not(b[5]);
  auto n70 = gate_and(n104, n109);
  auto n181 = gate_not(b[4]);
  auto n43 = gate_and(n70, n181);
  auto n118 = gate_not(b[3]);
  auto n23 = gate_and(n43, n118);
  auto n123 = gate_not(b[2]);
  auto n12 = gate_and(n23, n123);
  auto n19 = gate_not(a[7]);
  auto n8 = gate_and(b[1], n19);
  auto n14 = gate_not(a[6]);
  auto n7 = gate_and(b[0], n14);
  auto n9 = gate_nor(n8, n7);
  y[6] = gate_and(n12, n9);
  auto n10 = gate_and(b[0], n19);
  auto n11 = gate_nor(n10, b[1]);
  y[7] = gate_and(n12, n11);
  auto n13 = gate_and(y[6], b[0]);
  auto n28 = gate_nor(n14, n13);
  auto n126 = gate_not(b[1]);
  auto n16 = gate_and(n28, n126);
  auto n26 = gate_xnor(n126, n28);
  auto n29 = gate_not(a[5]);
  auto n24 = gate_and(b[0], n29);
  auto n15 = gate_nor(n26, n24);
  auto n18 = gate_nor(n16, n15);
  auto n17 = gate_nor(y[6], y[7]);
  auto n40 = gate_and(a[7], n17);
  auto n20 = gate_and(b[2], n19);
  auto n25 = gate_not(n24);
  auto n27 = gate_and(n26, n25);
  auto n54 = gate_not(a[4]);
  auto n50 = gate_and(b[0], n54);
  auto n31 = gate_not(n50);
  auto n37 = gate_nor(n118, n40);
  auto n85 = gate_not(a[3]);
  auto n81 = gate_and(b[0], n85);
  auto n56 = gate_not(n81);
  auto n124 = gate_not(a[2]);
  auto n119 = gate_and(b[0], n124);
  auto n87 = gate_not(n119);
  auto n160 = gate_not(b[0]);
  auto n156 = gate_nor(n160, a[1]);
  auto n127 = gate_not(n156);
  auto n195 = gate_not(b[6]);
  auto n162 = gate_nor(a[0], n160);
  auto n165 = gate_and(n162, b[1]);
  auto n1 = gate_or(n162, b[1]);
  auto n6 = gate_nand(n40, n123);
  auto n21 = gate_and(n18, n6);
  auto n22 = gate_nor(n21, n20);
  y[5] = gate_and(n23, n22);
  auto n49 = gate_mux(n28, n27, y[5]);
  auto n36 = gate_and(n123, n49);
  auto n47 = gate_xnor(b[2], n49);
  auto n30 = gate_and(y[5], b[0]);
  auto n53 = gate_xnor(n30, n29);
  auto n33 = gate_and(n126, n53);
  auto n51 = gate_xnor(b[1], n53);
  auto n32 = gate_and(n51, n31);
  auto n46 = gate_nor(n33, n32);
  auto n34 = gate_not(n46);
  auto n35 = gate_and(n47, n34);
  auto n38 = gate_nor(n36, n35);
  auto n42 = gate_nor(n38, n37);
  auto n39 = gate_not(y[5]);
  auto n45 = gate_and(n40, n39);
  auto n41 = gate_and(n118, n45);
  auto n48 = gate_xnor(n47, n46);
  auto n52 = gate_xnor(n51, n50);
  auto n5 = gate_or(n42, n41);
  y[4] = gate_and(n43, n5);
  auto n44 = gate_not(y[4]);
  auto n72 = gate_and(n45, n44);
  auto n76 = gate_mux(n49, n48, y[4]);
  auto n64 = gate_and(n76, n118);
  auto n74 = gate_xnor(b[3], n76);
  auto n80 = gate_mux(n53, n52, y[4]);
  auto n61 = gate_and(n80, n123);
  auto n78 = gate_xnor(b[2], n80);
  auto n55 = gate_and(y[4], b[0]);
  auto n84 = gate_xnor(n55, n54);
  auto n58 = gate_and(n126, n84);
  auto n82 = gate_xnor(b[1], n84);
  auto n57 = gate_and(n82, n56);
  auto n77 = gate_nor(n58, n57);
  auto n59 = gate_not(n77);
  auto n60 = gate_and(n78, n59);
  auto n73 = gate_nor(n61, n60);
  auto n62 = gate_not(n73);
  auto n63 = gate_and(n74, n62);
  auto n66 = gate_nor(n64, n63);
  auto n65 = gate_nor(b[4], n66);
  auto n68 = gate_nor(n72, n65);
  auto n67 = gate_and(b[4], n66);
  auto n69 = gate_nor(n68, n67);
  y[3] = gate_and(n70, n69);
  auto n71 = gate_not(y[3]);
  auto n97 = gate_and(n72, n71);
  auto n144 = gate_not(n97);
  auto n102 = gate_and(b[5], n144);
  auto n75 = gate_xnor(n74, n73);
  auto n108 = gate_mux(n76, n75, y[3]);
  auto n106 = gate_xnor(b[4], n108);
  auto n79 = gate_xnor(n78, n77);
  auto n113 = gate_mux(n80, n79, y[3]);
  auto n95 = gate_and(n113, n118);
  auto n111 = gate_xnor(b[3], n113);
  auto n83 = gate_xnor(n82, n81);
  auto n117 = gate_mux(n84, n83, y[3]);
  auto n92 = gate_and(n117, n123);
  auto n115 = gate_xnor(b[2], n117);
  auto n86 = gate_and(y[3], b[0]);
  auto n122 = gate_xnor(n86, n85);
  auto n89 = gate_and(n126, n122);
  auto n120 = gate_xnor(b[1], n122);
  auto n88 = gate_and(n120, n87);
  auto n114 = gate_nor(n89, n88);
  auto n90 = gate_not(n114);
  auto n91 = gate_and(n115, n90);
  auto n110 = gate_nor(n92, n91);
  auto n93 = gate_not(n110);
  auto n94 = gate_and(n111, n93);
  auto n105 = gate_nor(n95, n94);
  auto n96 = gate_not(n105);
  auto n99 = gate_and(n109, n97);
  auto n98 = gate_and(n108, n181);
  auto n100 = gate_nor(n99, n98);
  auto n107 = gate_xnor(n106, n105);
  auto n112 = gate_xnor(n111, n110);
  auto n116 = gate_xnor(n115, n114);
  auto n121 = gate_xnor(n120, n119);
  auto n142 = gate_and(b[6], n144);
  auto n4 = gate_nand(n106, n96);
  auto n101 = gate_and(n4, n100);
  auto n103 = gate_nor(n102, n101);
  y[2] = gate_and(n104, n103);
  auto n151 = gate_mux(n108, n107, y[2]);
  auto n141 = gate_and(n151, n109);
  auto n149 = gate_xnor(b[5], n151);
  auto n188 = gate_mux(n113, n112, y[2]);
  auto n138 = gate_and(n188, n181);
  auto n186 = gate_xnor(b[4], n188);
  auto n155 = gate_mux(n117, n116, y[2]);
  auto n135 = gate_and(n155, n118);
  auto n153 = gate_xnor(b[3], n155);
  auto n174 = gate_mux(n122, n121, y[2]);
  auto n132 = gate_and(n174, n123);
  auto n172 = gate_xnor(b[2], n174);
  auto n125 = gate_and(y[2], b[0]);
  auto n159 = gate_xnor(n125, n124);
  auto n129 = gate_and(n126, n159);
  auto n157 = gate_xnor(b[1], n159);
  auto n128 = gate_and(n157, n127);
  auto n171 = gate_nor(n129, n128);
  auto n130 = gate_not(n171);
  auto n131 = gate_and(n172, n130);
  auto n152 = gate_nor(n132, n131);
  auto n133 = gate_not(n152);
  auto n134 = gate_and(n153, n133);
  auto n185 = gate_nor(n135, n134);
  auto n136 = gate_not(n185);
  auto n137 = gate_and(n186, n136);
  auto n148 = gate_nor(n138, n137);
  auto n139 = gate_not(n148);
  auto n140 = gate_and(n149, n139);
  auto n143 = gate_nor(n141, n140);
  auto n146 = gate_nor(n143, n142);
  auto n200 = gate_nor(n144, y[2]);
  auto n145 = gate_and(n200, n195);
  auto n147 = gate_nor(n146, n145);
  y[1] = gate_nor(b[7], n147);
  auto n150 = gate_xnor(n149, n148);
  auto n194 = gate_mux(n151, n150, y[1]);
  auto n198 = gate_and(n195, n194);
  auto n154 = gate_xnor(n153, n152);
  auto n180 = gate_mux(n155, n154, y[1]);
  auto n184 = gate_and(n181, n180);
  auto n158 = gate_xnor(n157, n156);
  auto n167 = gate_mux(n159, n158, y[1]);
  auto n161 = gate_and(b[0], y[1]);
  auto n163 = gate_xnor(n161, a[1]);
  auto n164 = gate_and(n163, n1);
  auto n166 = gate_nor(n165, n164);
  auto n170 = gate_and(n167, n166);
  auto n168 = gate_nor(n167, n166);
  auto n169 = gate_nor(b[2], n168);
  auto n175 = gate_nor(n170, n169);
  auto n179 = gate_and(b[3], n175);
  auto n173 = gate_xnor(n172, n171);
  auto n177 = gate_mux(n174, n173, y[1]);
  auto n176 = gate_nor(b[3], n175);
  auto n178 = gate_nor(n177, n176);
  auto n182 = gate_nor(n179, n178);
  auto n187 = gate_xnor(n186, n185);
  auto n191 = gate_mux(n188, n187, y[1]);
  auto n199 = gate_not(y[1]);
  auto n203 = gate_and(n200, n199);
  auto n2 = gate_or(n181, n180);
  auto n3 = gate_or(n195, n194);
  auto n183 = gate_and(n182, n2);
  auto n189 = gate_nor(n184, n183);
  auto n193 = gate_and(n189, b[5]);
  auto n190 = gate_nor(n189, b[5]);
  auto n192 = gate_nor(n191, n190);
  auto n196 = gate_nor(n193, n192);
  auto n197 = gate_and(n196, n3);
  auto n201 = gate_nor(n198, n197);
  auto n205 = gate_and(n201, b[7]);
  auto n202 = gate_nor(n201, b[7]);
  auto n204 = gate_nor(n203, n202);
  y[0] = gate_nor(n205, n204);
}
template<> void $NameUint<8>::d_divsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n3 = gate_or(a[0], a[1]);
  auto n4 = gate_or(n3, a[2]);
  auto n5 = gate_or(n4, a[3]);
  auto n19 = gate_not(a[6]);
  auto n157 = gate_xnor(b[7], b[6]);
  auto n211 = gate_xnor(b[7], b[5]);
  auto n85 = gate_and(n157, n211);
  auto n202 = gate_xnor(b[7], b[4]);
  auto n59 = gate_and(n85, n202);
  auto n192 = gate_xnor(b[7], b[3]);
  auto n41 = gate_and(n59, n192);
  auto n182 = gate_xnor(b[7], b[2]);
  auto n28 = gate_and(n41, n182);
  auto n171 = gate_xnor(b[7], b[1]);
  auto n245 = gate_and(n28, n171);
  auto n240 = gate_xnor(b[7], a[7]);
  auto n244 = gate_not(n240);
  auto n164 = gate_not(b[7]);
  auto n22 = gate_and(n245, b[0]);
  auto n168 = gate_not(n171);
  auto n177 = gate_not(n182);
  auto n45 = gate_and(a[7], n5);
  auto n67 = gate_xor(n45, a[4]);
  auto n63 = gate_mux(n164, n67, b[0]);
  auto n64 = gate_xnor(n63, n168);
  auto n69 = gate_and(a[7], n4);
  auto n95 = gate_xor(n69, a[3]);
  auto n91 = gate_mux(n164, n95, b[0]);
  auto n217 = gate_not(n157);
  auto n129 = gate_not(n192);
  auto n92 = gate_xnor(n91, n168);
  auto n97 = gate_and(a[7], n3);
  auto n134 = gate_xor(n97, a[2]);
  auto n130 = gate_mux(n164, n134, b[0]);
  auto n131 = gate_xnor(n130, n168);
  auto n136 = gate_and(a[0], a[7]);
  auto n162 = gate_xnor(n136, a[1]);
  auto n172 = gate_mux(b[7], n162, b[0]);
  auto n137 = gate_not(n172);
  auto n151 = gate_not(n202);
  auto n165 = gate_mux(n164, a[0], b[0]);
  auto n173 = gate_xnor(n172, n171);
  auto n243 = gate_nor(b[7], b[0]);
  auto n246 = gate_and(n244, n243);
  auto n248 = gate_and(n246, n245);
  auto n1 = gate_or(n5, a[4]);
  auto n17 = gate_nor(n1, a[5]);
  auto n14 = gate_and(n17, n19);
  auto n21 = gate_and(a[7], n14);
  auto n15 = gate_and(n21, n245);
  auto n16 = gate_and(b[0], n15);
  auto n229 = gate_xnor(n16, n244);
  auto n18 = gate_not(n17);
  auto n20 = gate_and(n18, a[7]);
  auto n29 = gate_xnor(n20, n19);
  auto n24 = gate_mux(n164, n29, b[0]);
  auto n35 = gate_not(n21);
  auto n38 = gate_nor(n35, n22);
  auto n23 = gate_and(n38, n171);
  auto n26 = gate_nor(n24, n23);
  auto n25 = gate_and(n168, n35);
  auto n27 = gate_nor(n26, n25);
  auto n227 = gate_and(n28, n27);
  auto n37 = gate_not(n227);
  auto n42 = gate_and(n29, n37);
  auto n30 = gate_and(a[7], n1);
  auto n43 = gate_xnor(a[5], n30);
  auto n31 = gate_mux(b[7], n43, b[0]);
  auto n34 = gate_and(n31, n168);
  auto n32 = gate_nor(n31, n168);
  auto n33 = gate_nor(n42, n32);
  auto n36 = gate_nor(n34, n33);
  auto n53 = gate_and(n38, n37);
  auto n39 = gate_and(n182, n53);
  auto n231 = gate_xnor(n227, n240);
  auto n2 = gate_nand(n177, n35);
  auto n40 = gate_and(n36, n2);
  auto n13 = gate_or(n40, n39);
  auto n226 = gate_and(n41, n13);
  auto n52 = gate_not(n226);
  auto n60 = gate_and(n42, n52);
  auto n51 = gate_nor(n182, n60);
  auto n44 = gate_and(b[0], n226);
  auto n66 = gate_xnor(n44, n43);
  auto n46 = gate_xnor(n168, n66);
  auto n48 = gate_and(n182, n60);
  auto n47 = gate_and(n66, n171);
  auto n49 = gate_nor(n48, n47);
  auto n62 = gate_and(n53, n52);
  auto n232 = gate_xnor(n240, n226);
  auto n12 = gate_nand(n46, n63);
  auto n50 = gate_and(n12, n49);
  auto n54 = gate_nor(n51, n50);
  auto n57 = gate_nor(n54, n192);
  auto n55 = gate_and(n54, n192);
  auto n56 = gate_nor(n62, n55);
  auto n58 = gate_nor(n57, n56);
  auto n225 = gate_and(n59, n58);
  auto n61 = gate_not(n225);
  auto n86 = gate_and(n60, n61);
  auto n114 = gate_and(n62, n61);
  auto n83 = gate_nor(n202, n114);
  auto n79 = gate_nor(n192, n86);
  auto n65 = gate_and(n64, n225);
  auto n89 = gate_xnor(n66, n65);
  auto n74 = gate_xnor(n182, n89);
  auto n68 = gate_and(b[0], n225);
  auto n93 = gate_xnor(n68, n67);
  auto n72 = gate_nor(n93, n168);
  auto n70 = gate_xnor(n171, n93);
  auto n71 = gate_and(n70, n91);
  auto n87 = gate_nor(n72, n71);
  auto n73 = gate_not(n87);
  auto n76 = gate_and(n192, n86);
  auto n75 = gate_nor(n89, n177);
  auto n77 = gate_nor(n76, n75);
  auto n80 = gate_and(n114, n202);
  auto n88 = gate_xnor(n87, n182);
  auto n234 = gate_xnor(n240, n225);
  auto n6 = gate_or(n211, n114);
  auto n11 = gate_nand(n74, n73);
  auto n78 = gate_and(n11, n77);
  auto n81 = gate_nor(n79, n78);
  auto n82 = gate_nor(n81, n80);
  auto n84 = gate_nor(n83, n82);
  auto n224 = gate_and(n85, n84);
  auto n113 = gate_not(n224);
  auto n118 = gate_and(n86, n113);
  auto n111 = gate_nor(n202, n118);
  auto n90 = gate_and(n224, n88);
  auto n124 = gate_xnor(n90, n89);
  auto n106 = gate_xnor(n129, n124);
  auto n94 = gate_and(n224, n92);
  auto n128 = gate_xnor(n94, n93);
  auto n104 = gate_and(n128, n182);
  auto n102 = gate_xnor(n177, n128);
  auto n96 = gate_and(n224, b[0]);
  auto n133 = gate_xnor(n96, n95);
  auto n100 = gate_nor(n133, n168);
  auto n98 = gate_xnor(n171, n133);
  auto n99 = gate_and(n98, n130);
  auto n125 = gate_nor(n100, n99);
  auto n101 = gate_not(n125);
  auto n103 = gate_and(n102, n101);
  auto n121 = gate_nor(n104, n103);
  auto n105 = gate_not(n121);
  auto n108 = gate_and(n202, n118);
  auto n107 = gate_and(n124, n192);
  auto n109 = gate_nor(n108, n107);
  auto n120 = gate_and(n114, n113);
  auto n115 = gate_and(n120, n211);
  auto n122 = gate_xnor(n121, n192);
  auto n126 = gate_xnor(n125, n182);
  auto n237 = gate_xnor(n224, n240);
  auto n10 = gate_nand(n106, n105);
  auto n110 = gate_and(n10, n109);
  auto n112 = gate_nor(n111, n110);
  auto n116 = gate_and(n112, n6);
  auto n117 = gate_nor(n116, n115);
  auto n223 = gate_nor(n217, n117);
  auto n119 = gate_not(n223);
  auto n161 = gate_and(n118, n119);
  auto n220 = gate_and(n120, n119);
  auto n160 = gate_and(n157, n220);
  auto n156 = gate_nor(n211, n161);
  auto n123 = gate_and(n122, n223);
  auto n207 = gate_xnor(n124, n123);
  auto n150 = gate_xnor(n202, n207);
  auto n127 = gate_and(n126, n223);
  auto n196 = gate_xnor(n128, n127);
  auto n148 = gate_nor(n196, n129);
  auto n146 = gate_xnor(n192, n196);
  auto n132 = gate_and(n131, n223);
  auto n186 = gate_xnor(n133, n132);
  auto n144 = gate_and(n186, n182);
  auto n142 = gate_xnor(n177, n186);
  auto n135 = gate_and(b[0], n223);
  auto n175 = gate_xnor(n135, n134);
  auto n140 = gate_nor(n175, n168);
  auto n138 = gate_xnor(n171, n175);
  auto n139 = gate_and(n138, n137);
  auto n183 = gate_nor(n140, n139);
  auto n141 = gate_not(n183);
  auto n143 = gate_and(n142, n141);
  auto n193 = gate_nor(n144, n143);
  auto n145 = gate_not(n193);
  auto n147 = gate_and(n146, n145);
  auto n203 = gate_nor(n148, n147);
  auto n149 = gate_not(n203);
  auto n153 = gate_and(n211, n161);
  auto n152 = gate_nor(n207, n151);
  auto n154 = gate_nor(n153, n152);
  auto n184 = gate_xnor(n183, n182);
  auto n194 = gate_xnor(n193, n192);
  auto n205 = gate_xnor(n203, n202);
  auto n238 = gate_xnor(n240, n223);
  auto n7 = gate_or(n157, n220);
  auto n9 = gate_nand(n150, n149);
  auto n155 = gate_and(n9, n154);
  auto n158 = gate_nor(n156, n155);
  auto n159 = gate_and(n158, n7);
  auto n241 = gate_nor(n160, n159);
  auto n215 = gate_and(n161, n241);
  auto n204 = gate_not(n241);
  auto n163 = gate_and(b[0], n204);
  auto n166 = gate_xnor(n163, n162);
  auto n170 = gate_and(n166, n165);
  auto n167 = gate_nor(n166, n165);
  auto n169 = gate_nor(n168, n167);
  auto n176 = gate_nor(n170, n169);
  auto n181 = gate_and(n177, n176);
  auto n174 = gate_and(n173, n204);
  auto n179 = gate_xnor(n175, n174);
  auto n178 = gate_nor(n177, n176);
  auto n180 = gate_nor(n179, n178);
  auto n187 = gate_nor(n181, n180);
  auto n185 = gate_and(n184, n204);
  auto n188 = gate_xor(n186, n185);
  auto n191 = gate_nor(n187, n188);
  auto n189 = gate_and(n188, n187);
  auto n190 = gate_nor(n192, n189);
  auto n197 = gate_nor(n191, n190);
  auto n195 = gate_and(n194, n204);
  auto n198 = gate_xnor(n196, n195);
  auto n201 = gate_nor(n197, n198);
  auto n199 = gate_and(n198, n197);
  auto n200 = gate_nor(n202, n199);
  auto n208 = gate_nor(n201, n200);
  auto n206 = gate_and(n205, n204);
  auto n209 = gate_xnor(n207, n206);
  auto n213 = gate_nor(n208, n209);
  auto n210 = gate_and(n209, n208);
  auto n212 = gate_nor(n211, n210);
  auto n214 = gate_nor(n213, n212);
  auto n219 = gate_and(n215, n214);
  auto n216 = gate_nor(n215, n214);
  auto n218 = gate_nor(n217, n216);
  auto n221 = gate_nor(n219, n218);
  auto n8 = gate_nand(n220, n241);
  auto n247 = gate_and(n221, n8);
  auto n222 = gate_and(n244, n247);
  auto n239 = gate_and(n222, n241);
  auto n236 = gate_and(n239, n238);
  auto n235 = gate_and(n236, n237);
  auto n233 = gate_and(n235, n234);
  auto n230 = gate_and(n233, n232);
  auto n228 = gate_and(n230, n231);
  y[7] = gate_xnor(n229, n228);
  y[6] = gate_xor(n231, n230);
  y[5] = gate_xor(n233, n232);
  y[4] = gate_xor(n235, n234);
  y[3] = gate_xor(n237, n236);
  y[2] = gate_xor(n239, n238);
  auto n242 = gate_nor(n240, n247);
  y[1] = gate_xnor(n242, n241);
  y[0] = gate_xnor(n248, n247);
}
template<> void $NameUint<8>::d_eq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n16 = gate_xnor(a[5], b[5]);
  auto n15 = gate_xnor(a[4], b[4]);
  auto n20 = gate_and(n16, n15);
  auto n18 = gate_xnor(a[6], b[6]);
  auto n17 = gate_xnor(b[1], a[1]);
  auto n19 = gate_and(n18, n17);
  auto n28 = gate_and(n20, n19);
  auto n22 = gate_xnor(a[2], b[2]);
  auto n21 = gate_xnor(a[0], b[0]);
  auto n26 = gate_and(n22, n21);
  auto n24 = gate_xnor(a[7], b[7]);
  auto n23 = gate_xnor(b[3], a[3]);
  auto n25 = gate_and(n24, n23);
  auto n27 = gate_and(n26, n25);
  y[0] = gate_and(n28, n27);
}
template<> void $NameUint<8>::d_ge
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n50 = gate_not(b[4]);
  auto n53 = gate_and(n50, a[4]);
  auto n39 = gate_not(a[1]);
  auto n37 = gate_nor(n39, b[1]);
  auto n38 = gate_nor(n37, a[0]);
  auto n41 = gate_and(b[0], n38);
  auto n40 = gate_and(b[1], n39);
  auto n42 = gate_nor(n41, n40);
  auto n45 = gate_and(n42, a[2]);
  auto n43 = gate_nor(n42, a[2]);
  auto n44 = gate_nor(b[2], n43);
  auto n46 = gate_nor(n45, n44);
  auto n49 = gate_and(b[3], n46);
  auto n47 = gate_nor(b[3], n46);
  auto n48 = gate_nor(a[3], n47);
  auto n51 = gate_nor(n49, n48);
  auto n36 = gate_or(n50, a[4]);
  auto n52 = gate_and(n51, n36);
  auto n54 = gate_nor(n53, n52);
  auto n57 = gate_and(b[5], n54);
  auto n55 = gate_nor(b[5], n54);
  auto n56 = gate_nor(a[5], n55);
  auto n58 = gate_nor(n57, n56);
  auto n61 = gate_and(a[6], n58);
  auto n59 = gate_nor(a[6], n58);
  auto n60 = gate_nor(b[6], n59);
  auto n62 = gate_nor(n61, n60);
  auto n65 = gate_and(n62, b[7]);
  auto n63 = gate_nor(n62, b[7]);
  auto n64 = gate_nor(a[7], n63);
  y[0] = gate_nor(n65, n64);
}
template<> void $NameUint<8>::d_gesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n50 = gate_not(b[4]);
  auto n53 = gate_and(n50, a[4]);
  auto n39 = gate_not(a[1]);
  auto n37 = gate_nor(n39, b[1]);
  auto n38 = gate_nor(n37, a[0]);
  auto n41 = gate_and(b[0], n38);
  auto n40 = gate_and(b[1], n39);
  auto n42 = gate_nor(n41, n40);
  auto n45 = gate_and(n42, a[2]);
  auto n43 = gate_nor(n42, a[2]);
  auto n44 = gate_nor(b[2], n43);
  auto n46 = gate_nor(n45, n44);
  auto n49 = gate_and(b[3], n46);
  auto n47 = gate_nor(b[3], n46);
  auto n48 = gate_nor(a[3], n47);
  auto n51 = gate_nor(n49, n48);
  auto n36 = gate_or(n50, a[4]);
  auto n52 = gate_and(n51, n36);
  auto n54 = gate_nor(n53, n52);
  auto n57 = gate_and(b[5], n54);
  auto n55 = gate_nor(b[5], n54);
  auto n56 = gate_nor(a[5], n55);
  auto n58 = gate_nor(n57, n56);
  auto n61 = gate_and(a[6], n58);
  auto n59 = gate_nor(a[6], n58);
  auto n60 = gate_nor(b[6], n59);
  auto n62 = gate_nor(n61, n60);
  auto n65 = gate_and(n62, a[7]);
  auto n63 = gate_nor(n62, a[7]);
  auto n64 = gate_nor(b[7], n63);
  y[0] = gate_nor(n65, n64);
}
template<> void $NameUint<8>::d_gt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(a[5]);
  auto n58 = gate_and(n55, b[5]);
  auto n39 = gate_not(b[0]);
  auto n40 = gate_and(a[0], n39);
  auto n42 = gate_nor(n40, a[1]);
  auto n37 = gate_or(n55, b[5]);
  auto n38 = gate_nand(n40, a[1]);
  auto n41 = gate_and(b[1], n38);
  auto n43 = gate_nor(n42, n41);
  auto n46 = gate_and(a[2], n43);
  auto n44 = gate_nor(a[2], n43);
  auto n45 = gate_nor(b[2], n44);
  auto n47 = gate_nor(n46, n45);
  auto n50 = gate_and(b[3], n47);
  auto n48 = gate_nor(b[3], n47);
  auto n49 = gate_nor(a[3], n48);
  auto n51 = gate_nor(n50, n49);
  auto n54 = gate_and(a[4], n51);
  auto n52 = gate_nor(a[4], n51);
  auto n53 = gate_nor(b[4], n52);
  auto n56 = gate_nor(n54, n53);
  auto n57 = gate_and(n56, n37);
  auto n59 = gate_nor(n58, n57);
  auto n62 = gate_and(a[6], n59);
  auto n60 = gate_nor(a[6], n59);
  auto n61 = gate_nor(b[6], n60);
  auto n63 = gate_nor(n62, n61);
  auto n66 = gate_and(n63, b[7]);
  auto n64 = gate_nor(n63, b[7]);
  auto n65 = gate_nor(a[7], n64);
  y[0] = gate_nor(n66, n65);
}
template<> void $NameUint<8>::d_gtsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(a[5]);
  auto n58 = gate_and(n55, b[5]);
  auto n39 = gate_not(b[0]);
  auto n40 = gate_and(a[0], n39);
  auto n42 = gate_nor(n40, a[1]);
  auto n37 = gate_or(n55, b[5]);
  auto n38 = gate_nand(n40, a[1]);
  auto n41 = gate_and(b[1], n38);
  auto n43 = gate_nor(n42, n41);
  auto n46 = gate_and(a[2], n43);
  auto n44 = gate_nor(a[2], n43);
  auto n45 = gate_nor(b[2], n44);
  auto n47 = gate_nor(n46, n45);
  auto n50 = gate_and(b[3], n47);
  auto n48 = gate_nor(b[3], n47);
  auto n49 = gate_nor(a[3], n48);
  auto n51 = gate_nor(n50, n49);
  auto n54 = gate_and(a[4], n51);
  auto n52 = gate_nor(a[4], n51);
  auto n53 = gate_nor(b[4], n52);
  auto n56 = gate_nor(n54, n53);
  auto n57 = gate_and(n56, n37);
  auto n59 = gate_nor(n58, n57);
  auto n62 = gate_and(a[6], n59);
  auto n60 = gate_nor(a[6], n59);
  auto n61 = gate_nor(b[6], n60);
  auto n63 = gate_nor(n62, n61);
  auto n66 = gate_and(n63, a[7]);
  auto n64 = gate_nor(n63, a[7]);
  auto n65 = gate_nor(b[7], n64);
  y[0] = gate_nor(n66, n65);
}
template<> void $NameUint<8>::d_inc
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xnor(a[1], y[0]);
  auto n2 = gate_and(a[0], a[1]);
  y[2] = gate_xor(a[2], n2);
  auto n3 = gate_and(n2, a[2]);
  y[3] = gate_xor(a[3], n3);
  auto n4 = gate_and(n3, a[3]);
  y[4] = gate_xor(a[4], n4);
  auto n5 = gate_and(n4, a[4]);
  y[5] = gate_xor(a[5], n5);
  auto n6 = gate_and(n5, a[5]);
  y[6] = gate_xor(a[6], n6);
  auto n7 = gate_and(n6, a[6]);
  y[7] = gate_xor(a[7], n7);
}
template<> void $NameUint<8>::d_ineq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n19 = gate_xnor(b[2], a[2]);
  auto n18 = gate_xnor(b[3], a[3]);
  auto n23 = gate_and(n19, n18);
  auto n21 = gate_xnor(b[0], a[0]);
  auto n20 = gate_xnor(b[1], a[1]);
  auto n22 = gate_and(n21, n20);
  auto n31 = gate_and(n23, n22);
  auto n25 = gate_xnor(b[6], a[6]);
  auto n24 = gate_xnor(b[7], a[7]);
  auto n29 = gate_and(n25, n24);
  auto n27 = gate_xnor(b[4], a[4]);
  auto n26 = gate_xnor(b[5], a[5]);
  auto n28 = gate_and(n27, n26);
  auto n30 = gate_and(n29, n28);
  y[0] = gate_nand(n31, n30);
}
template<> void $NameUint<8>::d_intmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n9 = gate_nor(a[1], a[0]);
  auto n8 = gate_nor(a[3], a[2]);
  auto n13 = gate_and(n9, n8);
  auto n11 = gate_nor(a[5], a[4]);
  auto n10 = gate_nor(a[7], a[6]);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_and(n13, n12);
  y[0] = gate_mux(b[0], c[0], n14);
  y[1] = gate_mux(b[1], c[1], n14);
  y[2] = gate_mux(b[2], c[2], n14);
  y[3] = gate_mux(b[3], c[3], n14);
  y[4] = gate_mux(b[4], c[4], n14);
  y[5] = gate_mux(b[5], c[5], n14);
  y[6] = gate_mux(b[6], c[6], n14);
  y[7] = gate_mux(b[7], c[7], n14);
}
template<> void $NameUint<8>::d_le
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n50 = gate_not(a[4]);
  auto n53 = gate_and(n50, b[4]);
  auto n39 = gate_not(b[1]);
  auto n37 = gate_nor(n39, a[1]);
  auto n38 = gate_nor(n37, b[0]);
  auto n41 = gate_and(a[0], n38);
  auto n40 = gate_and(a[1], n39);
  auto n42 = gate_nor(n41, n40);
  auto n45 = gate_and(n42, b[2]);
  auto n43 = gate_nor(n42, b[2]);
  auto n44 = gate_nor(a[2], n43);
  auto n46 = gate_nor(n45, n44);
  auto n49 = gate_and(a[3], n46);
  auto n47 = gate_nor(a[3], n46);
  auto n48 = gate_nor(b[3], n47);
  auto n51 = gate_nor(n49, n48);
  auto n36 = gate_or(n50, b[4]);
  auto n52 = gate_and(n51, n36);
  auto n54 = gate_nor(n53, n52);
  auto n57 = gate_and(a[5], n54);
  auto n55 = gate_nor(a[5], n54);
  auto n56 = gate_nor(b[5], n55);
  auto n58 = gate_nor(n57, n56);
  auto n61 = gate_and(b[6], n58);
  auto n59 = gate_nor(b[6], n58);
  auto n60 = gate_nor(a[6], n59);
  auto n62 = gate_nor(n61, n60);
  auto n65 = gate_and(n62, a[7]);
  auto n63 = gate_nor(n62, a[7]);
  auto n64 = gate_nor(b[7], n63);
  y[0] = gate_nor(n65, n64);
}
template<> void $NameUint<8>::d_lesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n50 = gate_not(a[4]);
  auto n53 = gate_and(n50, b[4]);
  auto n39 = gate_not(b[1]);
  auto n37 = gate_nor(n39, a[1]);
  auto n38 = gate_nor(n37, b[0]);
  auto n41 = gate_and(a[0], n38);
  auto n40 = gate_and(a[1], n39);
  auto n42 = gate_nor(n41, n40);
  auto n45 = gate_and(n42, b[2]);
  auto n43 = gate_nor(n42, b[2]);
  auto n44 = gate_nor(a[2], n43);
  auto n46 = gate_nor(n45, n44);
  auto n49 = gate_and(a[3], n46);
  auto n47 = gate_nor(a[3], n46);
  auto n48 = gate_nor(b[3], n47);
  auto n51 = gate_nor(n49, n48);
  auto n36 = gate_or(n50, b[4]);
  auto n52 = gate_and(n51, n36);
  auto n54 = gate_nor(n53, n52);
  auto n57 = gate_and(a[5], n54);
  auto n55 = gate_nor(a[5], n54);
  auto n56 = gate_nor(b[5], n55);
  auto n58 = gate_nor(n57, n56);
  auto n61 = gate_and(b[6], n58);
  auto n59 = gate_nor(b[6], n58);
  auto n60 = gate_nor(a[6], n59);
  auto n62 = gate_nor(n61, n60);
  auto n65 = gate_and(n62, b[7]);
  auto n63 = gate_nor(n62, b[7]);
  auto n64 = gate_nor(a[7], n63);
  y[0] = gate_nor(n65, n64);
}
template<> void $NameUint<8>::d_logand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n16 = gate_nor(a[1], a[0]);
  auto n15 = gate_nor(a[3], a[2]);
  auto n20 = gate_and(n16, n15);
  auto n18 = gate_nor(a[5], a[4]);
  auto n17 = gate_nor(a[7], a[6]);
  auto n19 = gate_and(n18, n17);
  auto n28 = gate_and(n20, n19);
  auto n22 = gate_nor(b[1], b[0]);
  auto n21 = gate_nor(b[3], b[2]);
  auto n26 = gate_and(n22, n21);
  auto n24 = gate_nor(b[5], b[4]);
  auto n23 = gate_nor(b[7], b[6]);
  auto n25 = gate_and(n24, n23);
  auto n27 = gate_and(n26, n25);
  y[0] = gate_nor(n28, n27);
}
template<> void $NameUint<8>::d_lognot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n9 = gate_nor(a[1], a[0]);
  auto n8 = gate_nor(a[3], a[2]);
  auto n13 = gate_and(n9, n8);
  auto n11 = gate_nor(a[5], a[4]);
  auto n10 = gate_nor(a[7], a[6]);
  auto n12 = gate_and(n11, n10);
  y[0] = gate_and(n13, n12);
}
template<> void $NameUint<8>::d_logor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n18 = gate_nor(a[5], a[4]);
  auto n17 = gate_nor(a[7], a[6]);
  auto n22 = gate_and(n18, n17);
  auto n20 = gate_nor(b[5], b[4]);
  auto n19 = gate_nor(b[7], b[6]);
  auto n21 = gate_and(n20, n19);
  auto n30 = gate_and(n22, n21);
  auto n24 = gate_nor(b[1], b[0]);
  auto n23 = gate_nor(b[3], b[2]);
  auto n28 = gate_and(n24, n23);
  auto n26 = gate_nor(a[1], a[0]);
  auto n25 = gate_nor(a[3], a[2]);
  auto n27 = gate_and(n26, n25);
  auto n29 = gate_and(n28, n27);
  y[0] = gate_nand(n30, n29);
}
template<> void $NameUint<8>::d_lt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(b[5]);
  auto n58 = gate_and(n55, a[5]);
  auto n39 = gate_not(a[0]);
  auto n40 = gate_and(b[0], n39);
  auto n42 = gate_nor(n40, b[1]);
  auto n37 = gate_or(n55, a[5]);
  auto n38 = gate_nand(n40, b[1]);
  auto n41 = gate_and(a[1], n38);
  auto n43 = gate_nor(n42, n41);
  auto n46 = gate_and(b[2], n43);
  auto n44 = gate_nor(b[2], n43);
  auto n45 = gate_nor(a[2], n44);
  auto n47 = gate_nor(n46, n45);
  auto n50 = gate_and(a[3], n47);
  auto n48 = gate_nor(a[3], n47);
  auto n49 = gate_nor(b[3], n48);
  auto n51 = gate_nor(n50, n49);
  auto n54 = gate_and(b[4], n51);
  auto n52 = gate_nor(b[4], n51);
  auto n53 = gate_nor(a[4], n52);
  auto n56 = gate_nor(n54, n53);
  auto n57 = gate_and(n56, n37);
  auto n59 = gate_nor(n58, n57);
  auto n62 = gate_and(b[6], n59);
  auto n60 = gate_nor(b[6], n59);
  auto n61 = gate_nor(a[6], n60);
  auto n63 = gate_nor(n62, n61);
  auto n66 = gate_and(n63, a[7]);
  auto n64 = gate_nor(n63, a[7]);
  auto n65 = gate_nor(b[7], n64);
  y[0] = gate_nor(n66, n65);
}
template<> void $NameUint<8>::d_ltsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(b[5]);
  auto n58 = gate_and(n55, a[5]);
  auto n39 = gate_not(a[0]);
  auto n40 = gate_and(b[0], n39);
  auto n42 = gate_nor(n40, b[1]);
  auto n37 = gate_or(n55, a[5]);
  auto n38 = gate_nand(n40, b[1]);
  auto n41 = gate_and(a[1], n38);
  auto n43 = gate_nor(n42, n41);
  auto n46 = gate_and(b[2], n43);
  auto n44 = gate_nor(b[2], n43);
  auto n45 = gate_nor(a[2], n44);
  auto n47 = gate_nor(n46, n45);
  auto n50 = gate_and(a[3], n47);
  auto n48 = gate_nor(a[3], n47);
  auto n49 = gate_nor(b[3], n48);
  auto n51 = gate_nor(n50, n49);
  auto n54 = gate_and(b[4], n51);
  auto n52 = gate_nor(b[4], n51);
  auto n53 = gate_nor(a[4], n52);
  auto n56 = gate_nor(n54, n53);
  auto n57 = gate_and(n56, n37);
  auto n59 = gate_nor(n58, n57);
  auto n62 = gate_and(b[6], n59);
  auto n60 = gate_nor(b[6], n59);
  auto n61 = gate_nor(a[6], n60);
  auto n63 = gate_nor(n62, n61);
  auto n66 = gate_and(n63, b[7]);
  auto n64 = gate_nor(n63, b[7]);
  auto n65 = gate_nor(a[7], n64);
  y[0] = gate_nor(n66, n65);
}
template<> void $NameUint<8>::d_mod
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n200 = gate_not(b[7]);
  auto n159 = gate_not(b[6]);
  auto n153 = gate_and(n200, n159);
  auto n163 = gate_not(b[5]);
  auto n83 = gate_and(n153, n163);
  auto n167 = gate_not(b[4]);
  auto n85 = gate_and(n83, n167);
  auto n171 = gate_not(b[3]);
  auto n61 = gate_and(n85, n171);
  auto n175 = gate_not(b[2]);
  auto n32 = gate_and(n61, n175);
  auto n177 = gate_not(b[1]);
  auto n30 = gate_and(n32, n177);
  auto n131 = gate_not(b[0]);
  auto n31 = gate_mux(a[7], b[0], n177);
  auto n33 = gate_and(n32, n31);
  auto n40 = gate_nor(n131, a[5]);
  auto n35 = gate_not(n40);
  auto n125 = gate_nor(n131, a[2]);
  auto n98 = gate_not(n125);
  auto n126 = gate_xnor(n177, n125);
  auto n229 = gate_not(a[0]);
  auto n224 = gate_and(b[0], n229);
  auto n178 = gate_not(n224);
  auto n1 = gate_or(n131, a[6]);
  auto n7 = gate_or(n131, a[1]);
  auto n8 = gate_nand(b[0], n30);
  auto n12 = gate_or(n131, a[3]);
  auto n16 = gate_or(n131, a[4]);
  auto n17 = gate_nand(n33, n1);
  auto n34 = gate_and(a[7], n8);
  auto n43 = gate_and(n34, n17);
  auto n48 = gate_and(a[6], n17);
  auto n37 = gate_and(n48, n177);
  auto n39 = gate_xnor(n48, b[1]);
  auto n36 = gate_and(n39, n35);
  auto n41 = gate_nor(n37, n36);
  auto n38 = gate_xnor(n175, n41);
  auto n47 = gate_nor(n40, n39);
  auto n45 = gate_and(b[2], n41);
  auto n42 = gate_nor(b[2], n41);
  auto n44 = gate_nor(n43, n42);
  auto n46 = gate_nor(n45, n44);
  auto n49 = gate_and(n61, n46);
  auto n66 = gate_mux(n48, n47, n49);
  auto n56 = gate_and(n175, n66);
  auto n54 = gate_xnor(b[2], n66);
  auto n50 = gate_and(n49, b[0]);
  auto n69 = gate_xnor(n50, a[5]);
  auto n53 = gate_nor(b[1], n69);
  auto n51 = gate_xnor(n69, n177);
  auto n52 = gate_and(n51, n16);
  auto n67 = gate_xnor(b[1], n16);
  auto n94 = gate_xnor(b[1], n12);
  auto n172 = gate_xnor(b[1], n7);
  auto n3 = gate_nand(n61, n38);
  auto n21 = gate_or(n53, n52);
  auto n60 = gate_and(n43, n3);
  auto n55 = gate_and(n54, n21);
  auto n64 = gate_xnor(b[2], n21);
  auto n58 = gate_xnor(b[3], n60);
  auto n62 = gate_and(n61, n60);
  auto n25 = gate_or(n56, n55);
  auto n57 = gate_xnor(b[3], n25);
  auto n59 = gate_and(n58, n25);
  auto n63 = gate_and(n85, n59);
  auto n5 = gate_nand(n85, n57);
  auto n26 = gate_or(n63, n62);
  auto n84 = gate_and(n60, n5);
  auto n65 = gate_and(n64, n26);
  auto n90 = gate_xnor(n66, n65);
  auto n79 = gate_nor(n90, b[3]);
  auto n77 = gate_xnor(n171, n90);
  auto n68 = gate_and(n67, n26);
  auto n93 = gate_xnor(n69, n68);
  auto n76 = gate_and(n93, n175);
  auto n74 = gate_xnor(b[2], n93);
  auto n70 = gate_and(n26, b[0]);
  auto n96 = gate_xnor(n70, a[4]);
  auto n73 = gate_nor(b[1], n96);
  auto n71 = gate_xnor(n96, n177);
  auto n72 = gate_and(n71, n12);
  auto n81 = gate_xnor(b[4], n84);
  auto n86 = gate_and(n85, n84);
  auto n15 = gate_or(n73, n72);
  auto n75 = gate_and(n74, n15);
  auto n91 = gate_xnor(n15, b[2]);
  auto n20 = gate_or(n76, n75);
  auto n78 = gate_and(n77, n20);
  auto n88 = gate_xnor(n20, b[3]);
  auto n24 = gate_or(n79, n78);
  auto n80 = gate_xnor(b[4], n24);
  auto n82 = gate_and(n24, n81);
  auto n87 = gate_and(n83, n82);
  auto n4 = gate_nand(n83, n80);
  auto n27 = gate_or(n87, n86);
  auto n112 = gate_and(n84, n4);
  auto n89 = gate_and(n88, n27);
  auto n117 = gate_xnor(n90, n89);
  auto n110 = gate_and(n117, n167);
  auto n108 = gate_xnor(b[4], n117);
  auto n92 = gate_and(n91, n27);
  auto n120 = gate_xnor(n93, n92);
  auto n107 = gate_nor(n120, b[3]);
  auto n105 = gate_xnor(n171, n120);
  auto n95 = gate_and(n94, n27);
  auto n123 = gate_xnor(n96, n95);
  auto n104 = gate_and(n123, n175);
  auto n102 = gate_xnor(b[2], n123);
  auto n97 = gate_and(n27, b[0]);
  auto n127 = gate_xnor(n97, a[3]);
  auto n101 = gate_nor(b[1], n127);
  auto n99 = gate_xnor(n127, n177);
  auto n100 = gate_and(n99, n98);
  auto n115 = gate_and(n112, n163);
  auto n113 = gate_xnor(b[5], n112);
  auto n11 = gate_or(n101, n100);
  auto n103 = gate_and(n102, n11);
  auto n122 = gate_xnor(n11, b[2]);
  auto n14 = gate_or(n104, n103);
  auto n106 = gate_and(n105, n14);
  auto n119 = gate_xnor(n14, b[3]);
  auto n19 = gate_or(n107, n106);
  auto n109 = gate_and(n108, n19);
  auto n116 = gate_xnor(n19, b[4]);
  auto n23 = gate_or(n110, n109);
  auto n111 = gate_xnor(b[5], n23);
  auto n114 = gate_and(n23, n113);
  auto n6 = gate_nand(n153, n111);
  auto n28 = gate_or(n115, n114);
  auto n152 = gate_and(n112, n6);
  auto n197 = gate_not(n152);
  auto n129 = gate_and(n153, n28);
  auto n118 = gate_and(n129, n116);
  auto n158 = gate_xnor(n118, n117);
  auto n146 = gate_nor(n158, b[5]);
  auto n144 = gate_xnor(n163, n158);
  auto n121 = gate_and(n129, n119);
  auto n162 = gate_xnor(n121, n120);
  auto n143 = gate_and(n162, n167);
  auto n141 = gate_xnor(b[4], n162);
  auto n124 = gate_and(n129, n122);
  auto n166 = gate_xnor(n124, n123);
  auto n140 = gate_nor(n166, b[3]);
  auto n138 = gate_xnor(n171, n166);
  auto n128 = gate_and(n129, n126);
  auto n170 = gate_xnor(n128, n127);
  auto n137 = gate_and(n170, n175);
  auto n135 = gate_xnor(b[2], n170);
  auto n130 = gate_and(n129, b[0]);
  auto n174 = gate_xnor(n130, a[2]);
  auto n134 = gate_nor(b[1], n174);
  auto n132 = gate_xnor(n174, n177);
  auto n133 = gate_and(n132, n7);
  auto n150 = gate_xnor(n159, n197);
  auto n154 = gate_and(n153, n152);
  auto n198 = gate_and(b[7], n197);
  auto n9 = gate_or(n134, n133);
  auto n136 = gate_and(n135, n9);
  auto n168 = gate_xnor(n9, b[2]);
  auto n10 = gate_or(n137, n136);
  auto n139 = gate_and(n138, n10);
  auto n164 = gate_xnor(n10, b[3]);
  auto n13 = gate_or(n140, n139);
  auto n142 = gate_and(n141, n13);
  auto n160 = gate_xnor(n13, b[4]);
  auto n18 = gate_or(n143, n142);
  auto n145 = gate_and(n144, n18);
  auto n149 = gate_nor(n146, n145);
  auto n147 = gate_xnor(n149, n159);
  auto n148 = gate_and(n147, n200);
  auto n202 = gate_nor(n197, n148);
  auto n156 = gate_xnor(n18, b[5]);
  auto n151 = gate_nor(b[7], n149);
  auto n155 = gate_and(n151, n150);
  auto n196 = gate_and(n202, n200);
  auto n29 = gate_or(n155, n154);
  auto n157 = gate_and(n156, n29);
  auto n205 = gate_xnor(n158, n157);
  auto n195 = gate_and(n205, n159);
  auto n204 = gate_xnor(b[6], n205);
  auto n161 = gate_and(n160, n29);
  auto n209 = gate_xor(n162, n161);
  auto n192 = gate_and(n209, n163);
  auto n208 = gate_xnor(b[5], n209);
  auto n165 = gate_and(n164, n29);
  auto n213 = gate_xnor(n166, n165);
  auto n189 = gate_and(n213, n167);
  auto n212 = gate_xnor(b[4], n213);
  auto n169 = gate_and(n168, n29);
  auto n217 = gate_xor(n170, n169);
  auto n186 = gate_and(n217, n171);
  auto n216 = gate_xnor(b[3], n217);
  auto n173 = gate_and(n172, n29);
  auto n222 = gate_xnor(n174, n173);
  auto n183 = gate_and(n222, n175);
  auto n220 = gate_xnor(b[2], n222);
  auto n176 = gate_and(n29, b[0]);
  auto n227 = gate_xor(n176, a[1]);
  auto n180 = gate_and(n177, n227);
  auto n225 = gate_xnor(n227, b[1]);
  auto n179 = gate_and(n225, n178);
  auto n219 = gate_nor(n180, n179);
  auto n181 = gate_not(n219);
  auto n182 = gate_and(n220, n181);
  auto n215 = gate_nor(n183, n182);
  auto n184 = gate_not(n215);
  auto n185 = gate_and(n216, n184);
  auto n211 = gate_nor(n186, n185);
  auto n187 = gate_not(n211);
  auto n188 = gate_and(n212, n187);
  auto n207 = gate_nor(n189, n188);
  auto n190 = gate_not(n207);
  auto n191 = gate_and(n208, n190);
  auto n203 = gate_nor(n192, n191);
  auto n193 = gate_not(n203);
  auto n194 = gate_and(n204, n193);
  auto n206 = gate_xnor(n204, n203);
  auto n210 = gate_xnor(n208, n207);
  auto n214 = gate_xnor(n212, n211);
  auto n218 = gate_xnor(n216, n215);
  auto n223 = gate_xnor(n220, n219);
  auto n226 = gate_xnor(n225, n224);
  auto n22 = gate_or(n195, n194);
  auto n199 = gate_nor(n22, n196);
  auto n228 = gate_nor(n199, n198);
  auto n221 = gate_not(n228);
  auto n201 = gate_and(n22, n200);
  y[6] = gate_mux(n206, n205, n221);
  y[5] = gate_mux(n210, n209, n221);
  y[4] = gate_mux(n214, n213, n221);
  y[3] = gate_mux(n218, n217, n221);
  y[2] = gate_mux(n223, n222, n221);
  y[1] = gate_mux(n227, n226, n228);
  auto n230 = gate_and(n228, b[0]);
  y[0] = gate_xnor(n230, n229);
  auto n2 = gate_or(n221, n201);
  y[7] = gate_and(n202, n2);
}
template<> void $NameUint<8>::d_modsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n99 = gate_nor(a[0], a[1]);
  auto n100 = gate_not(a[2]);
  auto n73 = gate_and(n99, n100);
  auto n74 = gate_not(a[3]);
  auto n45 = gate_and(n73, n74);
  auto n46 = gate_not(a[4]);
  auto n23 = gate_and(n45, n46);
  auto n24 = gate_not(a[5]);
  auto n13 = gate_and(n23, n24);
  auto n258 = gate_xnor(b[7], b[5]);
  auto n179 = gate_xnor(b[7], b[6]);
  auto n128 = gate_and(n258, n179);
  auto n252 = gate_xnor(b[7], b[4]);
  auto n63 = gate_and(n128, n252);
  auto n246 = gate_xnor(b[7], b[3]);
  auto n30 = gate_and(n63, n246);
  auto n231 = gate_xnor(b[7], b[2]);
  auto n202 = gate_xnor(b[7], b[1]);
  auto n286 = gate_not(a[7]);
  auto n14 = gate_nor(n13, n286);
  auto n22 = gate_xnor(n14, a[6]);
  auto n15 = gate_and(b[0], n22);
  auto n240 = gate_not(n202);
  auto n203 = gate_not(b[7]);
  auto n25 = gate_nor(n286, n23);
  auto n43 = gate_xnor(n25, n24);
  auto n32 = gate_mux(n203, n43, b[0]);
  auto n47 = gate_nor(n286, n45);
  auto n71 = gate_xnor(n47, n46);
  auto n66 = gate_mux(n203, n71, b[0]);
  auto n189 = gate_not(n252);
  auto n194 = gate_not(n246);
  auto n60 = gate_not(n194);
  auto n67 = gate_xnor(n66, n240);
  auto n75 = gate_nor(n286, n73);
  auto n97 = gate_xnor(n75, n74);
  auto n93 = gate_mux(n203, n97, b[0]);
  auto n94 = gate_xnor(n93, n240);
  auto n101 = gate_nor(n286, n99);
  auto n147 = gate_xnor(n101, n100);
  auto n142 = gate_mux(n203, n147, b[0]);
  auto n184 = gate_not(n258);
  auto n143 = gate_xnor(n142, n240);
  auto n149 = gate_and(a[7], a[0]);
  auto n200 = gate_xor(a[1], n149);
  auto n195 = gate_mux(n203, n200, b[0]);
  auto n227 = gate_not(n179);
  auto n196 = gate_xnor(n195, n240);
  auto n241 = gate_mux(n203, a[0], b[0]);
  auto n238 = gate_xnor(a[0], a[7]);
  auto n242 = gate_xnor(n241, n240);
  auto n1 = gate_buf(n231);
  auto n36 = gate_and(n30, n1);
  auto n9 = gate_and(n36, n202);
  auto n10 = gate_and(b[0], n9);
  auto n11 = gate_nor(a[6], n10);
  auto n12 = gate_and(n13, n11);
  auto n19 = gate_and(a[7], n12);
  auto n16 = gate_xnor(n19, n202);
  auto n17 = gate_nor(n16, n15);
  auto n20 = gate_and(n36, n17);
  auto n18 = gate_not(n20);
  auto n33 = gate_and(n19, n18);
  auto n21 = gate_and(n20, b[0]);
  auto n39 = gate_nor(n22, n21);
  auto n28 = gate_and(n39, n202);
  auto n26 = gate_xnor(n240, n39);
  auto n27 = gate_and(n26, n32);
  auto n34 = gate_nor(n28, n27);
  auto n29 = gate_xnor(n1, n34);
  auto n31 = gate_xnor(n202, n39);
  auto n40 = gate_and(n32, n31);
  auto n38 = gate_and(n36, n33);
  auto n35 = gate_not(n34);
  auto n37 = gate_and(n36, n35);
  auto n41 = gate_nor(n38, n37);
  auto n65 = gate_mux(n40, n39, n41);
  auto n53 = gate_and(n1, n65);
  auto n199 = gate_not(n1);
  auto n55 = gate_xnor(n65, n199);
  auto n42 = gate_not(n41);
  auto n44 = gate_and(n42, b[0]);
  auto n68 = gate_xnor(n44, n43);
  auto n50 = gate_nor(n68, n240);
  auto n48 = gate_xnor(n202, n68);
  auto n49 = gate_and(n48, n66);
  auto n56 = gate_nor(n50, n49);
  auto n51 = gate_not(n56);
  auto n52 = gate_and(n55, n51);
  auto n58 = gate_nor(n53, n52);
  auto n54 = gate_xnor(n246, n58);
  auto n64 = gate_nor(n56, n55);
  auto n59 = gate_not(n58);
  auto n61 = gate_and(n60, n59);
  auto n5 = gate_nand(n63, n54);
  auto n6 = gate_nand(n30, n29);
  auto n57 = gate_and(n33, n6);
  auto n127 = gate_and(n57, n5);
  auto n88 = gate_and(n127, n252);
  auto n62 = gate_and(n246, n57);
  auto n7 = gate_or(n62, n61);
  auto n70 = gate_and(n63, n7);
  auto n117 = gate_mux(n65, n64, n70);
  auto n85 = gate_and(n117, n246);
  auto n113 = gate_xnor(n117, n194);
  auto n69 = gate_and(n70, n67);
  auto n91 = gate_xnor(n69, n68);
  auto n82 = gate_and(n91, n1);
  auto n80 = gate_xnor(n199, n91);
  auto n72 = gate_and(n70, b[0]);
  auto n95 = gate_xnor(n72, n71);
  auto n78 = gate_nor(n95, n240);
  auto n76 = gate_xnor(n202, n95);
  auto n77 = gate_and(n76, n93);
  auto n89 = gate_nor(n78, n77);
  auto n79 = gate_not(n89);
  auto n81 = gate_and(n80, n79);
  auto n114 = gate_nor(n82, n81);
  auto n83 = gate_not(n114);
  auto n84 = gate_and(n113, n83);
  auto n125 = gate_nor(n85, n84);
  auto n86 = gate_not(n125);
  auto n87 = gate_and(n252, n86);
  auto n90 = gate_xnor(n89, n1);
  auto n116 = gate_nor(n114, n113);
  auto n126 = gate_xnor(n252, n125);
  auto n4 = gate_nand(n128, n126);
  auto n8 = gate_or(n88, n87);
  auto n115 = gate_and(n8, n128);
  auto n92 = gate_and(n115, n90);
  auto n137 = gate_xnor(n92, n91);
  auto n112 = gate_nor(n137, n194);
  auto n110 = gate_xnor(n246, n137);
  auto n96 = gate_and(n115, n94);
  auto n141 = gate_xnor(n96, n95);
  auto n108 = gate_and(n141, n1);
  auto n106 = gate_xnor(n199, n141);
  auto n98 = gate_and(n115, b[0]);
  auto n145 = gate_xnor(n98, n97);
  auto n104 = gate_nor(n145, n240);
  auto n102 = gate_xnor(n202, n145);
  auto n103 = gate_and(n102, n142);
  auto n138 = gate_nor(n104, n103);
  auto n105 = gate_not(n138);
  auto n107 = gate_and(n106, n105);
  auto n133 = gate_nor(n108, n107);
  auto n109 = gate_not(n133);
  auto n111 = gate_and(n110, n109);
  auto n118 = gate_nor(n112, n111);
  auto n131 = gate_mux(n117, n116, n115);
  auto n120 = gate_xnor(n189, n131);
  auto n132 = gate_nor(n118, n120);
  auto n122 = gate_and(n131, n252);
  auto n119 = gate_not(n118);
  auto n121 = gate_and(n120, n119);
  auto n166 = gate_nor(n122, n121);
  auto n123 = gate_not(n166);
  auto n124 = gate_and(n123, n258);
  auto n130 = gate_and(n124, n179);
  auto n165 = gate_and(n127, n4);
  auto n129 = gate_and(n128, n165);
  auto n134 = gate_nor(n130, n129);
  auto n178 = gate_mux(n132, n131, n134);
  auto n135 = gate_xnor(n133, n60);
  auto n146 = gate_not(n134);
  auto n136 = gate_and(n135, n146);
  auto n183 = gate_xnor(n137, n136);
  auto n164 = gate_and(n183, n252);
  auto n162 = gate_xnor(n189, n183);
  auto n139 = gate_xnor(n138, n1);
  auto n140 = gate_and(n139, n146);
  auto n188 = gate_xnor(n141, n140);
  auto n160 = gate_nor(n188, n194);
  auto n158 = gate_xnor(n246, n188);
  auto n144 = gate_and(n143, n146);
  auto n193 = gate_xnor(n145, n144);
  auto n156 = gate_and(n193, n1);
  auto n154 = gate_xnor(n199, n193);
  auto n148 = gate_and(n146, b[0]);
  auto n198 = gate_xnor(n148, n147);
  auto n152 = gate_nor(n198, n240);
  auto n150 = gate_xnor(n202, n198);
  auto n151 = gate_and(n150, n195);
  auto n190 = gate_nor(n152, n151);
  auto n153 = gate_not(n190);
  auto n155 = gate_and(n154, n153);
  auto n185 = gate_nor(n156, n155);
  auto n157 = gate_not(n185);
  auto n159 = gate_and(n158, n157);
  auto n180 = gate_nor(n160, n159);
  auto n161 = gate_not(n180);
  auto n163 = gate_and(n162, n161);
  auto n170 = gate_nor(n164, n163);
  auto n172 = gate_xnor(n184, n178);
  auto n177 = gate_nor(n170, n172);
  auto n169 = gate_not(n165);
  auto n167 = gate_xnor(n166, n258);
  auto n168 = gate_and(n167, n179);
  auto n229 = gate_nor(n169, n168);
  auto n176 = gate_and(n229, n179);
  auto n174 = gate_and(n178, n258);
  auto n171 = gate_not(n170);
  auto n173 = gate_and(n172, n171);
  auto n226 = gate_nor(n174, n173);
  auto n175 = gate_nor(n227, n226);
  auto n181 = gate_xnor(n180, n252);
  auto n186 = gate_xnor(n185, n246);
  auto n191 = gate_xnor(n190, n1);
  auto n228 = gate_mux(n179, n227, n226);
  auto n233 = gate_and(n229, n228);
  auto n2 = gate_or(n176, n175);
  auto n268 = gate_mux(n178, n177, n2);
  auto n225 = gate_and(n268, n179);
  auto n265 = gate_xnor(n227, n268);
  auto n182 = gate_and(n181, n2);
  auto n263 = gate_xnor(n183, n182);
  auto n222 = gate_nor(n263, n184);
  auto n220 = gate_xnor(n258, n263);
  auto n187 = gate_and(n186, n2);
  auto n256 = gate_xnor(n188, n187);
  auto n218 = gate_and(n256, n252);
  auto n216 = gate_xnor(n189, n256);
  auto n192 = gate_and(n191, n2);
  auto n250 = gate_xnor(n193, n192);
  auto n214 = gate_nor(n250, n194);
  auto n212 = gate_xnor(n246, n250);
  auto n197 = gate_and(n196, n2);
  auto n236 = gate_xnor(n198, n197);
  auto n210 = gate_and(n236, n1);
  auto n208 = gate_xnor(n199, n236);
  auto n201 = gate_and(b[0], n2);
  auto n244 = gate_xor(n201, n200);
  auto n206 = gate_and(n244, n202);
  auto n204 = gate_xnor(n240, n244);
  auto n205 = gate_and(n204, n241);
  auto n232 = gate_nor(n206, n205);
  auto n207 = gate_not(n232);
  auto n209 = gate_and(n208, n207);
  auto n247 = gate_nor(n210, n209);
  auto n211 = gate_not(n247);
  auto n213 = gate_and(n212, n211);
  auto n253 = gate_nor(n214, n213);
  auto n215 = gate_not(n253);
  auto n217 = gate_and(n216, n215);
  auto n259 = gate_nor(n218, n217);
  auto n219 = gate_not(n259);
  auto n221 = gate_and(n220, n219);
  auto n266 = gate_nor(n222, n221);
  auto n223 = gate_not(n266);
  auto n224 = gate_and(n265, n223);
  auto n234 = gate_xnor(n232, n1);
  auto n248 = gate_xnor(n247, n246);
  auto n254 = gate_xnor(n253, n252);
  auto n261 = gate_xnor(n259, n258);
  auto n269 = gate_nor(n266, n265);
  auto n3 = gate_or(n225, n224);
  auto n230 = gate_and(n3, n233);
  auto n272 = gate_nor(n230, n286);
  auto n267 = gate_nor(n3, n233);
  auto n260 = gate_not(n267);
  auto n235 = gate_and(n234, n260);
  auto n237 = gate_xor(n236, n235);
  auto n282 = gate_xnor(n237, n286);
  auto n239 = gate_and(b[0], n260);
  auto n285 = gate_xnor(n239, n238);
  auto n245 = gate_and(a[7], n285);
  auto n243 = gate_and(n242, n260);
  auto n283 = gate_xnor(n244, n243);
  auto n281 = gate_and(n245, n283);
  auto n279 = gate_and(n282, n281);
  auto n249 = gate_and(n248, n260);
  auto n251 = gate_xnor(n250, n249);
  auto n280 = gate_xnor(n251, n286);
  auto n277 = gate_and(n279, n280);
  auto n255 = gate_and(n254, n260);
  auto n257 = gate_xor(n256, n255);
  auto n278 = gate_xnor(n257, n286);
  auto n275 = gate_and(n277, n278);
  auto n262 = gate_and(n261, n260);
  auto n264 = gate_xnor(n263, n262);
  auto n276 = gate_xnor(n264, n286);
  auto n273 = gate_and(n275, n276);
  auto n270 = gate_mux(n269, n268, n267);
  auto n274 = gate_xnor(n270, n286);
  auto n271 = gate_and(n273, n274);
  y[7] = gate_xor(n272, n271);
  y[6] = gate_xor(n274, n273);
  y[5] = gate_xor(n276, n275);
  y[4] = gate_xor(n278, n277);
  y[3] = gate_xor(n280, n279);
  y[2] = gate_xor(n282, n281);
  auto n284 = gate_nor(n286, n285);
  y[1] = gate_xnor(n284, n283);
  y[0] = gate_xnor(n286, n285);
}
template<> void $NameUint<8>::d_mul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(b[0], a[0]);
  auto n12 = gate_and(b[0], a[1]);
  auto n11 = gate_and(b[1], a[0]);
  y[1] = gate_xor(n12, n11);
  auto n31 = gate_and(b[1], a[1]);
  auto n32 = gate_and(b[2], a[0]);
  auto n15 = gate_xor(n31, n32);
  auto n16 = gate_and(n12, n11);
  auto n13 = gate_xnor(n15, n16);
  auto n14 = gate_and(b[0], a[2]);
  y[2] = gate_xnor(n13, n14);
  auto n18 = gate_and(n15, n14);
  auto n21 = gate_and(b[3], a[0]);
  auto n30 = gate_and(b[0], a[3]);
  auto n29 = gate_and(b[1], a[2]);
  auto n25 = gate_xnor(n30, n29);
  auto n38 = gate_and(n30, n29);
  auto n62 = gate_and(a[1], b[3]);
  auto n43 = gate_and(b[0], a[4]);
  auto n42 = gate_and(b[1], a[3]);
  auto n39 = gate_xnor(n43, n42);
  auto n47 = gate_and(b[2], a[2]);
  auto n45 = gate_and(b[4], a[0]);
  auto n46 = gate_xor(n45, n62);
  auto n55 = gate_xnor(n47, n46);
  auto n69 = gate_and(n43, n42);
  auto n66 = gate_and(a[3], b[2]);
  auto n44 = gate_xnor(n69, n66);
  auto n80 = gate_and(a[4], b[1]);
  auto n79 = gate_and(b[0], a[5]);
  auto n68 = gate_xnor(n80, n79);
  auto n73 = gate_xnor(n44, n68);
  auto n49 = gate_and(n62, n45);
  auto n48 = gate_and(n47, n46);
  auto n74 = gate_nor(n49, n48);
  auto n51 = gate_xor(n73, n74);
  auto n61 = gate_and(a[0], b[5]);
  auto n60 = gate_and(a[1], b[4]);
  auto n50 = gate_xnor(n61, n60);
  auto n59 = gate_and(b[3], a[2]);
  auto n75 = gate_xnor(n50, n59);
  auto n52 = gate_xor(n51, n75);
  auto n117 = gate_and(b[4], a[2]);
  auto n63 = gate_and(n117, n62);
  auto n65 = gate_and(a[5], b[1]);
  auto n112 = gate_and(b[0], a[6]);
  auto n93 = gate_xnor(n65, n112);
  auto n67 = gate_not(n66);
  auto n71 = gate_nor(n68, n67);
  auto n78 = gate_and(n74, n73);
  auto n76 = gate_nor(n74, n73);
  auto n77 = gate_nor(n76, n75);
  auto n130 = gate_nor(n78, n77);
  auto n115 = gate_and(n80, n79);
  auto n81 = gate_xnor(n115, n117);
  auto n116 = gate_and(a[3], b[3]);
  auto n129 = gate_xnor(n81, n116);
  auto n83 = gate_xnor(n130, n129);
  auto n101 = gate_and(a[0], b[6]);
  auto n100 = gate_and(a[1], b[5]);
  auto n82 = gate_xnor(n101, n100);
  auto n99 = gate_and(a[4], b[2]);
  auto n128 = gate_xnor(n82, n99);
  auto n85 = gate_xnor(n83, n128);
  auto n111 = gate_and(b[3], a[4]);
  auto n98 = gate_and(b[5], a[2]);
  auto n97 = gate_and(b[6], a[1]);
  auto n109 = gate_xor(n98, n97);
  auto n102 = gate_and(n101, n100);
  auto n105 = gate_and(b[7], a[0]);
  auto n104 = gate_and(b[4], a[3]);
  auto n106 = gate_xnor(n105, n104);
  auto n113 = gate_and(b[1], n112);
  auto n114 = gate_xor(n113, b[2]);
  auto n125 = gate_and(a[5], n114);
  auto n118 = gate_and(n117, n116);
  auto n121 = gate_and(b[1], a[6]);
  auto n120 = gate_and(a[7], b[0]);
  auto n122 = gate_xnor(n121, n120);
  auto n131 = gate_and(n130, n129);
  auto n2 = gate_or(n60, n59);
  auto n3 = gate_or(n15, a[2]);
  auto n4 = gate_nand(n68, n67);
  auto n5 = gate_or(n130, n129);
  auto n6 = gate_or(n117, n116);
  auto n8 = gate_or(n101, n100);
  auto n9 = gate_or(n62, n31);
  auto n10 = gate_nand(n31, n32);
  auto n17 = gate_and(n16, n3);
  auto n23 = gate_nor(n18, n17);
  auto n19 = gate_and(a[1], n10);
  auto n20 = gate_and(n19, b[2]);
  auto n22 = gate_xnor(n21, n20);
  auto n27 = gate_nor(n23, n22);
  auto n26 = gate_and(n23, n22);
  auto n24 = gate_nor(n27, n26);
  y[3] = gate_xnor(n24, n25);
  auto n28 = gate_nor(n26, n25);
  auto n35 = gate_nor(n28, n27);
  auto n37 = gate_and(n32, n9);
  auto n33 = gate_xnor(n38, n37);
  auto n34 = gate_xnor(n33, n39);
  auto n54 = gate_and(n35, n34);
  auto n57 = gate_nor(n35, n34);
  auto n36 = gate_nor(n54, n57);
  y[4] = gate_xnor(n36, n55);
  auto n41 = gate_nor(n38, n37);
  auto n56 = gate_nor(n55, n54);
  auto n88 = gate_nor(n57, n56);
  auto n64 = gate_and(n61, n2);
  auto n92 = gate_nor(n64, n63);
  auto n72 = gate_xor(n92, n93);
  auto n70 = gate_and(n69, n4);
  auto n94 = gate_nor(n71, n70);
  auto n84 = gate_xnor(n72, n94);
  auto n133 = gate_nor(n84, n85);
  auto n137 = gate_and(n85, n84);
  auto n91 = gate_nor(n133, n137);
  auto n95 = gate_and(n94, n93);
  auto n103 = gate_and(n8, n99);
  auto n107 = gate_nor(n103, n102);
  auto n108 = gate_xnor(n107, n106);
  auto n110 = gate_xnor(n109, n108);
  auto n127 = gate_xnor(n111, n110);
  auto n119 = gate_and(n6, n115);
  auto n123 = gate_nor(n119, n118);
  auto n124 = gate_xnor(n123, n122);
  auto n126 = gate_xor(n125, n124);
  auto n141 = gate_xnor(n127, n126);
  auto n132 = gate_and(n128, n5);
  auto n139 = gate_nor(n132, n131);
  auto n134 = gate_not(n133);
  auto n1 = gate_or(n94, n93);
  auto n7 = gate_nand(n38, n37);
  auto n40 = gate_and(n39, n7);
  auto n53 = gate_nor(n41, n40);
  auto n90 = gate_nor(n53, n52);
  auto n86 = gate_and(n53, n52);
  auto n58 = gate_nor(n90, n86);
  y[5] = gate_xnor(n58, n88);
  auto n87 = gate_not(n86);
  auto n89 = gate_and(n88, n87);
  auto n135 = gate_nor(n90, n89);
  y[6] = gate_xor(n91, n135);
  auto n96 = gate_and(n92, n1);
  auto n143 = gate_nor(n96, n95);
  auto n136 = gate_and(n135, n134);
  auto n138 = gate_nor(n137, n136);
  auto n140 = gate_xor(n139, n138);
  auto n142 = gate_xnor(n141, n140);
  y[7] = gate_xor(n143, n142);
}
template<> void $NameUint<8>::d_redand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n8 = gate_and(a[1], a[3]);
  auto n7 = gate_and(a[2], a[0]);
  auto n12 = gate_and(n8, n7);
  auto n10 = gate_and(a[5], a[7]);
  auto n9 = gate_and(a[6], a[4]);
  auto n11 = gate_and(n10, n9);
  y[0] = gate_and(n12, n11);
}
template<> void $NameUint<8>::d_rednand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n11 = gate_and(a[2], a[3]);
  auto n10 = gate_and(a[1], a[0]);
  auto n12 = gate_and(n11, n10);
  auto n15 = gate_and(n12, a[7]);
  auto n13 = gate_and(a[6], a[5]);
  auto n14 = gate_and(n13, a[4]);
  y[0] = gate_nand(n15, n14);
}
template<> void $NameUint<8>::d_rednor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n9 = gate_nor(a[1], a[0]);
  auto n8 = gate_nor(a[3], a[2]);
  auto n13 = gate_and(n9, n8);
  auto n11 = gate_nor(a[5], a[4]);
  auto n10 = gate_nor(a[7], a[6]);
  auto n12 = gate_and(n11, n10);
  y[0] = gate_and(n13, n12);
}
template<> void $NameUint<8>::d_redor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n14 = gate_nor(a[1], a[0]);
  auto n10 = gate_nor(a[3], a[2]);
  auto n9 = gate_nor(a[5], a[4]);
  auto n12 = gate_and(n10, n9);
  auto n11 = gate_nor(a[7], a[6]);
  auto n13 = gate_and(n12, n11);
  y[0] = gate_nand(n14, n13);
}
template<> void $NameUint<8>::d_redxnor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n13 = gate_xnor(a[1], a[0]);
  auto n11 = gate_xnor(a[3], a[2]);
  auto n9 = gate_xnor(a[5], a[4]);
  auto n8 = gate_xnor(a[6], a[7]);
  auto n10 = gate_xnor(n9, n8);
  auto n12 = gate_xnor(n11, n10);
  y[0] = gate_xnor(n13, n12);
}
template<> void $NameUint<8>::d_redxor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_xnor(a[5], a[4]);
  auto n8 = gate_xnor(a[6], a[7]);
  auto n7 = gate_xnor(a[1], a[0]);
  auto n9 = gate_xnor(n8, n7);
  auto n12 = gate_xnor(n10, n9);
  auto n11 = gate_xor(a[3], a[2]);
  y[0] = gate_xnor(n12, n11);
}
template<> void $NameUint<8>::d_sll
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_nor(b[5], b[3]);
  auto n34 = gate_nor(b[4], b[6]);
  auto n37 = gate_and(n35, n34);
  auto n36 = gate_not(b[7]);
  auto n41 = gate_and(n37, n36);
  auto n38 = gate_not(b[2]);
  auto n66 = gate_and(n41, n38);
  auto n39 = gate_mux(a[7], a[5], b[1]);
  auto n45 = gate_mux(a[6], a[4], b[1]);
  auto n40 = gate_mux(n39, n45, b[0]);
  auto n43 = gate_and(n66, n40);
  auto n58 = gate_and(b[2], n41);
  auto n55 = gate_mux(a[3], a[1], b[1]);
  auto n44 = gate_mux(a[2], a[0], b[1]);
  auto n62 = gate_mux(n55, n44, b[0]);
  auto n42 = gate_and(n58, n62);
  auto n51 = gate_not(b[1]);
  auto n52 = gate_and(a[1], n51);
  auto n63 = gate_mux(n44, n52, b[0]);
  auto n48 = gate_and(n58, n63);
  auto n49 = gate_mux(a[5], a[3], b[1]);
  auto n46 = gate_mux(n45, n49, b[0]);
  auto n47 = gate_and(n66, n46);
  auto n56 = gate_mux(a[4], a[2], b[1]);
  auto n50 = gate_mux(n49, n56, b[0]);
  auto n54 = gate_and(n66, n50);
  auto n67 = gate_and(a[0], n51);
  auto n64 = gate_mux(n52, n67, b[0]);
  auto n53 = gate_and(n58, n64);
  auto n57 = gate_mux(n56, n55, b[0]);
  auto n61 = gate_and(n66, n57);
  auto n65 = gate_not(b[0]);
  auto n59 = gate_and(n58, n65);
  auto n60 = gate_and(n67, n59);
  y[3] = gate_and(n66, n62);
  y[2] = gate_and(n66, n63);
  y[1] = gate_and(n66, n64);
  auto n68 = gate_and(n66, n65);
  y[0] = gate_and(n68, n67);
  y[7] = gate_or(n43, n42);
  y[4] = gate_or(n61, n60);
  y[5] = gate_or(n54, n53);
  y[6] = gate_or(n48, n47);
}
template<> void $NameUint<8>::d_slr
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_nor(b[5], b[3]);
  auto n34 = gate_nor(b[4], b[6]);
  auto n37 = gate_and(n35, n34);
  auto n36 = gate_not(b[7]);
  auto n45 = gate_and(n37, n36);
  auto n38 = gate_not(b[2]);
  auto n64 = gate_and(n45, n38);
  auto n46 = gate_not(b[0]);
  auto n39 = gate_and(n64, n46);
  auto n40 = gate_not(b[1]);
  auto n48 = gate_and(a[7], n40);
  y[7] = gate_and(n39, n48);
  auto n41 = gate_and(a[6], n40);
  auto n53 = gate_mux(n41, n48, b[0]);
  y[6] = gate_and(n64, n53);
  auto n42 = gate_mux(a[5], a[7], b[1]);
  auto n56 = gate_mux(n42, n41, b[0]);
  y[5] = gate_and(n64, n56);
  auto n43 = gate_mux(a[4], a[6], b[1]);
  auto n66 = gate_mux(n43, n42, b[0]);
  y[4] = gate_and(n64, n66);
  auto n51 = gate_mux(a[3], a[5], b[1]);
  auto n44 = gate_mux(n51, n43, b[0]);
  auto n50 = gate_and(n64, n44);
  auto n65 = gate_and(b[2], n45);
  auto n47 = gate_and(n65, n46);
  auto n49 = gate_and(n48, n47);
  auto n57 = gate_mux(a[2], a[4], b[1]);
  auto n52 = gate_mux(n57, n51, b[0]);
  auto n55 = gate_and(n64, n52);
  auto n54 = gate_and(n65, n53);
  auto n60 = gate_and(n65, n56);
  auto n61 = gate_mux(a[1], a[3], b[1]);
  auto n58 = gate_mux(n61, n57, b[0]);
  auto n59 = gate_and(n64, n58);
  auto n62 = gate_mux(a[0], a[2], b[1]);
  auto n63 = gate_mux(n62, n61, b[0]);
  auto n68 = gate_and(n64, n63);
  auto n67 = gate_and(n66, n65);
  y[0] = gate_or(n68, n67);
  y[1] = gate_or(n60, n59);
  y[3] = gate_or(n50, n49);
  y[2] = gate_or(n55, n54);
}
template<> void $NameUint<8>::d_srasig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_buf(a[7]);
  auto n30 = gate_nor(b[1], b[0]);
  auto n47 = gate_mux(y[7], a[6], n30);
  auto n32 = gate_nor(b[5], b[3]);
  auto n31 = gate_nor(b[4], b[6]);
  auto n34 = gate_and(n32, n31);
  auto n33 = gate_not(b[7]);
  auto n46 = gate_and(n34, n33);
  auto n44 = gate_not(n46);
  auto n59 = gate_nor(n44, b[2]);
  y[6] = gate_mux(y[7], n47, n59);
  auto n35 = gate_mux(a[5], a[6], b[0]);
  auto n49 = gate_mux(n35, y[7], b[1]);
  y[5] = gate_mux(y[7], n49, n59);
  auto n38 = gate_mux(a[4], a[6], b[1]);
  auto n36 = gate_mux(a[5], y[7], b[1]);
  auto n61 = gate_mux(n38, n36, b[0]);
  y[4] = gate_mux(y[7], n61, n59);
  auto n37 = gate_not(n59);
  auto n41 = gate_and(y[7], n37);
  auto n42 = gate_mux(a[3], a[5], b[1]);
  auto n39 = gate_mux(n42, n38, b[0]);
  auto n40 = gate_and(n59, n39);
  auto n50 = gate_mux(a[2], a[4], b[1]);
  auto n43 = gate_mux(n50, n42, b[0]);
  auto n45 = gate_and(n59, n43);
  auto n54 = gate_and(y[7], n44);
  auto n48 = gate_nor(n45, n54);
  auto n60 = gate_and(b[2], n46);
  auto n53 = gate_and(n60, n49);
  auto n56 = gate_mux(a[1], a[3], b[1]);
  auto n51 = gate_mux(n56, n50, b[0]);
  auto n52 = gate_and(n59, n51);
  auto n55 = gate_nor(n53, n52);
  auto n64 = gate_not(n54);
  auto n57 = gate_mux(a[0], a[2], b[1]);
  auto n58 = gate_mux(n57, n56, b[0]);
  auto n63 = gate_and(n59, n58);
  auto n62 = gate_and(n61, n60);
  auto n65 = gate_nor(n63, n62);
  y[3] = gate_or(n41, n40);
  y[0] = gate_nand(n65, n64);
  y[1] = gate_nand(n55, n64);
  auto n29 = gate_nand(n60, n47);
  y[2] = gate_nand(n48, n29);
}
template<> void $NameUint<8>::d_sub
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n2 = gate_not(a[0]);
  y[0] = gate_xnor(b[0], n2);
  auto n4 = gate_and(b[0], n2);
  auto n6 = gate_xnor(a[1], b[1]);
  y[1] = gate_xnor(n4, n6);
  auto n3 = gate_not(b[1]);
  auto n8 = gate_and(a[1], n3);
  auto n5 = gate_not(n4);
  auto n7 = gate_and(n6, n5);
  auto n10 = gate_nor(n8, n7);
  auto n12 = gate_xnor(a[2], b[2]);
  y[2] = gate_xnor(n10, n12);
  auto n9 = gate_not(b[2]);
  auto n14 = gate_and(a[2], n9);
  auto n11 = gate_not(n10);
  auto n13 = gate_and(n12, n11);
  auto n16 = gate_nor(n14, n13);
  auto n18 = gate_xnor(a[3], b[3]);
  y[3] = gate_xnor(n16, n18);
  auto n15 = gate_not(b[3]);
  auto n20 = gate_and(a[3], n15);
  auto n17 = gate_not(n16);
  auto n19 = gate_and(n18, n17);
  auto n22 = gate_nor(n20, n19);
  auto n24 = gate_xnor(a[4], b[4]);
  y[4] = gate_xnor(n22, n24);
  auto n21 = gate_not(b[4]);
  auto n26 = gate_and(a[4], n21);
  auto n23 = gate_not(n22);
  auto n25 = gate_and(n24, n23);
  auto n28 = gate_nor(n26, n25);
  auto n30 = gate_xnor(a[5], b[5]);
  y[5] = gate_xnor(n28, n30);
  auto n27 = gate_not(b[5]);
  auto n32 = gate_and(a[5], n27);
  auto n29 = gate_not(n28);
  auto n31 = gate_and(n30, n29);
  auto n34 = gate_nor(n32, n31);
  auto n36 = gate_xnor(a[6], b[6]);
  y[6] = gate_xnor(n34, n36);
  auto n33 = gate_not(b[6]);
  auto n38 = gate_and(a[6], n33);
  auto n35 = gate_not(n34);
  auto n37 = gate_and(n36, n35);
  auto n40 = gate_nor(n38, n37);
  auto n39 = gate_xnor(a[7], b[7]);
  y[7] = gate_xnor(n40, n39);
}
template<> void $NameUint<8>::d_uminus
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_buf(a[0]);
  auto n22 = gate_nor(a[1], y[0]);
  auto n12 = gate_not(a[2]);
  auto n21 = gate_and(n22, n12);
  auto n13 = gate_not(a[3]);
  auto n20 = gate_and(n21, n13);
  auto n14 = gate_not(a[4]);
  auto n19 = gate_and(n20, n14);
  auto n15 = gate_not(a[5]);
  auto n18 = gate_and(n19, n15);
  auto n16 = gate_not(a[6]);
  auto n17 = gate_and(n18, n16);
  y[7] = gate_xnor(n17, a[7]);
  y[6] = gate_xnor(n18, a[6]);
  y[5] = gate_xnor(n19, a[5]);
  y[4] = gate_xnor(n20, a[4]);
  y[3] = gate_xnor(n21, a[3]);
  y[2] = gate_xnor(n22, a[2]);
  y[1] = gate_xor(a[1], y[0]);
}
