// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<> void $NameUint<7>::d_add
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n2 = gate_and(a[0], b[0]);
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_nand(b[1], a[1]);
  auto n4 = gate_nand(n3, n2);
  auto n6 = gate_nand(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_nand(b[2], a[2]);
  auto n8 = gate_nand(n7, n6);
  auto n10 = gate_nand(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_nand(b[3], a[3]);
  auto n12 = gate_nand(n11, n10);
  auto n14 = gate_nand(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_nand(b[4], a[4]);
  auto n16 = gate_nand(n15, n14);
  auto n18 = gate_nand(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n21 = gate_nand(n19, n18);
  auto n20 = gate_nand(b[5], a[5]);
  auto n22 = gate_nand(n21, n20);
  auto n23 = gate_xor(b[6], n22);
  y[6] = gate_xor(a[6], n23);
}
template<> void $NameUint<7>::d_bitand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_and(b[6], a[6]);
  y[0] = gate_and(b[0], a[0]);
  y[1] = gate_and(b[1], a[1]);
  y[2] = gate_and(b[2], a[2]);
  y[3] = gate_and(b[3], a[3]);
  y[4] = gate_and(b[4], a[4]);
  y[5] = gate_and(b[5], a[5]);
}
template<> void $NameUint<7>::d_bitnot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[6] = gate_not(a[6]);
  y[5] = gate_not(a[5]);
  y[4] = gate_not(a[4]);
  y[3] = gate_not(a[3]);
  y[2] = gate_not(a[2]);
  y[1] = gate_not(a[1]);
  y[0] = gate_not(a[0]);
}
template<> void $NameUint<7>::d_bitor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n16 = gate_not(b[6]);
  auto n15 = gate_not(a[6]);
  y[6] = gate_nand(n16, n15);
  auto n18 = gate_not(b[5]);
  auto n17 = gate_not(a[5]);
  y[5] = gate_nand(n18, n17);
  auto n20 = gate_not(b[4]);
  auto n19 = gate_not(a[4]);
  y[4] = gate_nand(n20, n19);
  auto n22 = gate_not(b[3]);
  auto n21 = gate_not(a[3]);
  y[3] = gate_nand(n22, n21);
  auto n24 = gate_not(b[2]);
  auto n23 = gate_not(a[2]);
  y[2] = gate_nand(n24, n23);
  auto n26 = gate_not(b[1]);
  auto n25 = gate_not(a[1]);
  y[1] = gate_nand(n26, n25);
  auto n28 = gate_not(b[0]);
  auto n27 = gate_not(a[0]);
  y[0] = gate_nand(n28, n27);
}
template<> void $NameUint<7>::d_bitsum
(vector<Bit> & y, const vector<Bit> & a, const Bit & zero) noexcept
{
  y[3] = gate_buf(zero);
  y[4] = gate_buf(zero);
  y[5] = gate_buf(zero);
  y[6] = gate_buf(zero);
  auto N0 = gate_buf(a[0]);
  auto n1 = gate_xor(N0, a[1]);
  auto n7 = gate_xor(n1, a[2]);
  auto n9 = gate_xor(n7, a[6]);
  auto n4 = gate_xor(a[4], a[3]);
  auto n8 = gate_xor(n4, a[5]);
  y[0] = gate_xor(n9, n8);
  auto n3 = gate_nand(N0, a[1]);
  auto n2 = gate_nand(n1, a[2]);
  auto n12 = gate_nand(n3, n2);
  auto n6 = gate_nand(a[4], a[3]);
  auto n5 = gate_nand(n4, a[5]);
  auto n13 = gate_nand(n6, n5);
  auto n15 = gate_xor(n12, n13);
  auto n11 = gate_nand(n7, a[6]);
  auto n10 = gate_nand(n9, n8);
  auto n14 = gate_nand(n11, n10);
  y[1] = gate_xor(n15, n14);
  auto n17 = gate_nand(n13, n12);
  auto n16 = gate_nand(n15, n14);
  y[2] = gate_nand(n17, n16);
}
template<> void $NameUint<7>::d_bitxor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_xor(b[6], a[6]);
  y[5] = gate_xor(b[5], a[5]);
  y[4] = gate_xor(b[4], a[4]);
  y[3] = gate_xor(b[3], a[3]);
  y[2] = gate_xor(b[2], a[2]);
  y[1] = gate_xor(b[1], a[1]);
  y[0] = gate_xor(b[0], a[0]);
}
template<> void $NameUint<7>::d_boolmul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_and(a[0], b[6]);
  y[5] = gate_and(a[0], b[5]);
  y[4] = gate_and(a[0], b[4]);
  y[3] = gate_and(a[0], b[3]);
  y[2] = gate_and(a[0], b[2]);
  y[1] = gate_and(a[0], b[1]);
  y[0] = gate_and(a[0], b[0]);
}
template<> void $NameUint<7>::d_boolmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  y[0] = gate_mux(c[0], b[0], a[0]);
  y[1] = gate_mux(c[1], b[1], a[0]);
  y[2] = gate_mux(c[2], b[2], a[0]);
  y[3] = gate_mux(c[3], b[3], a[0]);
  y[4] = gate_mux(c[4], b[4], a[0]);
  y[5] = gate_mux(c[5], b[5], a[0]);
  y[6] = gate_mux(c[6], b[6], a[0]);
}
template<> void $NameUint<7>::d_carryadd
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n2 = gate_and(a[0], b[0]);
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_nand(b[1], a[1]);
  auto n4 = gate_nand(n3, n2);
  auto n6 = gate_nand(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_nand(b[2], a[2]);
  auto n8 = gate_nand(n7, n6);
  auto n10 = gate_nand(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_nand(b[3], a[3]);
  auto n12 = gate_nand(n11, n10);
  auto n14 = gate_nand(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_nand(b[4], a[4]);
  auto n16 = gate_nand(n15, n14);
  auto n18 = gate_nand(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n21 = gate_nand(b[5], a[5]);
  auto n20 = gate_nand(n19, n18);
  y[6] = gate_nand(n21, n20);
}
template<> void $NameUint<7>::d_dec
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[1], y[0]);
  auto n6 = gate_not(a[1]);
  auto n2 = gate_and(n6, y[0]);
  y[2] = gate_xor(a[2], n2);
  auto n7 = gate_not(a[2]);
  auto n3 = gate_and(n2, n7);
  y[3] = gate_xor(a[3], n3);
  auto n8 = gate_not(a[3]);
  auto n4 = gate_and(n3, n8);
  y[4] = gate_xor(a[4], n4);
  auto n9 = gate_not(a[4]);
  auto n5 = gate_and(n4, n9);
  y[5] = gate_xor(a[5], n5);
  auto n12 = gate_not(a[6]);
  auto n10 = gate_not(a[5]);
  auto n11 = gate_nand(n5, n10);
  y[6] = gate_xor(n12, n11);
}
template<> void $NameUint<7>::d_div
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n151 = gate_not(b[6]);
  auto n139 = gate_not(b[5]);
  auto n4 = gate_and(n151, n139);
  auto n134 = gate_not(b[4]);
  auto n3 = gate_and(n4, n134);
  auto n104 = gate_not(b[3]);
  auto n2 = gate_and(n3, n104);
  auto n120 = gate_not(b[2]);
  auto n6 = gate_and(n2, n120);
  auto n19 = gate_not(a[6]);
  auto n10 = gate_nand(b[1], n19);
  auto n5 = gate_and(n6, n10);
  auto n11 = gate_not(a[5]);
  auto n12 = gate_nand(b[0], n11);
  auto n21 = gate_nand(n5, n12);
  y[5] = gate_not(n21);
  auto n18 = gate_nand(n19, b[2]);
  auto n13 = gate_nand(y[5], b[0]);
  auto n31 = gate_nand(a[5], n13);
  auto n14 = gate_not(n31);
  auto n107 = gate_not(b[1]);
  auto n1 = gate_and(n107, n6);
  auto n16 = gate_nand(n14, n107);
  auto n27 = gate_xor(b[1], n31);
  auto n33 = gate_not(a[4]);
  auto n28 = gate_nand(b[0], n33);
  auto n15 = gate_nand(n27, n28);
  auto n17 = gate_nand(n16, n15);
  auto n23 = gate_nand(n18, n17);
  auto n20 = gate_nand(b[0], n19);
  auto n154 = gate_nand(n1, n20);
  y[6] = gate_not(n154);
  auto n7 = gate_and(a[6], n154);
  auto n39 = gate_nand(n7, n21);
  auto n26 = gate_not(n39);
  auto n22 = gate_nand(n120, n26);
  auto n24 = gate_nand(n23, n22);
  auto n25 = gate_nand(n2, n24);
  y[4] = gate_not(n25);
  auto n63 = gate_nand(n26, n25);
  auto n46 = gate_not(n63);
  auto n43 = gate_nand(n46, n104);
  auto n29 = gate_not(n27);
  auto n30 = gate_nand(n29, n28);
  auto n36 = gate_mux(n31, n30, y[4]);
  auto n48 = gate_xor(b[2], n36);
  auto n32 = gate_nand(y[4], b[0]);
  auto n54 = gate_xor(n33, n32);
  auto n35 = gate_nand(n107, n54);
  auto n52 = gate_xor(n107, n54);
  auto n56 = gate_not(a[3]);
  auto n51 = gate_nand(b[0], n56);
  auto n34 = gate_nand(n52, n51);
  auto n47 = gate_nand(n35, n34);
  auto n38 = gate_nand(n48, n47);
  auto n50 = gate_not(n36);
  auto n37 = gate_nand(n120, n50);
  auto n41 = gate_nand(n38, n37);
  auto n40 = gate_nand(b[3], n39);
  auto n42 = gate_nand(n41, n40);
  auto n44 = gate_nand(n43, n42);
  auto n45 = gate_nand(n3, n44);
  y[3] = gate_not(n45);
  auto n98 = gate_nand(n46, n45);
  auto n69 = gate_not(n98);
  auto n67 = gate_nand(n69, n134);
  auto n49 = gate_xor(n48, n47);
  auto n72 = gate_mux(n50, n49, y[3]);
  auto n70 = gate_xor(n104, n72);
  auto n53 = gate_xor(n52, n51);
  auto n77 = gate_mux(n54, n53, y[3]);
  auto n60 = gate_nand(n77, n120);
  auto n74 = gate_xor(n120, n77);
  auto n55 = gate_nand(y[3], b[0]);
  auto n82 = gate_xor(n56, n55);
  auto n58 = gate_nand(n107, n82);
  auto n80 = gate_xor(n107, n82);
  auto n84 = gate_not(a[2]);
  auto n79 = gate_nand(b[0], n84);
  auto n57 = gate_nand(n80, n79);
  auto n75 = gate_nand(n58, n57);
  auto n59 = gate_nand(n74, n75);
  auto n71 = gate_nand(n60, n59);
  auto n62 = gate_nand(n70, n71);
  auto n61 = gate_nand(n72, n104);
  auto n65 = gate_nand(n62, n61);
  auto n64 = gate_nand(b[4], n63);
  auto n66 = gate_nand(n65, n64);
  auto n68 = gate_nand(n67, n66);
  auto n76 = gate_nand(n4, n68);
  auto n9 = gate_and(n69, n76);
  y[2] = gate_not(n76);
  auto n96 = gate_nand(n9, n139);
  auto n73 = gate_xor(n71, n70);
  auto n142 = gate_mux(n73, n72, n76);
  auto n140 = gate_xor(n142, n134);
  auto n78 = gate_xor(n75, n74);
  auto n130 = gate_mux(n78, n77, n76);
  auto n90 = gate_nand(n130, n104);
  auto n128 = gate_xor(n130, n104);
  auto n81 = gate_xor(n80, n79);
  auto n101 = gate_mux(n82, n81, y[2]);
  auto n88 = gate_nand(n101, n120);
  auto n99 = gate_xor(n120, n101);
  auto n83 = gate_nand(y[2], b[0]);
  auto n117 = gate_xor(n84, n83);
  auto n86 = gate_nand(n107, n117);
  auto n115 = gate_xor(n107, n117);
  auto n106 = gate_not(a[1]);
  auto n114 = gate_nand(b[0], n106);
  auto n85 = gate_nand(n115, n114);
  auto n100 = gate_nand(n86, n85);
  auto n87 = gate_nand(n99, n100);
  auto n129 = gate_nand(n88, n87);
  auto n89 = gate_nand(n128, n129);
  auto n141 = gate_nand(n90, n89);
  auto n92 = gate_nand(n140, n141);
  auto n91 = gate_nand(n142, n134);
  auto n94 = gate_nand(n92, n91);
  auto n93 = gate_nand(b[5], n98);
  auto n95 = gate_nand(n94, n93);
  auto n97 = gate_nand(n96, n95);
  auto n150 = gate_nand(n151, n97);
  auto n8 = gate_and(n151, n150);
  y[1] = gate_not(n150);
  auto n149 = gate_nand(b[6], n98);
  auto n102 = gate_xor(n100, n99);
  auto n103 = gate_mux(n102, n101, n150);
  auto n127 = gate_nand(n104, n103);
  auto n125 = gate_xor(n104, n103);
  auto n105 = gate_nand(y[1], b[0]);
  auto n108 = gate_xor(n106, n105);
  auto n113 = gate_nand(n108, n107);
  auto n111 = gate_xor(n108, n107);
  auto n109 = gate_not(a[0]);
  auto n110 = gate_nand(b[0], n109);
  auto n112 = gate_nand(n111, n110);
  auto n119 = gate_nand(n113, n112);
  auto n116 = gate_xor(n115, n114);
  auto n118 = gate_mux(n117, n116, y[1]);
  auto n123 = gate_nand(n119, n118);
  auto n121 = gate_xor(n119, n118);
  auto n122 = gate_nand(n121, n120);
  auto n124 = gate_nand(n123, n122);
  auto n126 = gate_nand(n125, n124);
  auto n133 = gate_nand(n127, n126);
  auto n131 = gate_xor(n129, n128);
  auto n132 = gate_mux(n131, n130, n150);
  auto n137 = gate_nand(n133, n132);
  auto n135 = gate_xor(n133, n132);
  auto n136 = gate_nand(n135, n134);
  auto n138 = gate_nand(n137, n136);
  auto n147 = gate_nand(n139, n138);
  auto n145 = gate_xor(n139, n138);
  auto n143 = gate_xor(n141, n140);
  auto n144 = gate_mux(n143, n142, n150);
  auto n146 = gate_nand(n145, n144);
  auto n148 = gate_nand(n147, n146);
  auto n153 = gate_nand(n149, n148);
  auto n152 = gate_nand(n9, n8);
  y[0] = gate_nand(n153, n152);
}
template<> void $NameUint<7>::d_divsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n203 = gate_not(b[6]);
  auto n192 = gate_xor(a[6], n203);
  auto n206 = gate_not(n192);
  auto n115 = gate_not(a[1]);
  auto n140 = gate_not(a[0]);
  auto n81 = gate_nand(n115, n140);
  auto n18 = gate_not(n81);
  auto n17 = gate_not(a[2]);
  auto n54 = gate_nand(n18, n17);
  auto n20 = gate_not(n54);
  auto n19 = gate_not(a[3]);
  auto n35 = gate_nand(n20, n19);
  auto n22 = gate_not(n35);
  auto n21 = gate_not(a[4]);
  auto n25 = gate_nand(n22, n21);
  auto n23 = gate_not(n25);
  auto n27 = gate_not(a[5]);
  auto n12 = gate_and(n23, n27);
  auto n42 = gate_nand(a[6], n12);
  auto n24 = gate_not(n42);
  auto n179 = gate_xor(b[5], b[6]);
  auto n131 = gate_not(n179);
  auto n164 = gate_xor(b[4], b[6]);
  auto n101 = gate_not(n164);
  auto n5 = gate_and(n131, n101);
  auto n138 = gate_xor(b[3], b[6]);
  auto n167 = gate_not(n138);
  auto n4 = gate_and(n5, n167);
  auto n149 = gate_xor(b[2], b[6]);
  auto n135 = gate_not(n149);
  auto n3 = gate_and(n4, n135);
  auto n13 = gate_and(b[0], n3);
  auto n142 = gate_xor(b[1], b[6]);
  auto n152 = gate_not(n142);
  auto n9 = gate_and(n24, n152);
  auto n193 = gate_nand(n13, n9);
  auto n8 = gate_and(n24, n193);
  auto n29 = gate_nand(n142, n42);
  auto n26 = gate_nand(a[6], n25);
  auto n33 = gate_xor(n27, n26);
  auto n202 = gate_not(b[0]);
  auto n6 = gate_and(n203, n202);
  auto n28 = gate_mux(n33, n203, n202);
  auto n31 = gate_nand(n29, n28);
  auto n30 = gate_nand(n152, n8);
  auto n32 = gate_nand(n31, n30);
  auto n191 = gate_nand(n3, n32);
  auto n64 = gate_nand(n8, n191);
  auto n48 = gate_not(n64);
  auto n46 = gate_nand(n48, n135);
  auto n34 = gate_nand(n33, n191);
  auto n49 = gate_not(n34);
  auto n41 = gate_nand(n49, n152);
  auto n39 = gate_xor(n34, n142);
  auto n36 = gate_nand(a[6], n35);
  auto n53 = gate_xor(a[4], n36);
  auto n37 = gate_mux(n53, b[6], n202);
  auto n38 = gate_not(n37);
  auto n40 = gate_nand(n39, n38);
  auto n44 = gate_nand(n41, n40);
  auto n43 = gate_nand(n149, n42);
  auto n45 = gate_nand(n44, n43);
  auto n47 = gate_nand(n46, n45);
  auto n51 = gate_nand(n4, n47);
  auto n99 = gate_nand(n48, n51);
  auto n70 = gate_not(n99);
  auto n68 = gate_nand(n70, n167);
  auto n50 = gate_nand(n49, n51);
  auto n71 = gate_not(n50);
  auto n63 = gate_nand(n135, n71);
  auto n61 = gate_xor(n149, n50);
  auto n190 = gate_not(n51);
  auto n52 = gate_nand(n190, b[0]);
  auto n77 = gate_xor(n53, n52);
  auto n59 = gate_nand(n152, n77);
  auto n57 = gate_xor(n152, n77);
  auto n55 = gate_nand(a[6], n54);
  auto n80 = gate_xor(a[3], n55);
  auto n56 = gate_mux(n80, b[6], n202);
  auto n74 = gate_not(n56);
  auto n58 = gate_nand(n57, n74);
  auto n60 = gate_nand(n59, n58);
  auto n62 = gate_nand(n61, n60);
  auto n66 = gate_nand(n63, n62);
  auto n65 = gate_nand(n138, n64);
  auto n67 = gate_nand(n66, n65);
  auto n69 = gate_nand(n68, n67);
  auto n73 = gate_nand(n5, n69);
  auto n15 = gate_and(n70, n73);
  auto n95 = gate_nand(n99, n164);
  auto n72 = gate_nand(n71, n73);
  auto n100 = gate_not(n72);
  auto n93 = gate_nand(n167, n100);
  auto n91 = gate_xor(n138, n72);
  auto n189 = gate_not(n73);
  auto n75 = gate_xor(n152, n74);
  auto n76 = gate_nand(n189, n75);
  auto n107 = gate_xor(n77, n76);
  auto n78 = gate_not(n107);
  auto n89 = gate_nand(n78, n135);
  auto n87 = gate_xor(n149, n107);
  auto n79 = gate_nand(n189, b[0]);
  auto n111 = gate_xor(n80, n79);
  auto n86 = gate_nand(n152, n111);
  auto n84 = gate_xor(n152, n111);
  auto n82 = gate_nand(a[6], n81);
  auto n113 = gate_xor(a[2], n82);
  auto n83 = gate_mux(n113, b[6], n202);
  auto n108 = gate_not(n83);
  auto n85 = gate_nand(n84, n108);
  auto n104 = gate_nand(n86, n85);
  auto n88 = gate_nand(n87, n104);
  auto n90 = gate_nand(n89, n88);
  auto n92 = gate_nand(n91, n90);
  auto n94 = gate_nand(n93, n92);
  auto n97 = gate_nand(n95, n94);
  auto n96 = gate_nand(n101, n15);
  auto n98 = gate_nand(n97, n96);
  auto n103 = gate_nand(n131, n98);
  auto n7 = gate_and(n15, n103);
  auto n130 = gate_nand(n99, n179);
  auto n102 = gate_nand(n100, n103);
  auto n176 = gate_not(n102);
  auto n128 = gate_nand(n101, n176);
  auto n126 = gate_xor(n164, n102);
  auto n188 = gate_not(n103);
  auto n105 = gate_xor(n135, n104);
  auto n106 = gate_nand(n188, n105);
  auto n171 = gate_xor(n107, n106);
  auto n124 = gate_nand(n171, n167);
  auto n122 = gate_xor(n167, n171);
  auto n109 = gate_xor(n152, n108);
  auto n110 = gate_nand(n188, n109);
  auto n14 = gate_xnor(n111, n110);
  auto n121 = gate_nand(n14, n135);
  auto n119 = gate_xor(n135, n14);
  auto n112 = gate_nand(b[0], n188);
  auto n155 = gate_xor(n113, n112);
  auto n118 = gate_nand(n152, n155);
  auto n116 = gate_xor(n152, n155);
  auto n114 = gate_nand(a[0], a[6]);
  auto n144 = gate_xor(n115, n114);
  auto n151 = gate_mux(n144, n203, n202);
  auto n117 = gate_nand(n116, n151);
  auto n134 = gate_nand(n118, n117);
  auto n120 = gate_nand(n119, n134);
  auto n166 = gate_nand(n121, n120);
  auto n123 = gate_nand(n122, n166);
  auto n125 = gate_nand(n124, n123);
  auto n127 = gate_nand(n126, n125);
  auto n129 = gate_nand(n128, n127);
  auto n133 = gate_nand(n130, n129);
  auto n132 = gate_nand(n131, n7);
  auto n169 = gate_nand(n133, n132);
  auto n187 = gate_not(n169);
  auto n184 = gate_nand(n7, n187);
  auto n136 = gate_xor(n135, n134);
  auto n137 = gate_nand(n169, n136);
  auto n139 = gate_xor(n14, n137);
  auto n163 = gate_nand(n139, n138);
  auto n161 = gate_xor(n139, n138);
  auto n141 = gate_mux(n140, b[6], n202);
  auto n148 = gate_nand(n142, n141);
  auto n146 = gate_xor(n142, n141);
  auto n143 = gate_nand(b[0], n169);
  auto n145 = gate_xor(n144, n143);
  auto n147 = gate_nand(n146, n145);
  auto n150 = gate_nand(n148, n147);
  auto n159 = gate_nand(n150, n149);
  auto n157 = gate_xor(n150, n149);
  auto n153 = gate_xor(n152, n151);
  auto n154 = gate_nand(n169, n153);
  auto n156 = gate_xor(n155, n154);
  auto n158 = gate_nand(n157, n156);
  auto n160 = gate_nand(n159, n158);
  auto n162 = gate_nand(n161, n160);
  auto n165 = gate_nand(n163, n162);
  auto n175 = gate_nand(n165, n164);
  auto n173 = gate_xor(n165, n164);
  auto n168 = gate_xor(n167, n166);
  auto n170 = gate_nand(n169, n168);
  auto n172 = gate_xor(n171, n170);
  auto n174 = gate_nand(n173, n172);
  auto n178 = gate_nand(n175, n174);
  auto n177 = gate_nand(n176, n187);
  auto n182 = gate_nand(n178, n177);
  auto n180 = gate_xor(n178, n177);
  auto n181 = gate_nand(n180, n179);
  auto n183 = gate_nand(n182, n181);
  auto n201 = gate_nand(n184, n183);
  auto n185 = gate_not(n201);
  auto n209 = gate_nand(n206, n185);
  auto n186 = gate_not(n209);
  auto n200 = gate_xor(n192, n187);
  auto n16 = gate_and(n186, n200);
  auto n199 = gate_xor(n206, n188);
  auto n10 = gate_and(n16, n199);
  auto n198 = gate_xor(n206, n189);
  auto n11 = gate_and(n10, n198);
  auto n197 = gate_xor(n206, n190);
  auto n1 = gate_and(n11, n197);
  auto n196 = gate_xor(n192, n191);
  auto n195 = gate_nand(n1, n196);
  auto n194 = gate_xor(n206, n193);
  y[6] = gate_xor(n195, n194);
  y[5] = gate_xor(n1, n196);
  y[4] = gate_xor(n11, n197);
  y[3] = gate_xor(n10, n198);
  y[2] = gate_xor(n16, n199);
  y[1] = gate_xor(n186, n200);
  auto n208 = gate_xor(n201, n206);
  auto n204 = gate_not(b[1]);
  auto n2 = gate_and(n3, n204);
  auto n205 = gate_nand(n6, n2);
  auto n207 = gate_nand(n206, n205);
  y[0] = gate_mux(n209, n208, n207);
}
template<> void $NameUint<7>::d_eq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n27 = gate_xnor(b[6], a[6]);
  auto n33 = gate_xnor(a[0], b[0]);
  auto n35 = gate_xnor(b[5], a[5]);
  auto n36 = gate_not(a[2]);
  auto n39 = gate_xor(n36, b[2]);
  auto n37 = gate_not(a[4]);
  auto n38 = gate_xor(n37, b[4]);
  auto n30 = gate_and(n39, n38);
  auto n40 = gate_not(a[3]);
  auto n43 = gate_xor(n40, b[3]);
  auto n41 = gate_not(b[1]);
  auto n42 = gate_xor(n41, a[1]);
  auto n34 = gate_and(n43, n42);
  auto n29 = gate_and(n30, n34);
  auto n28 = gate_and(n29, n33);
  auto n31 = gate_and(n28, n35);
  y[0] = gate_and(n31, n27);
}
template<> void $NameUint<7>::d_ge
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n33 = gate_not(b[5]);
  auto n58 = gate_nand(n33, a[5]);
  auto n56 = gate_xor(n33, a[5]);
  auto n34 = gate_not(b[3]);
  auto n49 = gate_nand(n34, a[3]);
  auto n47 = gate_xor(n34, a[3]);
  auto n35 = gate_not(b[2]);
  auto n45 = gate_nand(n35, a[2]);
  auto n43 = gate_xor(n35, a[2]);
  auto n36 = gate_not(b[1]);
  auto n41 = gate_nand(n36, a[1]);
  auto n39 = gate_xor(n36, a[1]);
  auto n37 = gate_not(a[0]);
  auto n38 = gate_nand(b[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n44 = gate_nand(n43, n42);
  auto n46 = gate_nand(n45, n44);
  auto n48 = gate_nand(n47, n46);
  auto n50 = gate_nand(n49, n48);
  auto n54 = gate_nand(n50, a[4]);
  auto n52 = gate_xor(n50, a[4]);
  auto n51 = gate_not(b[4]);
  auto n53 = gate_nand(n52, n51);
  auto n55 = gate_nand(n54, n53);
  auto n57 = gate_nand(n56, n55);
  auto n59 = gate_nand(n58, n57);
  auto n63 = gate_nand(n59, a[6]);
  auto n61 = gate_xor(n59, a[6]);
  auto n60 = gate_not(b[6]);
  auto n62 = gate_nand(n61, n60);
  y[0] = gate_nand(n63, n62);
}
template<> void $NameUint<7>::d_gesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n33 = gate_not(b[5]);
  auto n58 = gate_nand(n33, a[5]);
  auto n56 = gate_xor(n33, a[5]);
  auto n34 = gate_not(b[3]);
  auto n49 = gate_nand(n34, a[3]);
  auto n47 = gate_xor(n34, a[3]);
  auto n35 = gate_not(b[2]);
  auto n45 = gate_nand(n35, a[2]);
  auto n43 = gate_xor(n35, a[2]);
  auto n36 = gate_not(b[1]);
  auto n41 = gate_nand(n36, a[1]);
  auto n39 = gate_xor(n36, a[1]);
  auto n37 = gate_not(a[0]);
  auto n38 = gate_nand(b[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n44 = gate_nand(n43, n42);
  auto n46 = gate_nand(n45, n44);
  auto n48 = gate_nand(n47, n46);
  auto n50 = gate_nand(n49, n48);
  auto n54 = gate_nand(n50, a[4]);
  auto n52 = gate_xor(n50, a[4]);
  auto n51 = gate_not(b[4]);
  auto n53 = gate_nand(n52, n51);
  auto n55 = gate_nand(n54, n53);
  auto n57 = gate_nand(n56, n55);
  auto n59 = gate_nand(n58, n57);
  auto n63 = gate_nand(n59, b[6]);
  auto n61 = gate_xor(n59, b[6]);
  auto n60 = gate_not(a[6]);
  auto n62 = gate_nand(n61, n60);
  y[0] = gate_nand(n63, n62);
}
template<> void $NameUint<7>::d_gt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(b[6]);
  auto n64 = gate_nand(n35, a[6]);
  auto n62 = gate_xor(n35, a[6]);
  auto n36 = gate_not(a[1]);
  auto n41 = gate_nand(n36, b[1]);
  auto n39 = gate_xor(n36, b[1]);
  auto n37 = gate_not(b[0]);
  auto n38 = gate_nand(a[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n46 = gate_nand(n42, b[2]);
  auto n44 = gate_xor(n42, b[2]);
  auto n43 = gate_not(a[2]);
  auto n45 = gate_nand(n44, n43);
  auto n47 = gate_nand(n46, n45);
  auto n51 = gate_nand(n47, b[3]);
  auto n49 = gate_xor(n47, b[3]);
  auto n48 = gate_not(a[3]);
  auto n50 = gate_nand(n49, n48);
  auto n34 = gate_and(n51, n50);
  auto n55 = gate_nand(n34, a[4]);
  auto n53 = gate_xor(n34, a[4]);
  auto n52 = gate_not(b[4]);
  auto n54 = gate_nand(n53, n52);
  auto n56 = gate_nand(n55, n54);
  auto n60 = gate_nand(n56, a[5]);
  auto n58 = gate_xor(n56, a[5]);
  auto n57 = gate_not(b[5]);
  auto n59 = gate_nand(n58, n57);
  auto n61 = gate_nand(n60, n59);
  auto n63 = gate_nand(n62, n61);
  y[0] = gate_nand(n64, n63);
}
template<> void $NameUint<7>::d_gtsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(a[6]);
  auto n64 = gate_nand(n35, b[6]);
  auto n62 = gate_xor(n35, b[6]);
  auto n36 = gate_not(a[1]);
  auto n41 = gate_nand(n36, b[1]);
  auto n39 = gate_xor(n36, b[1]);
  auto n37 = gate_not(b[0]);
  auto n38 = gate_nand(a[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n46 = gate_nand(n42, b[2]);
  auto n44 = gate_xor(n42, b[2]);
  auto n43 = gate_not(a[2]);
  auto n45 = gate_nand(n44, n43);
  auto n47 = gate_nand(n46, n45);
  auto n51 = gate_nand(n47, b[3]);
  auto n49 = gate_xor(n47, b[3]);
  auto n48 = gate_not(a[3]);
  auto n50 = gate_nand(n49, n48);
  auto n34 = gate_and(n51, n50);
  auto n55 = gate_nand(n34, a[4]);
  auto n53 = gate_xor(n34, a[4]);
  auto n52 = gate_not(b[4]);
  auto n54 = gate_nand(n53, n52);
  auto n56 = gate_nand(n55, n54);
  auto n60 = gate_nand(n56, a[5]);
  auto n58 = gate_xor(n56, a[5]);
  auto n57 = gate_not(b[5]);
  auto n59 = gate_nand(n58, n57);
  auto n61 = gate_nand(n60, n59);
  auto n63 = gate_nand(n62, n61);
  y[0] = gate_nand(n64, n63);
}
template<> void $NameUint<7>::d_inc
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n2 = gate_and(a[0], a[1]);
  auto n3 = gate_and(n2, a[2]);
  auto n4 = gate_and(n3, a[3]);
  auto n5 = gate_and(n4, a[4]);
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[0], a[1]);
  y[2] = gate_xor(n2, a[2]);
  y[3] = gate_xor(n3, a[3]);
  y[4] = gate_xor(n4, a[4]);
  y[5] = gate_xor(n5, a[5]);
  auto n7 = gate_not(a[6]);
  auto n6 = gate_nand(n5, a[5]);
  y[6] = gate_xor(n7, n6);
}
template<> void $NameUint<7>::d_ineq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n25 = gate_xnor(b[6], a[6]);
  auto n30 = gate_xnor(a[0], b[0]);
  auto n32 = gate_xnor(b[5], a[5]);
  auto n33 = gate_not(a[2]);
  auto n36 = gate_xor(n33, b[2]);
  auto n34 = gate_not(a[4]);
  auto n35 = gate_xor(n34, b[4]);
  auto n28 = gate_and(n36, n35);
  auto n37 = gate_not(a[3]);
  auto n40 = gate_xor(n37, b[3]);
  auto n38 = gate_not(b[1]);
  auto n39 = gate_xor(n38, a[1]);
  auto n31 = gate_and(n40, n39);
  auto n27 = gate_and(n28, n31);
  auto n26 = gate_and(n27, n30);
  auto n29 = gate_and(n26, n32);
  y[0] = gate_nand(n29, n25);
}
template<> void $NameUint<7>::d_intmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n25 = gate_not(a[5]);
  auto n24 = gate_not(a[6]);
  auto n23 = gate_and(n25, n24);
  auto n27 = gate_not(a[0]);
  auto n26 = gate_not(a[3]);
  auto n21 = gate_and(n27, n26);
  auto n19 = gate_and(n23, n21);
  auto n28 = gate_not(a[1]);
  auto n20 = gate_and(n19, n28);
  auto n30 = gate_not(a[2]);
  auto n29 = gate_not(a[4]);
  auto n22 = gate_and(n30, n29);
  auto n31 = gate_nand(n20, n22);
  y[6] = gate_mux(c[6], b[6], n31);
  y[0] = gate_mux(c[0], b[0], n31);
  y[1] = gate_mux(c[1], b[1], n31);
  y[2] = gate_mux(c[2], b[2], n31);
  y[3] = gate_mux(c[3], b[3], n31);
  y[4] = gate_mux(c[4], b[4], n31);
  y[5] = gate_mux(c[5], b[5], n31);
}
template<> void $NameUint<7>::d_le
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n33 = gate_not(a[5]);
  auto n58 = gate_nand(n33, b[5]);
  auto n56 = gate_xor(n33, b[5]);
  auto n34 = gate_not(a[3]);
  auto n49 = gate_nand(n34, b[3]);
  auto n47 = gate_xor(n34, b[3]);
  auto n35 = gate_not(a[2]);
  auto n45 = gate_nand(n35, b[2]);
  auto n43 = gate_xor(n35, b[2]);
  auto n36 = gate_not(a[1]);
  auto n41 = gate_nand(n36, b[1]);
  auto n39 = gate_xor(n36, b[1]);
  auto n37 = gate_not(b[0]);
  auto n38 = gate_nand(a[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n44 = gate_nand(n43, n42);
  auto n46 = gate_nand(n45, n44);
  auto n48 = gate_nand(n47, n46);
  auto n50 = gate_nand(n49, n48);
  auto n54 = gate_nand(n50, b[4]);
  auto n52 = gate_xor(n50, b[4]);
  auto n51 = gate_not(a[4]);
  auto n53 = gate_nand(n52, n51);
  auto n55 = gate_nand(n54, n53);
  auto n57 = gate_nand(n56, n55);
  auto n59 = gate_nand(n58, n57);
  auto n63 = gate_nand(n59, b[6]);
  auto n61 = gate_xor(n59, b[6]);
  auto n60 = gate_not(a[6]);
  auto n62 = gate_nand(n61, n60);
  y[0] = gate_nand(n63, n62);
}
template<> void $NameUint<7>::d_lesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n33 = gate_not(a[5]);
  auto n58 = gate_nand(n33, b[5]);
  auto n56 = gate_xor(n33, b[5]);
  auto n34 = gate_not(a[3]);
  auto n49 = gate_nand(n34, b[3]);
  auto n47 = gate_xor(n34, b[3]);
  auto n35 = gate_not(a[2]);
  auto n45 = gate_nand(n35, b[2]);
  auto n43 = gate_xor(n35, b[2]);
  auto n36 = gate_not(a[1]);
  auto n41 = gate_nand(n36, b[1]);
  auto n39 = gate_xor(n36, b[1]);
  auto n37 = gate_not(b[0]);
  auto n38 = gate_nand(a[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n44 = gate_nand(n43, n42);
  auto n46 = gate_nand(n45, n44);
  auto n48 = gate_nand(n47, n46);
  auto n50 = gate_nand(n49, n48);
  auto n54 = gate_nand(n50, b[4]);
  auto n52 = gate_xor(n50, b[4]);
  auto n51 = gate_not(a[4]);
  auto n53 = gate_nand(n52, n51);
  auto n55 = gate_nand(n54, n53);
  auto n57 = gate_nand(n56, n55);
  auto n59 = gate_nand(n58, n57);
  auto n63 = gate_nand(n59, a[6]);
  auto n61 = gate_xor(n59, a[6]);
  auto n60 = gate_not(b[6]);
  auto n62 = gate_nand(n61, n60);
  y[0] = gate_nand(n63, n62);
}
template<> void $NameUint<7>::d_logand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n50 = gate_not(a[5]);
  auto n49 = gate_not(a[6]);
  auto n48 = gate_and(n50, n49);
  auto n52 = gate_not(a[0]);
  auto n51 = gate_not(a[3]);
  auto n46 = gate_and(n52, n51);
  auto n40 = gate_and(n48, n46);
  auto n53 = gate_not(a[1]);
  auto n45 = gate_and(n40, n53);
  auto n55 = gate_not(a[2]);
  auto n54 = gate_not(a[4]);
  auto n47 = gate_and(n55, n54);
  auto n64 = gate_nand(n45, n47);
  auto n57 = gate_not(b[5]);
  auto n56 = gate_not(b[6]);
  auto n44 = gate_and(n57, n56);
  auto n59 = gate_not(b[0]);
  auto n58 = gate_not(b[3]);
  auto n42 = gate_and(n59, n58);
  auto n38 = gate_and(n44, n42);
  auto n60 = gate_not(b[1]);
  auto n41 = gate_and(n38, n60);
  auto n62 = gate_not(b[2]);
  auto n61 = gate_not(b[4]);
  auto n43 = gate_and(n62, n61);
  auto n63 = gate_nand(n41, n43);
  y[0] = gate_and(n64, n63);
}
template<> void $NameUint<7>::d_lognot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n27 = gate_not(a[5]);
  auto n31 = gate_not(a[4]);
  auto n26 = gate_not(a[6]);
  auto n25 = gate_and(n27, n26);
  auto n29 = gate_not(a[0]);
  auto n28 = gate_not(a[3]);
  auto n23 = gate_and(n29, n28);
  auto n21 = gate_and(n25, n23);
  auto n30 = gate_not(a[1]);
  auto n22 = gate_and(n21, n30);
  auto n32 = gate_not(a[2]);
  auto n24 = gate_and(n32, n31);
  y[0] = gate_and(n22, n24);
}
template<> void $NameUint<7>::d_logor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n52 = gate_not(a[1]);
  auto n51 = gate_not(a[3]);
  auto n48 = gate_and(n52, n51);
  auto n54 = gate_not(a[2]);
  auto n53 = gate_not(a[0]);
  auto n47 = gate_and(n54, n53);
  auto n41 = gate_and(n48, n47);
  auto n56 = gate_not(a[6]);
  auto n55 = gate_not(a[5]);
  auto n50 = gate_and(n56, n55);
  auto n58 = gate_not(a[4]);
  auto n57 = gate_not(b[3]);
  auto n49 = gate_and(n58, n57);
  auto n60 = gate_not(b[0]);
  auto n59 = gate_not(b[2]);
  auto n44 = gate_and(n60, n59);
  auto n42 = gate_and(n49, n44);
  auto n62 = gate_not(b[1]);
  auto n61 = gate_not(b[6]);
  auto n46 = gate_and(n62, n61);
  auto n64 = gate_not(b[5]);
  auto n63 = gate_not(b[4]);
  auto n45 = gate_and(n64, n63);
  auto n40 = gate_and(n46, n45);
  auto n39 = gate_and(n42, n40);
  auto n43 = gate_and(n50, n39);
  y[0] = gate_nand(n41, n43);
}
template<> void $NameUint<7>::d_lt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(a[6]);
  auto n64 = gate_nand(n35, b[6]);
  auto n62 = gate_xor(n35, b[6]);
  auto n36 = gate_not(b[1]);
  auto n41 = gate_nand(n36, a[1]);
  auto n39 = gate_xor(n36, a[1]);
  auto n37 = gate_not(a[0]);
  auto n38 = gate_nand(b[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n46 = gate_nand(n42, a[2]);
  auto n44 = gate_xor(n42, a[2]);
  auto n43 = gate_not(b[2]);
  auto n45 = gate_nand(n44, n43);
  auto n47 = gate_nand(n46, n45);
  auto n51 = gate_nand(n47, a[3]);
  auto n49 = gate_xor(n47, a[3]);
  auto n48 = gate_not(b[3]);
  auto n50 = gate_nand(n49, n48);
  auto n34 = gate_and(n51, n50);
  auto n55 = gate_nand(n34, b[4]);
  auto n53 = gate_xor(n34, b[4]);
  auto n52 = gate_not(a[4]);
  auto n54 = gate_nand(n53, n52);
  auto n56 = gate_nand(n55, n54);
  auto n60 = gate_nand(n56, b[5]);
  auto n58 = gate_xor(n56, b[5]);
  auto n57 = gate_not(a[5]);
  auto n59 = gate_nand(n58, n57);
  auto n61 = gate_nand(n60, n59);
  auto n63 = gate_nand(n62, n61);
  y[0] = gate_nand(n64, n63);
}
template<> void $NameUint<7>::d_ltsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(b[6]);
  auto n64 = gate_nand(n35, a[6]);
  auto n62 = gate_xor(n35, a[6]);
  auto n36 = gate_not(b[1]);
  auto n41 = gate_nand(n36, a[1]);
  auto n39 = gate_xor(n36, a[1]);
  auto n37 = gate_not(a[0]);
  auto n38 = gate_nand(b[0], n37);
  auto n40 = gate_nand(n39, n38);
  auto n42 = gate_nand(n41, n40);
  auto n46 = gate_nand(n42, a[2]);
  auto n44 = gate_xor(n42, a[2]);
  auto n43 = gate_not(b[2]);
  auto n45 = gate_nand(n44, n43);
  auto n47 = gate_nand(n46, n45);
  auto n51 = gate_nand(n47, a[3]);
  auto n49 = gate_xor(n47, a[3]);
  auto n48 = gate_not(b[3]);
  auto n50 = gate_nand(n49, n48);
  auto n34 = gate_and(n51, n50);
  auto n55 = gate_nand(n34, b[4]);
  auto n53 = gate_xor(n34, b[4]);
  auto n52 = gate_not(a[4]);
  auto n54 = gate_nand(n53, n52);
  auto n56 = gate_nand(n55, n54);
  auto n60 = gate_nand(n56, b[5]);
  auto n58 = gate_xor(n56, b[5]);
  auto n57 = gate_not(a[5]);
  auto n59 = gate_nand(n58, n57);
  auto n61 = gate_nand(n60, n59);
  auto n63 = gate_nand(n62, n61);
  y[0] = gate_nand(n64, n63);
}
template<> void $NameUint<7>::d_mod
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n119 = gate_not(b[6]);
  auto n124 = gate_not(b[5]);
  auto n9 = gate_and(n119, n124);
  auto n129 = gate_not(b[4]);
  auto n4 = gate_and(n9, n129);
  auto n139 = gate_not(b[2]);
  auto n134 = gate_not(b[3]);
  auto n3 = gate_and(n4, n134);
  auto n2 = gate_and(n3, n139);
  auto n142 = gate_not(b[1]);
  auto n8 = gate_and(n2, n142);
  auto n18 = gate_mux(a[6], b[0], n142);
  auto n12 = gate_and(n2, n18);
  auto n19 = gate_not(a[5]);
  auto n20 = gate_nand(b[0], n19);
  auto n22 = gate_nand(n12, n20);
  auto n35 = gate_nand(a[5], n22);
  auto n38 = gate_not(a[4]);
  auto n26 = gate_nand(b[0], n38);
  auto n25 = gate_xor(n142, n35);
  auto n34 = gate_nand(n26, n25);
  auto n21 = gate_nand(b[0], n8);
  auto n11 = gate_and(a[6], n21);
  auto n5 = gate_and(n11, n22);
  auto n32 = gate_nand(n5, n139);
  auto n23 = gate_not(a[6]);
  auto n30 = gate_nand(b[2], n23);
  auto n24 = gate_not(n35);
  auto n29 = gate_nand(n24, n142);
  auto n27 = gate_not(n25);
  auto n28 = gate_nand(n27, n26);
  auto n46 = gate_nand(n29, n28);
  auto n31 = gate_nand(n30, n46);
  auto n33 = gate_nand(n32, n31);
  auto n7 = gate_and(n3, n33);
  auto n58 = gate_mux(n35, n34, n7);
  auto n36 = gate_not(n58);
  auto n44 = gate_nand(n139, n36);
  auto n42 = gate_xor(b[2], n58);
  auto n37 = gate_nand(n7, b[0]);
  auto n62 = gate_xor(n38, n37);
  auto n41 = gate_nand(n142, n62);
  auto n39 = gate_xor(n142, n62);
  auto n65 = gate_not(a[3]);
  auto n59 = gate_nand(b[0], n65);
  auto n40 = gate_nand(n39, n59);
  auto n55 = gate_nand(n41, n40);
  auto n43 = gate_nand(n42, n55);
  auto n50 = gate_nand(n44, n43);
  auto n45 = gate_xor(n50, n134);
  auto n49 = gate_nand(n4, n45);
  auto n47 = gate_nand(n139, n46);
  auto n48 = gate_nand(n47, n7);
  auto n1 = gate_and(n48, n5);
  auto n17 = gate_and(n49, n1);
  auto n51 = gate_xor(n134, n1);
  auto n53 = gate_nand(n51, n50);
  auto n52 = gate_nand(n134, n1);
  auto n54 = gate_nand(n53, n52);
  auto n16 = gate_and(n4, n54);
  auto n56 = gate_xor(n55, n139);
  auto n57 = gate_nand(n16, n56);
  auto n85 = gate_xor(n58, n57);
  auto n74 = gate_nand(n85, n134);
  auto n72 = gate_xor(n134, n85);
  auto n60 = gate_xor(n59, n142);
  auto n61 = gate_nand(n16, n60);
  auto n90 = gate_xor(n62, n61);
  auto n63 = gate_not(n90);
  auto n71 = gate_nand(n63, n139);
  auto n69 = gate_xor(b[2], n90);
  auto n64 = gate_nand(n16, b[0]);
  auto n94 = gate_xor(n65, n64);
  auto n68 = gate_nand(n142, n94);
  auto n66 = gate_xor(n142, n94);
  auto n97 = gate_not(a[2]);
  auto n91 = gate_nand(b[0], n97);
  auto n67 = gate_nand(n66, n91);
  auto n87 = gate_nand(n68, n67);
  auto n70 = gate_nand(n69, n87);
  auto n82 = gate_nand(n71, n70);
  auto n73 = gate_nand(n72, n82);
  auto n77 = gate_nand(n74, n73);
  auto n75 = gate_xor(n129, n77);
  auto n76 = gate_nand(n9, n75);
  auto n112 = gate_nand(n17, n76);
  auto n113 = gate_not(n112);
  auto n78 = gate_xor(n129, n17);
  auto n80 = gate_nand(n78, n77);
  auto n79 = gate_nand(n17, n129);
  auto n81 = gate_nand(n80, n79);
  auto n15 = gate_and(n9, n81);
  auto n83 = gate_xor(n134, n82);
  auto n84 = gate_nand(n15, n83);
  auto n123 = gate_xor(n85, n84);
  auto n86 = gate_not(n123);
  auto n109 = gate_nand(n86, n129);
  auto n107 = gate_xor(b[4], n123);
  auto n88 = gate_xor(n139, n87);
  auto n89 = gate_nand(n15, n88);
  auto n128 = gate_xor(n90, n89);
  auto n106 = gate_nand(n128, n134);
  auto n104 = gate_xor(n134, n128);
  auto n92 = gate_xor(n91, n142);
  auto n93 = gate_nand(n15, n92);
  auto n133 = gate_xor(n94, n93);
  auto n95 = gate_not(n133);
  auto n103 = gate_nand(n95, n139);
  auto n101 = gate_xor(b[2], n133);
  auto n96 = gate_nand(n15, b[0]);
  auto n138 = gate_xor(n97, n96);
  auto n100 = gate_nand(n142, n138);
  auto n98 = gate_xor(n142, n138);
  auto n141 = gate_not(a[1]);
  auto n135 = gate_nand(b[0], n141);
  auto n99 = gate_nand(n98, n135);
  auto n130 = gate_nand(n100, n99);
  auto n102 = gate_nand(n101, n130);
  auto n125 = gate_nand(n103, n102);
  auto n105 = gate_nand(n104, n125);
  auto n120 = gate_nand(n106, n105);
  auto n108 = gate_nand(n107, n120);
  auto n114 = gate_nand(n109, n108);
  auto n110 = gate_xor(n124, n114);
  auto n111 = gate_nand(n110, n119);
  auto n14 = gate_and(n113, n111);
  auto n156 = gate_nand(n14, n119);
  auto n153 = gate_nand(b[6], n112);
  auto n117 = gate_nand(n113, n124);
  auto n115 = gate_xor(n124, n113);
  auto n116 = gate_nand(n115, n114);
  auto n118 = gate_nand(n117, n116);
  auto n13 = gate_and(n119, n118);
  auto n121 = gate_xor(n129, n120);
  auto n122 = gate_nand(n13, n121);
  auto n164 = gate_xor(n123, n122);
  auto n152 = gate_nand(n164, n124);
  auto n161 = gate_xor(n124, n164);
  auto n126 = gate_xor(n134, n125);
  auto n127 = gate_nand(n13, n126);
  auto n10 = gate_xnor(n128, n127);
  auto n150 = gate_nand(n10, n129);
  auto n165 = gate_xor(n129, n10);
  auto n131 = gate_xor(n139, n130);
  auto n132 = gate_nand(n13, n131);
  auto n171 = gate_xor(n133, n132);
  auto n148 = gate_nand(n171, n134);
  auto n168 = gate_xor(n134, n171);
  auto n136 = gate_xor(n135, n142);
  auto n137 = gate_nand(n13, n136);
  auto n6 = gate_xnor(n138, n137);
  auto n146 = gate_nand(n6, n139);
  auto n172 = gate_xor(n139, n6);
  auto n140 = gate_nand(n13, b[0]);
  auto n178 = gate_xor(n141, n140);
  auto n144 = gate_nand(n142, n178);
  auto n176 = gate_xor(n142, n178);
  auto n181 = gate_not(a[0]);
  auto n175 = gate_nand(b[0], n181);
  auto n143 = gate_nand(n176, n175);
  auto n173 = gate_nand(n144, n143);
  auto n145 = gate_nand(n172, n173);
  auto n169 = gate_nand(n146, n145);
  auto n147 = gate_nand(n168, n169);
  auto n166 = gate_nand(n148, n147);
  auto n149 = gate_nand(n165, n166);
  auto n162 = gate_nand(n150, n149);
  auto n151 = gate_nand(n161, n162);
  auto n157 = gate_nand(n152, n151);
  auto n154 = gate_nand(n153, n157);
  auto n179 = gate_nand(n156, n154);
  auto n155 = gate_not(n179);
  auto n160 = gate_nand(n14, n155);
  auto n158 = gate_not(n156);
  auto n159 = gate_nand(n158, n157);
  y[6] = gate_nand(n160, n159);
  auto n163 = gate_xor(n162, n161);
  y[5] = gate_mux(n164, n163, n179);
  auto n167 = gate_xor(n166, n165);
  y[4] = gate_mux(n10, n167, n179);
  auto n170 = gate_xor(n169, n168);
  y[3] = gate_mux(n171, n170, n179);
  auto n174 = gate_xor(n173, n172);
  y[2] = gate_mux(n6, n174, n179);
  auto n177 = gate_xor(n176, n175);
  y[1] = gate_mux(n178, n177, n179);
  auto n180 = gate_nand(n179, b[0]);
  y[0] = gate_xor(n181, n180);
}
template<> void $NameUint<7>::d_modsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n21 = gate_not(a[1]);
  auto n196 = gate_not(a[0]);
  auto n23 = gate_nand(n21, n196);
  auto n22 = gate_nand(a[6], n23);
  auto n109 = gate_xor(a[2], n22);
  auto n151 = gate_not(b[6]);
  auto n3 = gate_xor(n151, b[1]);
  auto n160 = gate_xor(b[5], n151);
  auto n210 = gate_xor(b[4], n151);
  auto n20 = gate_and(n210, n160);
  auto n166 = gate_not(n210);
  auto n25 = gate_not(n23);
  auto n24 = gate_not(a[2]);
  auto n57 = gate_nand(n25, n24);
  auto n27 = gate_not(n57);
  auto n26 = gate_not(a[3]);
  auto n31 = gate_nand(n27, n26);
  auto n28 = gate_nand(a[6], n31);
  auto n56 = gate_xor(a[4], n28);
  auto n204 = gate_xor(b[3], n151);
  auto n1 = gate_not(n204);
  auto n2 = gate_not(n1);
  auto n11 = gate_and(n20, n2);
  auto n30 = gate_not(a[5]);
  auto n175 = gate_xor(b[6], b[2]);
  auto n173 = gate_not(n175);
  auto n14 = gate_and(n11, n173);
  auto n19 = gate_and(n14, n3);
  auto n200 = gate_xor(n151, b[1]);
  auto n29 = gate_nand(b[0], n19);
  auto n15 = gate_and(n30, n29);
  auto n33 = gate_not(n31);
  auto n32 = gate_not(a[4]);
  auto n35 = gate_nand(n33, n32);
  auto n34 = gate_not(n35);
  auto n5 = gate_and(n34, a[6]);
  auto n40 = gate_nand(n15, n5);
  auto n39 = gate_not(n40);
  auto n38 = gate_xor(n39, n200);
  auto n36 = gate_nand(a[6], n35);
  auto n41 = gate_xor(a[5], n36);
  auto n37 = gate_nand(n41, b[0]);
  auto n4 = gate_and(n14, n37);
  auto n42 = gate_nand(n38, n4);
  auto n12 = gate_and(n39, n42);
  auto n53 = gate_nand(n12, n173);
  auto n51 = gate_nand(n175, n40);
  auto n45 = gate_not(n41);
  auto n43 = gate_not(n42);
  auto n44 = gate_nand(n43, b[0]);
  auto n66 = gate_nand(n45, n44);
  auto n46 = gate_not(n66);
  auto n50 = gate_nand(n46, n200);
  auto n63 = gate_xor(n200, n66);
  auto n48 = gate_not(n63);
  auto n47 = gate_mux(b[6], n56, b[0]);
  auto n64 = gate_not(n47);
  auto n49 = gate_nand(n48, n64);
  auto n74 = gate_nand(n50, n49);
  auto n52 = gate_nand(n51, n74);
  auto n54 = gate_nand(n53, n52);
  auto n65 = gate_nand(n11, n54);
  auto n75 = gate_not(n65);
  auto n55 = gate_nand(n75, b[0]);
  auto n87 = gate_xor(n56, n55);
  auto n62 = gate_nand(n87, n3);
  auto n60 = gate_xor(n87, n3);
  auto n58 = gate_nand(a[6], n57);
  auto n91 = gate_xor(a[3], n58);
  auto n59 = gate_mux(b[6], n91, b[0]);
  auto n84 = gate_not(n59);
  auto n61 = gate_nand(n60, n84);
  auto n70 = gate_nand(n62, n61);
  auto n67 = gate_nand(n64, n63);
  auto n81 = gate_mux(n67, n66, n65);
  auto n69 = gate_not(n81);
  auto n68 = gate_xor(n175, n69);
  auto n82 = gate_nand(n70, n68);
  auto n73 = gate_nand(n173, n69);
  auto n71 = gate_xor(n173, n69);
  auto n72 = gate_nand(n71, n70);
  auto n102 = gate_nand(n73, n72);
  auto n79 = gate_nand(n204, n102);
  auto n76 = gate_nand(n173, n74);
  auto n77 = gate_nand(n76, n75);
  auto n13 = gate_and(n77, n12);
  auto n78 = gate_nand(n2, n13);
  auto n80 = gate_nand(n79, n78);
  auto n83 = gate_nand(n20, n80);
  auto n117 = gate_mux(n82, n81, n83);
  auto n113 = gate_not(n117);
  auto n101 = gate_nand(n113, n2);
  auto n99 = gate_xor(n113, n2);
  auto n89 = gate_not(n83);
  auto n85 = gate_xor(n3, n84);
  auto n86 = gate_nand(n89, n85);
  auto n122 = gate_xor(n87, n86);
  auto n88 = gate_not(n122);
  auto n98 = gate_nand(n88, n173);
  auto n96 = gate_xor(n175, n122);
  auto n90 = gate_nand(n89, b[0]);
  auto n123 = gate_xor(n91, n90);
  auto n95 = gate_nand(n123, n200);
  auto n93 = gate_xor(n123, n200);
  auto n92 = gate_mux(b[6], n109, b[0]);
  auto n124 = gate_not(n92);
  auto n94 = gate_nand(n93, n124);
  auto n119 = gate_nand(n95, n94);
  auto n97 = gate_nand(n96, n119);
  auto n115 = gate_nand(n98, n97);
  auto n100 = gate_nand(n99, n115);
  auto n110 = gate_nand(n101, n100);
  auto n106 = gate_nand(n210, n110);
  auto n103 = gate_xor(n102, n2);
  auto n104 = gate_nand(n20, n103);
  auto n6 = gate_and(n104, n13);
  auto n105 = gate_nand(n6, n210);
  auto n107 = gate_nand(n106, n105);
  auto n116 = gate_nand(n160, n107);
  auto n126 = gate_not(n116);
  auto n108 = gate_nand(n126, b[0]);
  auto n148 = gate_xor(n109, n108);
  auto n111 = gate_xor(n210, n110);
  auto n112 = gate_nand(n111, n160);
  auto n18 = gate_and(n6, n112);
  auto n144 = gate_nand(n18, n160);
  auto n114 = gate_xor(n1, n113);
  auto n118 = gate_nand(n115, n114);
  auto n159 = gate_mux(n118, n117, n116);
  auto n155 = gate_not(n159);
  auto n142 = gate_nand(n155, n210);
  auto n140 = gate_xor(n155, n210);
  auto n120 = gate_xor(n173, n119);
  auto n121 = gate_nand(n126, n120);
  auto n164 = gate_xor(n122, n121);
  auto n139 = gate_nand(n164, n2);
  auto n137 = gate_xor(n164, n2);
  auto n128 = gate_not(n123);
  auto n125 = gate_xor(n200, n124);
  auto n127 = gate_nand(n126, n125);
  auto n171 = gate_xor(n128, n127);
  auto n136 = gate_nand(n171, n173);
  auto n134 = gate_xor(n173, n171);
  auto n133 = gate_nand(n148, n3);
  auto n131 = gate_xor(n148, n3);
  auto n129 = gate_nand(a[6], a[0]);
  auto n150 = gate_xor(a[1], n129);
  auto n130 = gate_mux(b[6], n150, b[0]);
  auto n145 = gate_not(n130);
  auto n132 = gate_nand(n131, n145);
  auto n167 = gate_nand(n133, n132);
  auto n135 = gate_nand(n134, n167);
  auto n161 = gate_nand(n136, n135);
  auto n138 = gate_nand(n137, n161);
  auto n157 = gate_nand(n139, n138);
  auto n141 = gate_nand(n140, n157);
  auto n189 = gate_nand(n142, n141);
  auto n216 = gate_not(n160);
  auto n143 = gate_nand(n189, n160);
  auto n168 = gate_nand(n144, n143);
  auto n146 = gate_xor(n3, n145);
  auto n147 = gate_nand(n168, n146);
  auto n194 = gate_xor(n148, n147);
  auto n149 = gate_nand(b[0], n168);
  auto n203 = gate_xor(n150, n149);
  auto n154 = gate_nand(n203, n200);
  auto n152 = gate_xor(n200, n203);
  auto n199 = gate_mux(n151, a[0], b[0]);
  auto n153 = gate_nand(n152, n199);
  auto n176 = gate_nand(n154, n153);
  auto n192 = gate_xor(n176, n173);
  auto n156 = gate_xor(n155, n166);
  auto n158 = gate_nand(n157, n156);
  auto n222 = gate_mux(n159, n158, n168);
  auto n217 = gate_not(n222);
  auto n188 = gate_nand(n217, n160);
  auto n186 = gate_xor(n217, n160);
  auto n162 = gate_xor(n161, n2);
  auto n163 = gate_nand(n162, n168);
  auto n214 = gate_xor(n164, n163);
  auto n165 = gate_not(n214);
  auto n185 = gate_nand(n165, n210);
  auto n183 = gate_xor(n166, n214);
  auto n169 = gate_xor(n167, n173);
  auto n170 = gate_nand(n169, n168);
  auto n208 = gate_xor(n171, n170);
  auto n172 = gate_not(n208);
  auto n182 = gate_nand(n172, n2);
  auto n180 = gate_xor(n1, n208);
  auto n174 = gate_not(n194);
  auto n179 = gate_nand(n174, n173);
  auto n177 = gate_xor(n175, n194);
  auto n178 = gate_nand(n177, n176);
  auto n205 = gate_nand(n179, n178);
  auto n181 = gate_nand(n180, n205);
  auto n211 = gate_nand(n182, n181);
  auto n184 = gate_nand(n183, n211);
  auto n219 = gate_nand(n185, n184);
  auto n187 = gate_nand(n186, n219);
  auto n225 = gate_nand(n188, n187);
  auto n191 = gate_not(n225);
  auto n190 = gate_mux(n216, n160, n189);
  auto n224 = gate_nand(n18, n190);
  auto n220 = gate_nand(n191, n224);
  auto n193 = gate_nand(n192, n220);
  auto n195 = gate_xor(n194, n193);
  auto n232 = gate_xor(a[6], n195);
  auto n198 = gate_xor(a[6], n196);
  auto n197 = gate_nand(b[0], n220);
  auto n236 = gate_xor(n198, n197);
  y[0] = gate_xor(a[6], n236);
  auto n9 = gate_and(a[6], n236);
  auto n201 = gate_xor(n3, n199);
  auto n202 = gate_nand(n220, n201);
  auto n235 = gate_xor(n203, n202);
  auto n17 = gate_and(n9, n235);
  auto n10 = gate_and(n232, n17);
  auto n206 = gate_xor(n205, n2);
  auto n207 = gate_nand(n206, n220);
  auto n209 = gate_xor(n208, n207);
  auto n231 = gate_xor(a[6], n209);
  auto n16 = gate_and(n10, n231);
  auto n212 = gate_xor(n211, n210);
  auto n213 = gate_nand(n212, n220);
  auto n215 = gate_xor(n214, n213);
  auto n230 = gate_xor(a[6], n215);
  auto n8 = gate_and(n16, n230);
  auto n218 = gate_xor(n217, n216);
  auto n221 = gate_nand(n219, n218);
  auto n223 = gate_mux(n222, n221, n220);
  auto n7 = gate_xnor(a[6], n223);
  auto n229 = gate_nand(n8, n7);
  auto n226 = gate_not(n224);
  auto n227 = gate_nand(n226, n225);
  auto n228 = gate_nand(a[6], n227);
  y[6] = gate_xor(n229, n228);
  y[5] = gate_xor(n8, n7);
  y[4] = gate_xor(n16, n230);
  y[3] = gate_xor(n10, n231);
  y[2] = gate_xor(n232, n17);
  auto n233 = gate_not(n236);
  auto n234 = gate_nand(a[6], n233);
  y[1] = gate_xor(n235, n234);
}
template<> void $NameUint<7>::d_mul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n4 = gate_and(b[0], a[4]);
  auto n5 = gate_and(b[1], a[3]);
  auto n6 = gate_and(b[0], a[3]);
  auto n7 = gate_and(a[1], b[2]);
  auto n8 = gate_and(a[0], b[3]);
  auto n9 = gate_and(a[0], b[2]);
  y[0] = gate_and(a[0], b[0]);
  auto n13 = gate_nand(a[1], b[0]);
  auto n14 = gate_nand(b[1], a[0]);
  y[1] = gate_xor(n13, n14);
  auto n16 = gate_not(n13);
  auto n15 = gate_not(n14);
  auto n22 = gate_nand(n16, n15);
  auto n17 = gate_nand(a[1], b[1]);
  auto n21 = gate_xor(n17, n9);
  auto n20 = gate_nand(a[2], b[0]);
  auto n23 = gate_xor(n21, n20);
  y[2] = gate_xnor(n22, n23);
  auto n19 = gate_xor(n7, n8);
  auto n18 = gate_not(n17);
  auto n29 = gate_nand(n18, n9);
  auto n33 = gate_xor(n19, n29);
  auto n25 = gate_nand(n21, n20);
  auto n24 = gate_nand(n23, n22);
  auto n32 = gate_nand(n25, n24);
  auto n26 = gate_nand(b[1], a[2]);
  auto n31 = gate_xor(n26, n6);
  auto n34 = gate_xor(n32, n31);
  y[3] = gate_xnor(n33, n34);
  auto n27 = gate_not(n26);
  auto n2 = gate_and(n27, n6);
  auto n28 = gate_nand(n7, n8);
  auto n46 = gate_nand(n29, n28);
  auto n49 = gate_not(n46);
  auto n47 = gate_xor(n4, n5);
  auto n30 = gate_xor(n49, n47);
  auto n39 = gate_xor(n2, n30);
  auto n36 = gate_nand(n32, n31);
  auto n35 = gate_nand(n34, n33);
  auto n38 = gate_nand(n36, n35);
  auto n41 = gate_not(n38);
  auto n57 = gate_nand(a[1], b[3]);
  auto n56 = gate_nand(a[0], b[4]);
  auto n59 = gate_xor(n57, n56);
  auto n58 = gate_nand(b[2], a[2]);
  auto n43 = gate_xor(n59, n58);
  auto n37 = gate_xor(n41, n43);
  y[4] = gate_xor(n39, n37);
  auto n45 = gate_nand(n38, n39);
  auto n40 = gate_not(n39);
  auto n42 = gate_nand(n41, n40);
  auto n44 = gate_nand(n43, n42);
  auto n111 = gate_nand(n45, n44);
  auto n52 = gate_nand(n47, n46);
  auto n48 = gate_not(n47);
  auto n50 = gate_nand(n49, n48);
  auto n51 = gate_nand(n2, n50);
  auto n110 = gate_nand(n52, n51);
  auto n107 = gate_xor(n111, n110);
  auto n81 = gate_nand(a[2], b[3]);
  auto n77 = gate_not(n81);
  auto n80 = gate_nand(a[1], b[4]);
  auto n82 = gate_nand(a[0], b[5]);
  auto n53 = gate_xor(n80, n82);
  auto n97 = gate_xor(n77, n53);
  auto n69 = gate_nand(n4, n5);
  auto n54 = gate_nand(a[3], b[2]);
  auto n71 = gate_xor(n69, n54);
  auto n63 = gate_nand(b[1], a[4]);
  auto n68 = gate_nand(b[0], a[5]);
  auto n55 = gate_xor(n63, n68);
  auto n99 = gate_xor(n71, n55);
  auto n95 = gate_not(n99);
  auto n61 = gate_nand(n57, n56);
  auto n60 = gate_nand(n59, n58);
  auto n96 = gate_nand(n61, n60);
  auto n100 = gate_not(n96);
  auto n62 = gate_xor(n95, n100);
  auto n108 = gate_xor(n97, n62);
  y[5] = gate_xor(n107, n108);
  auto n66 = gate_not(n63);
  auto n64 = gate_not(n71);
  auto n65 = gate_nand(n68, n64);
  auto n67 = gate_nand(n66, n65);
  auto n3 = gate_xnor(n67, n69);
  auto n70 = gate_nand(n69, n68);
  auto n72 = gate_nand(n71, n70);
  auto n106 = gate_nand(n3, n72);
  auto n74 = gate_nand(a[6], b[0]);
  auto n73 = gate_nand(a[4], b[2]);
  auto n76 = gate_xor(n74, n73);
  auto n75 = gate_nand(b[6], a[0]);
  auto n86 = gate_xor(n76, n75);
  auto n78 = gate_not(n82);
  auto n79 = gate_nand(n78, n77);
  auto n84 = gate_nand(n80, n79);
  auto n83 = gate_nand(n82, n81);
  auto n85 = gate_nand(n84, n83);
  auto n94 = gate_xor(n86, n85);
  auto n88 = gate_nand(b[3], a[3]);
  auto n87 = gate_nand(b[5], a[1]);
  auto n92 = gate_xor(n88, n87);
  auto n90 = gate_nand(b[4], a[2]);
  auto n89 = gate_nand(a[5], b[1]);
  auto n91 = gate_xor(n90, n89);
  auto n93 = gate_xor(n92, n91);
  auto n104 = gate_xor(n94, n93);
  auto n98 = gate_nand(n96, n95);
  auto n102 = gate_nand(n98, n97);
  auto n101 = gate_nand(n100, n99);
  auto n103 = gate_nand(n102, n101);
  auto n105 = gate_xor(n104, n103);
  auto n116 = gate_xor(n106, n105);
  auto n109 = gate_not(n107);
  auto n114 = gate_nand(n109, n108);
  auto n112 = gate_not(n110);
  auto n113 = gate_nand(n112, n111);
  auto n115 = gate_nand(n114, n113);
  y[6] = gate_xnor(n116, n115);
}
template<> void $NameUint<7>::d_redand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n15 = gate_and(a[3], a[1]);
  auto n17 = gate_and(a[0], a[5]);
  auto n16 = gate_and(a[2], a[4]);
  auto n13 = gate_and(n16, n15);
  auto n12 = gate_and(n13, a[6]);
  y[0] = gate_and(n12, n17);
}
template<> void $NameUint<7>::d_rednand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n14 = gate_and(a[3], a[1]);
  auto n15 = gate_and(a[2], a[4]);
  auto n13 = gate_and(n15, n14);
  auto n12 = gate_and(n13, a[6]);
  auto n16 = gate_and(a[0], a[5]);
  y[0] = gate_nand(n12, n16);
}
template<> void $NameUint<7>::d_rednor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n27 = gate_not(a[5]);
  auto n31 = gate_not(a[4]);
  auto n26 = gate_not(a[6]);
  auto n25 = gate_and(n27, n26);
  auto n29 = gate_not(a[0]);
  auto n28 = gate_not(a[3]);
  auto n23 = gate_and(n29, n28);
  auto n21 = gate_and(n25, n23);
  auto n30 = gate_not(a[1]);
  auto n22 = gate_and(n21, n30);
  auto n32 = gate_not(a[2]);
  auto n24 = gate_and(n32, n31);
  y[0] = gate_and(n22, n24);
}
template<> void $NameUint<7>::d_redor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n24 = gate_not(a[5]);
  auto n23 = gate_not(a[6]);
  auto n22 = gate_and(n24, n23);
  auto n26 = gate_not(a[0]);
  auto n25 = gate_not(a[3]);
  auto n20 = gate_and(n26, n25);
  auto n18 = gate_and(n22, n20);
  auto n27 = gate_not(a[1]);
  auto n19 = gate_and(n18, n27);
  auto n29 = gate_not(a[2]);
  auto n28 = gate_not(a[4]);
  auto n21 = gate_and(n29, n28);
  y[0] = gate_nand(n19, n21);
}
template<> void $NameUint<7>::d_redxnor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_xor(a[1], a[6]);
  auto n9 = gate_xor(a[3], a[2]);
  auto n8 = gate_xnor(n10, n9);
  auto n12 = gate_xor(n8, a[4]);
  auto n11 = gate_xor(a[0], a[5]);
  y[0] = gate_xor(n12, n11);
}
template<> void $NameUint<7>::d_redxor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_xor(a[1], a[6]);
  auto n6 = gate_xor(a[3], a[2]);
  auto n8 = gate_xor(n7, n6);
  auto n10 = gate_xor(n8, a[4]);
  auto n9 = gate_xor(a[0], a[5]);
  y[0] = gate_xor(n10, n9);
}
template<> void $NameUint<7>::d_sll
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n59 = gate_not(b[4]);
  auto n58 = gate_not(b[3]);
  auto n47 = gate_and(n59, n58);
  auto n61 = gate_not(b[6]);
  auto n60 = gate_not(b[5]);
  auto n48 = gate_and(n61, n60);
  auto n45 = gate_and(n47, n48);
  auto n57 = gate_and(n45, b[2]);
  auto n74 = gate_not(b[2]);
  auto n46 = gate_and(n45, n74);
  auto n53 = gate_and(b[1], n46);
  auto n87 = gate_mux(a[4], a[3], b[0]);
  auto n64 = gate_nand(n53, n87);
  auto n73 = gate_not(b[1]);
  auto n51 = gate_and(n73, n74);
  auto n44 = gate_and(n45, n51);
  auto n62 = gate_mux(a[6], a[5], b[0]);
  auto n63 = gate_nand(n44, n62);
  auto n43 = gate_and(n64, n63);
  auto n84 = gate_mux(a[2], a[1], b[0]);
  auto n65 = gate_not(b[0]);
  auto n52 = gate_and(a[0], n65);
  y[0] = gate_and(n52, n44);
  auto n93 = gate_mux(n84, n52, b[1]);
  y[2] = gate_and(n93, n46);
  auto n66 = gate_nand(n57, n93);
  y[6] = gate_nand(n43, n66);
  auto n67 = gate_not(a[5]);
  auto n68 = gate_nand(n73, n67);
  auto n71 = gate_mux(a[1], n68, n74);
  auto n69 = gate_not(a[3]);
  auto n70 = gate_nand(b[1], n69);
  auto n80 = gate_nand(n71, n70);
  auto n72 = gate_not(a[4]);
  auto n75 = gate_nand(n73, n72);
  auto n78 = gate_mux(a[0], n75, n74);
  auto n76 = gate_not(a[2]);
  auto n77 = gate_nand(b[1], n76);
  auto n79 = gate_nand(n78, n77);
  auto n81 = gate_mux(n80, n79, b[0]);
  auto n82 = gate_not(n81);
  auto n49 = gate_and(n45, n82);
  auto n83 = gate_nand(b[2], b[1]);
  y[5] = gate_and(n49, n83);
  auto n86 = gate_nand(n52, n57);
  auto n85 = gate_nand(n46, n84);
  auto n89 = gate_mux(n86, n85, b[1]);
  auto n88 = gate_nand(n44, n87);
  y[4] = gate_nand(n89, n88);
  auto n90 = gate_mux(a[3], a[2], b[0]);
  auto n92 = gate_nand(n44, n90);
  auto n94 = gate_mux(a[1], a[0], b[0]);
  y[1] = gate_and(n44, n94);
  auto n91 = gate_nand(n53, n94);
  y[3] = gate_nand(n92, n91);
}
template<> void $NameUint<7>::d_slr
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n61 = gate_not(b[4]);
  auto n60 = gate_not(b[3]);
  auto n46 = gate_and(n61, n60);
  auto n63 = gate_not(b[6]);
  auto n62 = gate_not(b[5]);
  auto n45 = gate_and(n63, n62);
  auto n51 = gate_and(n46, n45);
  auto n59 = gate_and(n51, b[2]);
  auto n78 = gate_not(b[2]);
  auto n50 = gate_and(n51, n78);
  auto n53 = gate_and(b[1], n50);
  auto n80 = gate_not(b[1]);
  auto n44 = gate_and(n78, n80);
  auto n52 = gate_and(n51, n44);
  auto n64 = gate_not(b[0]);
  auto n57 = gate_and(a[6], n64);
  auto n47 = gate_and(n57, n80);
  y[6] = gate_and(n52, n57);
  auto n66 = gate_mux(a[5], a[6], b[0]);
  y[5] = gate_and(n52, n66);
  auto n69 = gate_mux(a[4], a[5], b[0]);
  auto n91 = gate_mux(n69, n57, b[1]);
  y[4] = gate_and(n50, n91);
  auto n65 = gate_mux(a[3], a[4], b[0]);
  auto n68 = gate_nand(n52, n65);
  auto n67 = gate_nand(n53, n66);
  y[3] = gate_nand(n68, n67);
  auto n71 = gate_nand(n53, n69);
  auto n94 = gate_mux(a[2], a[3], b[0]);
  auto n70 = gate_nand(n52, n94);
  auto n54 = gate_and(n71, n70);
  auto n72 = gate_nand(n59, n47);
  y[2] = gate_nand(n54, n72);
  auto n73 = gate_not(a[1]);
  auto n74 = gate_nand(n78, n73);
  auto n77 = gate_mux(a[3], n74, n80);
  auto n75 = gate_not(a[5]);
  auto n76 = gate_nand(b[2], n75);
  auto n86 = gate_nand(n77, n76);
  auto n79 = gate_not(a[2]);
  auto n81 = gate_nand(n79, n78);
  auto n84 = gate_mux(a[4], n81, n80);
  auto n82 = gate_not(a[6]);
  auto n83 = gate_nand(b[2], n82);
  auto n85 = gate_nand(n84, n83);
  auto n87 = gate_mux(n86, n85, b[0]);
  auto n88 = gate_not(n87);
  auto n43 = gate_and(n51, n88);
  auto n89 = gate_nand(b[2], b[1]);
  y[1] = gate_and(n43, n89);
  auto n90 = gate_mux(a[0], a[1], b[0]);
  auto n93 = gate_nand(n52, n90);
  auto n92 = gate_nand(n59, n91);
  auto n55 = gate_and(n93, n92);
  auto n95 = gate_nand(n53, n94);
  y[0] = gate_nand(n55, n95);
}
template<> void $NameUint<7>::d_srasig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_buf(a[6]);
  auto n31 = gate_and(b[1], y[6]);
  auto n55 = gate_not(b[0]);
  auto n54 = gate_not(b[1]);
  auto n27 = gate_and(a[4], n54);
  auto n33 = gate_nand(n55, n54);
  auto n50 = gate_mux(a[5], y[6], n33);
  auto n35 = gate_not(b[4]);
  auto n34 = gate_not(b[3]);
  auto n29 = gate_and(n35, n34);
  auto n37 = gate_not(b[6]);
  auto n36 = gate_not(b[5]);
  auto n30 = gate_and(n37, n36);
  auto n28 = gate_and(n29, n30);
  auto n38 = gate_not(b[2]);
  auto n41 = gate_nand(n28, n38);
  y[5] = gate_mux(n50, y[6], n41);
  auto n39 = gate_mux(a[5], a[4], n55);
  auto n60 = gate_mux(y[6], n39, n54);
  y[4] = gate_mux(n60, y[6], n41);
  auto n59 = gate_not(n41);
  auto n44 = gate_mux(a[5], a[3], n54);
  auto n40 = gate_mux(n44, n27, b[0]);
  auto n42 = gate_nand(n59, n40);
  auto n46 = gate_nand(y[6], n41);
  auto n32 = gate_and(n42, n46);
  auto n43 = gate_nand(b[0], n31);
  y[3] = gate_nand(n32, n43);
  auto n48 = gate_mux(a[4], a[2], n54);
  auto n45 = gate_mux(n48, n44, b[0]);
  auto n47 = gate_nand(n59, n45);
  y[2] = gate_nand(n47, n46);
  auto n57 = gate_mux(a[3], a[1], n54);
  auto n49 = gate_mux(n57, n48, b[0]);
  auto n53 = gate_nand(n59, n49);
  auto n62 = gate_not(y[6]);
  auto n51 = gate_nand(n50, b[2]);
  auto n52 = gate_mux(n62, n51, n28);
  y[1] = gate_nand(n53, n52);
  auto n56 = gate_mux(a[2], a[0], n54);
  auto n58 = gate_mux(n57, n56, n55);
  auto n64 = gate_nand(n59, n58);
  auto n61 = gate_nand(n60, b[2]);
  auto n63 = gate_mux(n62, n61, n28);
  y[0] = gate_nand(n64, n63);
}
template<> void $NameUint<7>::d_sub
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n29 = gate_xor(b[6], a[6]);
  auto n4 = gate_not(b[1]);
  auto n6 = gate_xor(a[1], n4);
  auto n3 = gate_not(a[0]);
  auto n5 = gate_nand(b[0], n3);
  y[1] = gate_xor(n6, n5);
  auto n9 = gate_not(b[2]);
  auto n11 = gate_xor(a[2], n9);
  auto n8 = gate_nand(a[1], n4);
  auto n7 = gate_nand(n6, n5);
  auto n10 = gate_nand(n8, n7);
  y[2] = gate_xor(n11, n10);
  auto n14 = gate_not(b[3]);
  auto n16 = gate_xor(a[3], n14);
  auto n13 = gate_nand(a[2], n9);
  auto n12 = gate_nand(n11, n10);
  auto n15 = gate_nand(n13, n12);
  y[3] = gate_xor(n16, n15);
  auto n19 = gate_not(b[4]);
  auto n21 = gate_xor(a[4], n19);
  auto n18 = gate_nand(a[3], n14);
  auto n17 = gate_nand(n16, n15);
  auto n20 = gate_nand(n18, n17);
  y[4] = gate_xor(n21, n20);
  auto n24 = gate_not(b[5]);
  auto n26 = gate_xor(a[5], n24);
  auto n23 = gate_nand(a[4], n19);
  auto n22 = gate_nand(n21, n20);
  auto n25 = gate_nand(n23, n22);
  y[5] = gate_xor(n26, n25);
  auto n28 = gate_nand(a[5], n24);
  auto n27 = gate_nand(n26, n25);
  auto n30 = gate_nand(n28, n27);
  y[6] = gate_xnor(n30, n29);
}
template<> void $NameUint<7>::d_uminus
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_buf(a[0]);
  auto n21 = gate_not(y[0]);
  auto n20 = gate_not(a[1]);
  auto n16 = gate_and(n21, n20);
  auto n26 = gate_not(a[2]);
  auto n17 = gate_and(n16, n26);
  auto n25 = gate_not(a[3]);
  auto n18 = gate_and(n17, n25);
  auto n24 = gate_not(a[4]);
  auto n19 = gate_and(n18, n24);
  auto n23 = gate_not(a[5]);
  auto n22 = gate_nand(n19, n23);
  y[6] = gate_xor(a[6], n22);
  y[5] = gate_xor(n19, n23);
  y[4] = gate_xor(n18, n24);
  y[3] = gate_xor(n17, n25);
  y[2] = gate_xor(n16, n26);
  y[1] = gate_xor(y[0], a[1]);
}
