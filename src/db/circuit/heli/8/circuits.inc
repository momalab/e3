// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<> void $NameUint<8>::d_carryadd
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n2 = gate_and(a[0], b[0]);
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_nand(b[1], a[1]);
  auto n4 = gate_nand(n3, n2);
  auto n6 = gate_nand(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_nand(b[2], a[2]);
  auto n8 = gate_nand(n7, n6);
  auto n10 = gate_nand(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_nand(b[3], a[3]);
  auto n12 = gate_nand(n11, n10);
  auto n14 = gate_nand(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_nand(b[4], a[4]);
  auto n16 = gate_nand(n15, n14);
  auto n18 = gate_nand(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n23 = gate_xor(b[6], a[6]);
  auto n21 = gate_nand(b[5], a[5]);
  auto n20 = gate_nand(n19, n18);
  auto n22 = gate_nand(n21, n20);
  y[6] = gate_xor(n23, n22);
  auto n25 = gate_nand(b[6], a[6]);
  auto n24 = gate_nand(n23, n22);
  y[7] = gate_nand(n25, n24);
}
template<> void $NameUint<8>::d_add
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  auto n2 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_and(b[1], a[1]);
  auto n4 = gate_and(n3, n2);
  auto n6 = gate_or(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_and(b[2], a[2]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_or(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_and(b[3], a[3]);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_or(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_and(b[4], a[4]);
  auto n16 = gate_and(n15, n14);
  auto n18 = gate_or(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n23 = gate_xor(b[6], a[6]);
  auto n21 = gate_and(b[5], a[5]);
  auto n20 = gate_and(n19, n18);
  auto n22 = gate_or(n21, n20);
  y[6] = gate_xor(n23, n22);
  auto n25 = gate_and(b[6], a[6]);
  auto n24 = gate_and(n23, n22);
  auto n26 = gate_or(n25, n24);
  auto n27 = gate_xor(b[7], n26);
  y[7] = gate_xor(a[7], n27);
}
template<> void $NameUint<8>::d_bitand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_and(b[7], a[7]);
  y[6] = gate_and(b[6], a[6]);
  y[5] = gate_and(b[5], a[5]);
  y[4] = gate_and(b[4], a[4]);
  y[3] = gate_and(b[3], a[3]);
  y[2] = gate_and(b[2], a[2]);
  y[1] = gate_and(b[1], a[1]);
  y[0] = gate_and(b[0], a[0]);
}
template<> void $NameUint<8>::d_bitnot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[7] = gate_not(a[7]);
  y[6] = gate_not(a[6]);
  y[5] = gate_not(a[5]);
  y[4] = gate_not(a[4]);
  y[3] = gate_not(a[3]);
  y[2] = gate_not(a[2]);
  y[1] = gate_not(a[1]);
  y[0] = gate_not(a[0]);
}
template<> void $NameUint<8>::d_bitor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_or(a[7], b[7]);
  y[6] = gate_or(a[6], b[6]);
  y[5] = gate_or(a[5], b[5]);
  y[4] = gate_or(a[4], b[4]);
  y[3] = gate_or(a[3], b[3]);
  y[2] = gate_or(a[2], b[2]);
  y[1] = gate_or(a[1], b[1]);
  y[0] = gate_or(a[0], b[0]);
}
template<> void $NameUint<8>::d_bitxor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_xor(b[7], a[7]);
  y[6] = gate_xor(b[6], a[6]);
  y[5] = gate_xor(b[5], a[5]);
  y[4] = gate_xor(b[4], a[4]);
  y[3] = gate_xor(b[3], a[3]);
  y[2] = gate_xor(b[2], a[2]);
  y[1] = gate_xor(b[1], a[1]);
  y[0] = gate_xor(b[0], a[0]);
}
template<> void $NameUint<8>::d_boolmul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  y[1] = gate_and(a[0], b[1]);
  y[2] = gate_and(a[0], b[2]);
  y[3] = gate_and(a[0], b[3]);
  y[4] = gate_and(a[0], b[4]);
  y[5] = gate_and(a[0], b[5]);
  y[6] = gate_and(a[0], b[6]);
  y[7] = gate_and(a[0], b[7]);
}
template<> void $NameUint<8>::d_boolmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n32 = gate_not(a[0]);
  auto n19 = gate_and(c[0], n32);
  auto n18 = gate_and(a[0], b[0]);
  y[0] = gate_or(n19, n18);
  auto n21 = gate_and(c[1], n32);
  auto n20 = gate_and(a[0], b[1]);
  y[1] = gate_or(n21, n20);
  auto n23 = gate_and(c[2], n32);
  auto n22 = gate_and(a[0], b[2]);
  y[2] = gate_or(n23, n22);
  auto n25 = gate_and(c[3], n32);
  auto n24 = gate_and(a[0], b[3]);
  y[3] = gate_or(n25, n24);
  auto n27 = gate_and(c[4], n32);
  auto n26 = gate_and(a[0], b[4]);
  y[4] = gate_or(n27, n26);
  auto n29 = gate_and(c[5], n32);
  auto n28 = gate_and(a[0], b[5]);
  y[5] = gate_or(n29, n28);
  auto n31 = gate_and(c[6], n32);
  auto n30 = gate_and(a[0], b[6]);
  y[6] = gate_or(n31, n30);
  auto n34 = gate_and(c[7], n32);
  auto n33 = gate_and(a[0], b[7]);
  y[7] = gate_or(n34, n33);
}
template<> void $NameUint<8>::d_dec
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[1], y[0]);
  auto n2 = gate_not(a[1]);
  auto n4 = gate_and(n2, y[0]);
  y[2] = gate_xor(a[2], n4);
  auto n3 = gate_not(a[2]);
  auto n6 = gate_and(n4, n3);
  y[3] = gate_xor(a[3], n6);
  auto n5 = gate_not(a[3]);
  auto n8 = gate_and(n6, n5);
  y[4] = gate_xor(a[4], n8);
  auto n7 = gate_not(a[4]);
  auto n10 = gate_and(n8, n7);
  y[5] = gate_xor(a[5], n10);
  auto n9 = gate_not(a[5]);
  auto n12 = gate_and(n10, n9);
  y[6] = gate_xor(a[6], n12);
  auto n11 = gate_not(a[6]);
  auto n13 = gate_and(n12, n11);
  y[7] = gate_xor(a[7], n13);
}
template<> void $NameUint<8>::d_div
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n143 = gate_not(b[7]);
  auto n149 = gate_not(b[6]);
  auto n100 = gate_and(n143, n149);
  auto n155 = gate_not(b[5]);
  auto n67 = gate_and(n100, n155);
  auto n161 = gate_not(b[4]);
  auto n41 = gate_and(n67, n161);
  auto n167 = gate_not(b[3]);
  auto n22 = gate_and(n41, n167);
  auto n173 = gate_not(b[2]);
  auto n6 = gate_and(n22, n173);
  auto n175 = gate_not(b[1]);
  auto n4 = gate_or(n175, a[7]);
  auto n174 = gate_not(b[0]);
  auto n3 = gate_or(n174, a[6]);
  auto n5 = gate_and(n4, n3);
  y[6] = gate_and(n6, n5);
  auto n2 = gate_nand(y[6], b[0]);
  auto n8 = gate_and(n175, n6);
  auto n7 = gate_or(n174, a[7]);
  y[7] = gate_and(n8, n7);
  auto n23 = gate_and(a[6], n2);
  auto n13 = gate_and(n23, n175);
  auto n11 = gate_xor(n23, n175);
  auto n9 = gate_not(a[5]);
  auto n25 = gate_and(n9, b[0]);
  auto n10 = gate_not(n25);
  auto n12 = gate_and(n11, n10);
  auto n15 = gate_or(n13, n12);
  auto n14 = gate_or(n173, a[7]);
  auto n20 = gate_and(n15, n14);
  auto n17 = gate_not(y[6]);
  auto n16 = gate_not(y[7]);
  auto n18 = gate_and(n17, n16);
  auto n37 = gate_and(a[7], n18);
  auto n19 = gate_and(n37, n173);
  auto n21 = gate_or(n20, n19);
  y[5] = gate_and(n22, n21);
  auto n1 = gate_nand(y[5], n25);
  auto n24 = gate_and(y[5], b[1]);
  auto n26 = gate_xor(n24, n23);
  auto n45 = gate_and(n26, n1);
  auto n33 = gate_and(n173, n45);
  auto n31 = gate_xor(n173, n45);
  auto n27 = gate_and(y[5], b[0]);
  auto n49 = gate_xor(n27, a[5]);
  auto n30 = gate_and(n175, n49);
  auto n28 = gate_xor(n175, n49);
  auto n46 = gate_or(a[4], n174);
  auto n29 = gate_and(n28, n46);
  auto n42 = gate_or(n30, n29);
  auto n32 = gate_and(n31, n42);
  auto n35 = gate_or(n33, n32);
  auto n34 = gate_or(n167, n37);
  auto n39 = gate_and(n35, n34);
  auto n36 = gate_not(y[5]);
  auto n62 = gate_and(n37, n36);
  auto n38 = gate_and(n62, n167);
  auto n40 = gate_or(n39, n38);
  y[4] = gate_and(n41, n40);
  auto n43 = gate_xor(n42, n173);
  auto n44 = gate_and(n43, y[4]);
  auto n71 = gate_xor(n45, n44);
  auto n59 = gate_and(n71, n167);
  auto n57 = gate_xor(n71, n167);
  auto n47 = gate_xor(n46, n175);
  auto n48 = gate_and(n47, y[4]);
  auto n75 = gate_xor(n49, n48);
  auto n56 = gate_and(n75, n173);
  auto n54 = gate_xor(n75, n173);
  auto n50 = gate_and(y[4], b[0]);
  auto n79 = gate_xor(n50, a[4]);
  auto n53 = gate_and(n175, n79);
  auto n51 = gate_xor(n175, n79);
  auto n76 = gate_or(a[3], n174);
  auto n52 = gate_and(n51, n76);
  auto n72 = gate_or(n53, n52);
  auto n55 = gate_and(n54, n72);
  auto n68 = gate_or(n56, n55);
  auto n58 = gate_and(n57, n68);
  auto n60 = gate_or(n59, n58);
  auto n65 = gate_and(n161, n60);
  auto n63 = gate_xor(n161, n60);
  auto n61 = gate_not(y[4]);
  auto n95 = gate_and(n62, n61);
  auto n64 = gate_and(n63, n95);
  auto n66 = gate_or(n65, n64);
  y[3] = gate_and(n67, n66);
  auto n69 = gate_xor(n68, n167);
  auto n70 = gate_and(n69, y[3]);
  auto n103 = gate_xor(n71, n70);
  auto n92 = gate_and(n103, n161);
  auto n90 = gate_xor(n103, n161);
  auto n73 = gate_xor(n72, n173);
  auto n74 = gate_and(n73, y[3]);
  auto n107 = gate_xor(n75, n74);
  auto n89 = gate_and(n107, n167);
  auto n87 = gate_xor(n107, n167);
  auto n77 = gate_xor(n76, n175);
  auto n78 = gate_and(n77, y[3]);
  auto n111 = gate_xor(n79, n78);
  auto n86 = gate_and(n111, n173);
  auto n84 = gate_xor(n111, n173);
  auto n80 = gate_and(y[3], b[0]);
  auto n115 = gate_xor(n80, a[3]);
  auto n83 = gate_and(n175, n115);
  auto n81 = gate_xor(n175, n115);
  auto n113 = gate_or(a[2], n174);
  auto n82 = gate_and(n81, n113);
  auto n109 = gate_or(n83, n82);
  auto n85 = gate_and(n84, n109);
  auto n105 = gate_or(n86, n85);
  auto n88 = gate_and(n87, n105);
  auto n101 = gate_or(n89, n88);
  auto n91 = gate_and(n90, n101);
  auto n93 = gate_or(n92, n91);
  auto n98 = gate_and(n93, n155);
  auto n96 = gate_xor(n93, n155);
  auto n94 = gate_not(y[3]);
  auto n136 = gate_and(n95, n94);
  auto n97 = gate_and(n96, n136);
  auto n99 = gate_or(n98, n97);
  y[2] = gate_and(n100, n99);
  auto n102 = gate_xor(n161, n101);
  auto n104 = gate_and(y[2], n102);
  auto n147 = gate_xor(n104, n103);
  auto n132 = gate_and(n147, n155);
  auto n130 = gate_xor(n147, n155);
  auto n106 = gate_xor(n167, n105);
  auto n108 = gate_and(y[2], n106);
  auto n153 = gate_xor(n108, n107);
  auto n129 = gate_and(n153, n161);
  auto n127 = gate_xor(n153, n161);
  auto n110 = gate_xor(n173, n109);
  auto n112 = gate_and(y[2], n110);
  auto n159 = gate_xor(n112, n111);
  auto n126 = gate_and(n159, n167);
  auto n124 = gate_xor(n159, n167);
  auto n114 = gate_xor(n113, n175);
  auto n116 = gate_and(y[2], n114);
  auto n165 = gate_xor(n116, n115);
  auto n123 = gate_and(n165, n173);
  auto n121 = gate_xor(n165, n173);
  auto n117 = gate_and(y[2], b[0]);
  auto n171 = gate_xor(n117, a[2]);
  auto n120 = gate_and(n175, n171);
  auto n118 = gate_xor(n175, n171);
  auto n168 = gate_or(a[1], n174);
  auto n119 = gate_and(n118, n168);
  auto n162 = gate_or(n120, n119);
  auto n122 = gate_and(n121, n162);
  auto n156 = gate_or(n123, n122);
  auto n125 = gate_and(n124, n156);
  auto n150 = gate_or(n126, n125);
  auto n128 = gate_and(n127, n150);
  auto n144 = gate_or(n129, n128);
  auto n131 = gate_and(n130, n144);
  auto n134 = gate_or(n132, n131);
  auto n133 = gate_or(n136, n149);
  auto n138 = gate_and(n134, n133);
  auto n135 = gate_not(y[2]);
  auto n141 = gate_and(n136, n135);
  auto n137 = gate_and(n141, n149);
  auto n139 = gate_or(n138, n137);
  y[1] = gate_and(n143, n139);
  auto n140 = gate_not(y[1]);
  auto n142 = gate_and(n141, n140);
  auto n205 = gate_and(n143, n142);
  auto n203 = gate_xor(n143, n142);
  auto n145 = gate_xor(n144, n155);
  auto n146 = gate_and(n145, y[1]);
  auto n148 = gate_xor(n147, n146);
  auto n201 = gate_and(n149, n148);
  auto n199 = gate_xor(n149, n148);
  auto n151 = gate_xor(n150, n161);
  auto n152 = gate_and(n151, y[1]);
  auto n154 = gate_xor(n153, n152);
  auto n197 = gate_and(n155, n154);
  auto n195 = gate_xor(n155, n154);
  auto n157 = gate_xor(n156, n167);
  auto n158 = gate_and(n157, y[1]);
  auto n160 = gate_xor(n159, n158);
  auto n193 = gate_and(n161, n160);
  auto n191 = gate_xor(n161, n160);
  auto n163 = gate_xor(n162, n173);
  auto n164 = gate_and(n163, y[1]);
  auto n166 = gate_xor(n165, n164);
  auto n189 = gate_and(n167, n166);
  auto n187 = gate_xor(n167, n166);
  auto n169 = gate_xor(n168, n175);
  auto n170 = gate_and(n169, y[1]);
  auto n172 = gate_xor(n171, n170);
  auto n185 = gate_and(n173, n172);
  auto n183 = gate_xor(n173, n172);
  auto n176 = gate_or(a[0], n174);
  auto n181 = gate_and(n176, n175);
  auto n179 = gate_xor(n176, n175);
  auto n177 = gate_and(y[1], b[0]);
  auto n178 = gate_xor(n177, a[1]);
  auto n180 = gate_and(n179, n178);
  auto n182 = gate_or(n181, n180);
  auto n184 = gate_and(n183, n182);
  auto n186 = gate_or(n185, n184);
  auto n188 = gate_and(n187, n186);
  auto n190 = gate_or(n189, n188);
  auto n192 = gate_and(n191, n190);
  auto n194 = gate_or(n193, n192);
  auto n196 = gate_and(n195, n194);
  auto n198 = gate_or(n197, n196);
  auto n200 = gate_and(n199, n198);
  auto n202 = gate_or(n201, n200);
  auto n204 = gate_and(n203, n202);
  y[0] = gate_or(n205, n204);
}
template<> void $NameUint<8>::d_divsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n1 = gate_nand(b[0], a[0]);
  auto n251 = gate_xor(a[7], b[7]);
  auto n57 = gate_or(b[7], b[0]);
  auto n25 = gate_and(n57, n1);
  auto n72 = gate_xor(b[1], b[7]);
  auto n176 = gate_and(n25, n72);
  auto n174 = gate_xor(n25, n72);
  auto n218 = gate_xor(b[6], b[7]);
  auto n210 = gate_xor(b[4], b[7]);
  auto n137 = gate_not(n210);
  auto n132 = gate_not(n218);
  auto n208 = gate_xor(b[5], b[7]);
  auto n130 = gate_not(n208);
  auto n98 = gate_and(n132, n130);
  auto n187 = gate_xor(b[3], b[7]);
  auto n199 = gate_not(n187);
  auto n110 = gate_or(a[0], a[1]);
  auto n78 = gate_or(n110, a[2]);
  auto n55 = gate_or(n78, a[3]);
  auto n35 = gate_or(n55, a[4]);
  auto n27 = gate_or(n35, a[5]);
  auto n26 = gate_and(n27, a[7]);
  auto n34 = gate_xor(n26, a[6]);
  auto n23 = gate_nand(b[0], n34);
  auto n31 = gate_and(n57, n23);
  auto n29 = gate_not(n27);
  auto n28 = gate_not(a[6]);
  auto n30 = gate_and(n29, n28);
  auto n233 = gate_and(a[7], n30);
  auto n67 = gate_and(n98, n137);
  auto n49 = gate_and(n67, n199);
  auto n177 = gate_xor(b[2], b[7]);
  auto n189 = gate_not(n177);
  auto n32 = gate_and(n49, n189);
  auto n179 = gate_not(n72);
  auto n253 = gate_and(n32, n179);
  auto n6 = gate_nand(n253, b[0]);
  auto n45 = gate_and(n233, n6);
  auto n14 = gate_nand(n45, n179);
  auto n5 = gate_nand(n31, n14);
  auto n42 = gate_not(n233);
  auto n3 = gate_nand(n42, n177);
  auto n4 = gate_nand(n72, n42);
  auto n33 = gate_and(n5, n4);
  auto n232 = gate_and(n33, n32);
  auto n44 = gate_not(n232);
  auto n50 = gate_and(n34, n44);
  auto n41 = gate_and(n179, n50);
  auto n39 = gate_xor(n179, n50);
  auto n250 = gate_not(n57);
  auto n36 = gate_and(n35, a[7]);
  auto n53 = gate_xor(n36, a[5]);
  auto n37 = gate_and(b[0], n53);
  auto n38 = gate_or(n250, n37);
  auto n40 = gate_and(n39, n38);
  auto n43 = gate_or(n41, n40);
  auto n47 = gate_and(n43, n3);
  auto n52 = gate_and(n45, n44);
  auto n46 = gate_and(n52, n189);
  auto n48 = gate_or(n47, n46);
  auto n231 = gate_and(n49, n48);
  auto n51 = gate_not(n231);
  auto n70 = gate_and(n50, n51);
  auto n93 = gate_and(n52, n51);
  auto n66 = gate_xor(n199, n93);
  auto n54 = gate_and(n231, b[0]);
  auto n74 = gate_xor(n54, n53);
  auto n22 = gate_nand(n179, n74);
  auto n56 = gate_and(n55, a[7]);
  auto n77 = gate_xor(n56, a[4]);
  auto n13 = gate_nand(n77, b[0]);
  auto n71 = gate_and(n57, n13);
  auto n58 = gate_xor(n72, n74);
  auto n59 = gate_or(n71, n58);
  auto n60 = gate_and(n22, n59);
  auto n64 = gate_and(n60, n177);
  auto n62 = gate_xor(n60, n177);
  auto n61 = gate_not(n70);
  auto n63 = gate_and(n62, n61);
  auto n65 = gate_or(n64, n63);
  auto n7 = gate_nand(n66, n65);
  auto n68 = gate_or(n199, n93);
  auto n69 = gate_and(n68, n67);
  auto n230 = gate_and(n7, n69);
  auto n92 = gate_not(n230);
  auto n103 = gate_and(n70, n92);
  auto n90 = gate_and(n199, n103);
  auto n88 = gate_xor(n199, n103);
  auto n73 = gate_xor(n72, n71);
  auto n75 = gate_and(n230, n73);
  auto n101 = gate_xor(n75, n74);
  auto n86 = gate_and(n101, n189);
  auto n84 = gate_xor(n101, n189);
  auto n76 = gate_and(b[0], n230);
  auto n106 = gate_xor(n77, n76);
  auto n83 = gate_and(n106, n179);
  auto n81 = gate_xor(n179, n106);
  auto n79 = gate_and(n78, a[7]);
  auto n108 = gate_xor(n79, a[3]);
  auto n80 = gate_and(b[0], n108);
  auto n104 = gate_or(n250, n80);
  auto n82 = gate_and(n81, n104);
  auto n99 = gate_or(n83, n82);
  auto n85 = gate_and(n84, n99);
  auto n87 = gate_or(n86, n85);
  auto n89 = gate_and(n88, n87);
  auto n91 = gate_or(n90, n89);
  auto n96 = gate_and(n91, n137);
  auto n94 = gate_xor(n91, n137);
  auto n129 = gate_and(n93, n92);
  auto n95 = gate_and(n94, n129);
  auto n97 = gate_or(n96, n95);
  auto n229 = gate_and(n98, n97);
  auto n100 = gate_xor(n189, n99);
  auto n102 = gate_and(n229, n100);
  auto n136 = gate_xor(n102, n101);
  auto n21 = gate_nand(n136, n199);
  auto n128 = gate_not(n229);
  auto n160 = gate_and(n128, n103);
  auto n121 = gate_xor(n137, n160);
  auto n119 = gate_xor(n199, n136);
  auto n105 = gate_xor(n179, n104);
  auto n107 = gate_and(n229, n105);
  auto n141 = gate_xor(n107, n106);
  auto n118 = gate_and(n141, n189);
  auto n116 = gate_xor(n189, n141);
  auto n109 = gate_and(n229, b[0]);
  auto n144 = gate_xor(n109, n108);
  auto n115 = gate_and(n144, n179);
  auto n113 = gate_xor(n144, n179);
  auto n111 = gate_and(n110, a[7]);
  auto n146 = gate_xor(n111, a[2]);
  auto n112 = gate_and(b[0], n146);
  auto n142 = gate_or(n250, n112);
  auto n114 = gate_and(n113, n142);
  auto n138 = gate_or(n115, n114);
  auto n117 = gate_and(n116, n138);
  auto n133 = gate_or(n118, n117);
  auto n20 = gate_nand(n119, n133);
  auto n120 = gate_and(n21, n20);
  auto n127 = gate_and(n121, n120);
  auto n122 = gate_not(n160);
  auto n125 = gate_and(n210, n122);
  auto n123 = gate_not(n129);
  auto n124 = gate_and(n208, n123);
  auto n126 = gate_or(n125, n124);
  auto n131 = gate_or(n127, n126);
  auto n167 = gate_and(n129, n128);
  auto n2 = gate_nand(n167, n130);
  auto n8 = gate_nand(n131, n2);
  auto n228 = gate_and(n8, n132);
  auto n134 = gate_xor(n133, n199);
  auto n135 = gate_and(n228, n134);
  auto n214 = gate_xor(n136, n135);
  auto n19 = gate_nand(n137, n214);
  auto n139 = gate_xor(n138, n189);
  auto n140 = gate_and(n228, n139);
  auto n198 = gate_xor(n141, n140);
  auto n17 = gate_nand(n199, n198);
  auto n156 = gate_xor(n199, n198);
  auto n143 = gate_xor(n179, n142);
  auto n145 = gate_and(n228, n143);
  auto n193 = gate_xor(n145, n144);
  auto n155 = gate_and(n193, n189);
  auto n153 = gate_xor(n193, n189);
  auto n147 = gate_and(n228, b[0]);
  auto n183 = gate_xor(n147, n146);
  auto n152 = gate_and(n183, n179);
  auto n150 = gate_xor(n183, n179);
  auto n148 = gate_and(a[0], a[7]);
  auto n172 = gate_xor(n148, a[1]);
  auto n149 = gate_and(b[0], n172);
  auto n180 = gate_or(n250, n149);
  auto n151 = gate_and(n150, n180);
  auto n190 = gate_or(n152, n151);
  auto n154 = gate_and(n153, n190);
  auto n200 = gate_or(n155, n154);
  auto n16 = gate_nand(n156, n200);
  auto n211 = gate_and(n17, n16);
  auto n157 = gate_xor(n210, n214);
  auto n158 = gate_or(n211, n157);
  auto n159 = gate_and(n19, n158);
  auto n164 = gate_and(n159, n208);
  auto n162 = gate_xor(n159, n208);
  auto n166 = gate_not(n228);
  auto n220 = gate_and(n160, n166);
  auto n161 = gate_not(n220);
  auto n163 = gate_and(n162, n161);
  auto n165 = gate_or(n164, n163);
  auto n171 = gate_and(n218, n165);
  auto n169 = gate_xor(n218, n165);
  auto n224 = gate_and(n167, n166);
  auto n168 = gate_not(n224);
  auto n170 = gate_and(n169, n168);
  auto n225 = gate_or(n171, n170);
  auto n9 = gate_nand(n225, n224);
  auto n10 = gate_nand(n220, n225);
  auto n227 = gate_not(n225);
  auto n173 = gate_and(n227, b[0]);
  auto n11 = gate_xnor(n173, n172);
  auto n175 = gate_and(n174, n11);
  auto n178 = gate_or(n176, n175);
  auto n186 = gate_and(n178, n177);
  auto n184 = gate_xor(n178, n177);
  auto n181 = gate_xor(n180, n179);
  auto n182 = gate_and(n227, n181);
  auto n12 = gate_xnor(n183, n182);
  auto n185 = gate_and(n184, n12);
  auto n188 = gate_or(n186, n185);
  auto n196 = gate_and(n188, n187);
  auto n194 = gate_xor(n188, n187);
  auto n191 = gate_xor(n190, n189);
  auto n192 = gate_and(n227, n191);
  auto n15 = gate_xnor(n193, n192);
  auto n195 = gate_and(n194, n15);
  auto n197 = gate_or(n196, n195);
  auto n207 = gate_and(n197, n210);
  auto n205 = gate_xor(n197, n210);
  auto n203 = gate_not(n198);
  auto n201 = gate_xor(n200, n199);
  auto n202 = gate_and(n227, n201);
  auto n204 = gate_xor(n203, n202);
  auto n206 = gate_and(n205, n204);
  auto n209 = gate_or(n207, n206);
  auto n217 = gate_and(n209, n208);
  auto n215 = gate_xor(n209, n208);
  auto n212 = gate_xor(n211, n210);
  auto n213 = gate_and(n227, n212);
  auto n18 = gate_xnor(n214, n213);
  auto n216 = gate_and(n215, n18);
  auto n219 = gate_or(n217, n216);
  auto n223 = gate_and(n219, n218);
  auto n221 = gate_xor(n219, n218);
  auto n222 = gate_and(n221, n10);
  auto n226 = gate_or(n223, n222);
  auto n254 = gate_and(n226, n9);
  auto n249 = gate_and(n251, n254);
  auto n248 = gate_xor(n251, n227);
  auto n247 = gate_and(n249, n248);
  auto n246 = gate_xor(n251, n228);
  auto n245 = gate_and(n247, n246);
  auto n244 = gate_xor(n251, n229);
  auto n243 = gate_and(n245, n244);
  auto n242 = gate_xor(n251, n230);
  auto n241 = gate_and(n243, n242);
  auto n240 = gate_xor(n251, n231);
  auto n239 = gate_and(n241, n240);
  auto n238 = gate_xor(n251, n232);
  auto n237 = gate_and(n239, n238);
  auto n234 = gate_and(n233, n253);
  auto n235 = gate_and(b[0], n234);
  auto n236 = gate_xor(n251, n235);
  y[7] = gate_xor(n237, n236);
  y[6] = gate_xor(n239, n238);
  y[5] = gate_xor(n241, n240);
  y[4] = gate_xor(n243, n242);
  y[3] = gate_xor(n245, n244);
  y[2] = gate_xor(n247, n246);
  y[1] = gate_xor(n249, n248);
  auto n252 = gate_and(n251, n250);
  auto n255 = gate_and(n253, n252);
  y[0] = gate_xnor(n255, n254);
}
template<> void $NameUint<8>::d_eq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n23 = gate_xnor(b[7], a[7]);
  auto n24 = gate_xnor(a[0], b[0]);
  auto n25 = gate_xnor(a[1], b[1]);
  auto n26 = gate_xnor(b[4], a[4]);
  auto n27 = gate_not(a[6]);
  auto n30 = gate_xor(n27, b[6]);
  auto n28 = gate_not(a[2]);
  auto n29 = gate_xor(n28, b[2]);
  auto n31 = gate_and(n30, n29);
  auto n32 = gate_and(n31, n24);
  auto n40 = gate_and(n32, n25);
  auto n33 = gate_not(b[3]);
  auto n36 = gate_xor(n33, a[3]);
  auto n34 = gate_not(b[5]);
  auto n35 = gate_xor(n34, a[5]);
  auto n37 = gate_and(n36, n35);
  auto n38 = gate_and(n37, n23);
  auto n39 = gate_and(n38, n26);
  y[0] = gate_and(n40, n39);
}
template<> void $NameUint<8>::d_ge
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n40 = gate_not(b[7]);
  auto n73 = gate_and(n40, a[7]);
  auto n71 = gate_xor(n40, a[7]);
  auto n41 = gate_not(b[6]);
  auto n69 = gate_and(n41, a[6]);
  auto n67 = gate_xor(n41, a[6]);
  auto n42 = gate_not(b[5]);
  auto n65 = gate_and(n42, a[5]);
  auto n63 = gate_xor(n42, a[5]);
  auto n43 = gate_not(b[4]);
  auto n61 = gate_and(n43, a[4]);
  auto n59 = gate_xor(n43, a[4]);
  auto n44 = gate_not(b[3]);
  auto n57 = gate_and(n44, a[3]);
  auto n55 = gate_xor(n44, a[3]);
  auto n45 = gate_not(b[2]);
  auto n53 = gate_and(n45, a[2]);
  auto n51 = gate_xor(n45, a[2]);
  auto n46 = gate_not(a[0]);
  auto n49 = gate_and(b[0], n46);
  auto n39 = gate_nand(b[1], n49);
  auto n48 = gate_xor(b[1], n49);
  auto n47 = gate_not(a[1]);
  auto n38 = gate_nand(n48, n47);
  auto n50 = gate_and(n38, n39);
  auto n52 = gate_and(n51, n50);
  auto n54 = gate_or(n53, n52);
  auto n56 = gate_and(n55, n54);
  auto n58 = gate_or(n57, n56);
  auto n60 = gate_and(n59, n58);
  auto n62 = gate_or(n61, n60);
  auto n64 = gate_and(n63, n62);
  auto n66 = gate_or(n65, n64);
  auto n68 = gate_and(n67, n66);
  auto n70 = gate_or(n69, n68);
  auto n72 = gate_and(n71, n70);
  y[0] = gate_or(n73, n72);
}
template<> void $NameUint<8>::d_gesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n40 = gate_not(a[7]);
  auto n73 = gate_and(n40, b[7]);
  auto n71 = gate_xor(n40, b[7]);
  auto n41 = gate_not(b[6]);
  auto n69 = gate_and(n41, a[6]);
  auto n67 = gate_xor(n41, a[6]);
  auto n42 = gate_not(b[5]);
  auto n65 = gate_and(n42, a[5]);
  auto n63 = gate_xor(n42, a[5]);
  auto n43 = gate_not(b[4]);
  auto n61 = gate_and(n43, a[4]);
  auto n59 = gate_xor(n43, a[4]);
  auto n44 = gate_not(b[3]);
  auto n57 = gate_and(n44, a[3]);
  auto n55 = gate_xor(n44, a[3]);
  auto n45 = gate_not(b[2]);
  auto n53 = gate_and(n45, a[2]);
  auto n51 = gate_xor(n45, a[2]);
  auto n46 = gate_not(a[0]);
  auto n49 = gate_and(b[0], n46);
  auto n39 = gate_nand(b[1], n49);
  auto n48 = gate_xor(b[1], n49);
  auto n47 = gate_not(a[1]);
  auto n38 = gate_nand(n48, n47);
  auto n50 = gate_and(n38, n39);
  auto n52 = gate_and(n51, n50);
  auto n54 = gate_or(n53, n52);
  auto n56 = gate_and(n55, n54);
  auto n58 = gate_or(n57, n56);
  auto n60 = gate_and(n59, n58);
  auto n62 = gate_or(n61, n60);
  auto n64 = gate_and(n63, n62);
  auto n66 = gate_or(n65, n64);
  auto n68 = gate_and(n67, n66);
  auto n70 = gate_or(n69, n68);
  auto n72 = gate_and(n71, n70);
  y[0] = gate_or(n73, n72);
}
template<> void $NameUint<8>::d_gt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n37 = gate_not(b[7]);
  auto n72 = gate_and(n37, a[7]);
  auto n70 = gate_xor(n37, a[7]);
  auto n38 = gate_not(b[6]);
  auto n68 = gate_and(n38, a[6]);
  auto n66 = gate_xor(n38, a[6]);
  auto n39 = gate_not(b[5]);
  auto n64 = gate_and(n39, a[5]);
  auto n62 = gate_xor(n39, a[5]);
  auto n40 = gate_not(b[4]);
  auto n60 = gate_and(n40, a[4]);
  auto n58 = gate_xor(n40, a[4]);
  auto n41 = gate_not(b[3]);
  auto n56 = gate_and(n41, a[3]);
  auto n54 = gate_xor(n41, a[3]);
  auto n42 = gate_not(b[2]);
  auto n52 = gate_and(n42, a[2]);
  auto n50 = gate_xor(n42, a[2]);
  auto n43 = gate_not(b[0]);
  auto n44 = gate_and(a[0], n43);
  auto n48 = gate_and(n44, a[1]);
  auto n46 = gate_xor(n44, a[1]);
  auto n45 = gate_not(b[1]);
  auto n47 = gate_and(n46, n45);
  auto n49 = gate_or(n48, n47);
  auto n51 = gate_and(n50, n49);
  auto n53 = gate_or(n52, n51);
  auto n55 = gate_and(n54, n53);
  auto n57 = gate_or(n56, n55);
  auto n59 = gate_and(n58, n57);
  auto n61 = gate_or(n60, n59);
  auto n63 = gate_and(n62, n61);
  auto n65 = gate_or(n64, n63);
  auto n67 = gate_and(n66, n65);
  auto n69 = gate_or(n68, n67);
  auto n71 = gate_and(n70, n69);
  y[0] = gate_or(n72, n71);
}
template<> void $NameUint<8>::d_gtsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n37 = gate_not(a[7]);
  auto n72 = gate_and(n37, b[7]);
  auto n70 = gate_xor(n37, b[7]);
  auto n38 = gate_not(b[6]);
  auto n68 = gate_and(n38, a[6]);
  auto n66 = gate_xor(n38, a[6]);
  auto n39 = gate_not(b[5]);
  auto n64 = gate_and(n39, a[5]);
  auto n62 = gate_xor(n39, a[5]);
  auto n40 = gate_not(b[4]);
  auto n60 = gate_and(n40, a[4]);
  auto n58 = gate_xor(n40, a[4]);
  auto n41 = gate_not(b[3]);
  auto n56 = gate_and(n41, a[3]);
  auto n54 = gate_xor(n41, a[3]);
  auto n42 = gate_not(b[2]);
  auto n52 = gate_and(n42, a[2]);
  auto n50 = gate_xor(n42, a[2]);
  auto n43 = gate_not(b[0]);
  auto n44 = gate_and(a[0], n43);
  auto n48 = gate_and(n44, a[1]);
  auto n46 = gate_xor(n44, a[1]);
  auto n45 = gate_not(b[1]);
  auto n47 = gate_and(n46, n45);
  auto n49 = gate_or(n48, n47);
  auto n51 = gate_and(n50, n49);
  auto n53 = gate_or(n52, n51);
  auto n55 = gate_and(n54, n53);
  auto n57 = gate_or(n56, n55);
  auto n59 = gate_and(n58, n57);
  auto n61 = gate_or(n60, n59);
  auto n63 = gate_and(n62, n61);
  auto n65 = gate_or(n64, n63);
  auto n67 = gate_and(n66, n65);
  auto n69 = gate_or(n68, n67);
  auto n71 = gate_and(n70, n69);
  y[0] = gate_or(n72, n71);
}
template<> void $NameUint<8>::d_inc
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[0], a[1]);
  auto n2 = gate_and(a[0], a[1]);
  y[2] = gate_xor(n2, a[2]);
  auto n3 = gate_and(n2, a[2]);
  y[3] = gate_xor(n3, a[3]);
  auto n4 = gate_and(n3, a[3]);
  y[4] = gate_xor(n4, a[4]);
  auto n5 = gate_and(n4, a[4]);
  y[5] = gate_xor(n5, a[5]);
  auto n6 = gate_and(n5, a[5]);
  y[6] = gate_xor(n6, a[6]);
  auto n7 = gate_and(n6, a[6]);
  y[7] = gate_xor(a[7], n7);
}
template<> void $NameUint<8>::d_ineq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n16 = gate_xor(b[4], a[4]);
  auto n15 = gate_xor(b[5], a[5]);
  auto n20 = gate_or(n16, n15);
  auto n18 = gate_xor(b[2], a[2]);
  auto n17 = gate_xor(b[3], a[3]);
  auto n19 = gate_or(n18, n17);
  auto n28 = gate_or(n20, n19);
  auto n22 = gate_xor(b[0], a[0]);
  auto n21 = gate_xor(b[1], a[1]);
  auto n26 = gate_or(n22, n21);
  auto n24 = gate_xor(b[6], a[6]);
  auto n23 = gate_xor(b[7], a[7]);
  auto n25 = gate_or(n24, n23);
  auto n27 = gate_or(n26, n25);
  y[0] = gate_or(n28, n27);
}
template<> void $NameUint<8>::d_intmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n34 = gate_not(a[2]);
  auto n33 = gate_not(a[3]);
  auto n38 = gate_and(n34, n33);
  auto n36 = gate_not(a[0]);
  auto n35 = gate_not(a[1]);
  auto n37 = gate_and(n36, n35);
  auto n46 = gate_and(n38, n37);
  auto n40 = gate_not(a[6]);
  auto n39 = gate_not(a[7]);
  auto n44 = gate_and(n40, n39);
  auto n42 = gate_not(a[4]);
  auto n41 = gate_not(a[5]);
  auto n43 = gate_and(n42, n41);
  auto n45 = gate_and(n44, n43);
  auto n62 = gate_and(n46, n45);
  auto n61 = gate_not(n62);
  auto n48 = gate_and(b[0], n61);
  auto n47 = gate_and(n62, c[0]);
  y[0] = gate_or(n48, n47);
  auto n50 = gate_and(b[1], n61);
  auto n49 = gate_and(n62, c[1]);
  y[1] = gate_or(n50, n49);
  auto n52 = gate_and(b[2], n61);
  auto n51 = gate_and(n62, c[2]);
  y[2] = gate_or(n52, n51);
  auto n54 = gate_and(b[3], n61);
  auto n53 = gate_and(n62, c[3]);
  y[3] = gate_or(n54, n53);
  auto n56 = gate_and(b[4], n61);
  auto n55 = gate_and(n62, c[4]);
  y[4] = gate_or(n56, n55);
  auto n58 = gate_and(b[5], n61);
  auto n57 = gate_and(n62, c[5]);
  y[5] = gate_or(n58, n57);
  auto n60 = gate_and(b[6], n61);
  auto n59 = gate_and(n62, c[6]);
  y[6] = gate_or(n60, n59);
  auto n64 = gate_and(b[7], n61);
  auto n63 = gate_and(n62, c[7]);
  y[7] = gate_or(n64, n63);
}
template<> void $NameUint<8>::d_le
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n40 = gate_not(a[7]);
  auto n73 = gate_and(n40, b[7]);
  auto n71 = gate_xor(n40, b[7]);
  auto n41 = gate_not(a[6]);
  auto n69 = gate_and(n41, b[6]);
  auto n67 = gate_xor(n41, b[6]);
  auto n42 = gate_not(a[5]);
  auto n65 = gate_and(n42, b[5]);
  auto n63 = gate_xor(n42, b[5]);
  auto n43 = gate_not(a[4]);
  auto n61 = gate_and(n43, b[4]);
  auto n59 = gate_xor(n43, b[4]);
  auto n44 = gate_not(a[3]);
  auto n57 = gate_and(n44, b[3]);
  auto n55 = gate_xor(n44, b[3]);
  auto n45 = gate_not(a[2]);
  auto n53 = gate_and(n45, b[2]);
  auto n51 = gate_xor(n45, b[2]);
  auto n46 = gate_not(b[0]);
  auto n49 = gate_and(a[0], n46);
  auto n38 = gate_nand(a[1], n49);
  auto n48 = gate_xor(a[1], n49);
  auto n47 = gate_not(b[1]);
  auto n39 = gate_nand(n48, n47);
  auto n50 = gate_and(n39, n38);
  auto n52 = gate_and(n51, n50);
  auto n54 = gate_or(n53, n52);
  auto n56 = gate_and(n55, n54);
  auto n58 = gate_or(n57, n56);
  auto n60 = gate_and(n59, n58);
  auto n62 = gate_or(n61, n60);
  auto n64 = gate_and(n63, n62);
  auto n66 = gate_or(n65, n64);
  auto n68 = gate_and(n67, n66);
  auto n70 = gate_or(n69, n68);
  auto n72 = gate_and(n71, n70);
  y[0] = gate_or(n73, n72);
}
template<> void $NameUint<8>::d_lesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n40 = gate_not(b[7]);
  auto n73 = gate_and(n40, a[7]);
  auto n71 = gate_xor(n40, a[7]);
  auto n41 = gate_not(a[6]);
  auto n69 = gate_and(n41, b[6]);
  auto n67 = gate_xor(n41, b[6]);
  auto n42 = gate_not(a[5]);
  auto n65 = gate_and(n42, b[5]);
  auto n63 = gate_xor(n42, b[5]);
  auto n43 = gate_not(a[4]);
  auto n61 = gate_and(n43, b[4]);
  auto n59 = gate_xor(n43, b[4]);
  auto n44 = gate_not(a[3]);
  auto n57 = gate_and(n44, b[3]);
  auto n55 = gate_xor(n44, b[3]);
  auto n45 = gate_not(a[2]);
  auto n53 = gate_and(n45, b[2]);
  auto n51 = gate_xor(n45, b[2]);
  auto n46 = gate_not(b[0]);
  auto n49 = gate_and(a[0], n46);
  auto n38 = gate_nand(a[1], n49);
  auto n48 = gate_xor(a[1], n49);
  auto n47 = gate_not(b[1]);
  auto n39 = gate_nand(n48, n47);
  auto n50 = gate_and(n39, n38);
  auto n52 = gate_and(n51, n50);
  auto n54 = gate_or(n53, n52);
  auto n56 = gate_and(n55, n54);
  auto n58 = gate_or(n57, n56);
  auto n60 = gate_and(n59, n58);
  auto n62 = gate_or(n61, n60);
  auto n64 = gate_and(n63, n62);
  auto n66 = gate_or(n65, n64);
  auto n68 = gate_and(n67, n66);
  auto n70 = gate_or(n69, n68);
  auto n72 = gate_and(n71, n70);
  y[0] = gate_or(n73, n72);
}
template<> void $NameUint<8>::d_logand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n16 = gate_or(a[1], a[0]);
  auto n15 = gate_or(a[3], a[2]);
  auto n20 = gate_or(n16, n15);
  auto n18 = gate_or(a[5], a[4]);
  auto n17 = gate_or(a[7], a[6]);
  auto n19 = gate_or(n18, n17);
  auto n28 = gate_or(n20, n19);
  auto n22 = gate_or(b[1], b[0]);
  auto n21 = gate_or(b[3], b[2]);
  auto n26 = gate_or(n22, n21);
  auto n24 = gate_or(b[5], b[4]);
  auto n23 = gate_or(b[7], b[6]);
  auto n25 = gate_or(n24, n23);
  auto n27 = gate_or(n26, n25);
  y[0] = gate_and(n28, n27);
}
template<> void $NameUint<8>::d_lognot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n17 = gate_not(a[2]);
  auto n16 = gate_not(a[3]);
  auto n21 = gate_and(n17, n16);
  auto n19 = gate_not(a[0]);
  auto n18 = gate_not(a[1]);
  auto n20 = gate_and(n19, n18);
  auto n29 = gate_and(n21, n20);
  auto n23 = gate_not(a[6]);
  auto n22 = gate_not(a[7]);
  auto n27 = gate_and(n23, n22);
  auto n25 = gate_not(a[4]);
  auto n24 = gate_not(a[5]);
  auto n26 = gate_and(n25, n24);
  auto n28 = gate_and(n27, n26);
  y[0] = gate_and(n29, n28);
}
template<> void $NameUint<8>::d_logor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n16 = gate_or(b[1], b[0]);
  auto n15 = gate_or(b[3], b[2]);
  auto n20 = gate_or(n16, n15);
  auto n18 = gate_or(b[5], b[4]);
  auto n17 = gate_or(b[7], b[6]);
  auto n19 = gate_or(n18, n17);
  auto n28 = gate_or(n20, n19);
  auto n22 = gate_or(a[1], a[0]);
  auto n21 = gate_or(a[3], a[2]);
  auto n26 = gate_or(n22, n21);
  auto n24 = gate_or(a[5], a[4]);
  auto n23 = gate_or(a[7], a[6]);
  auto n25 = gate_or(n24, n23);
  auto n27 = gate_or(n26, n25);
  y[0] = gate_or(n28, n27);
}
template<> void $NameUint<8>::d_lt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n37 = gate_not(a[7]);
  auto n72 = gate_and(n37, b[7]);
  auto n70 = gate_xor(n37, b[7]);
  auto n38 = gate_not(a[6]);
  auto n68 = gate_and(n38, b[6]);
  auto n66 = gate_xor(n38, b[6]);
  auto n39 = gate_not(a[5]);
  auto n64 = gate_and(n39, b[5]);
  auto n62 = gate_xor(n39, b[5]);
  auto n40 = gate_not(a[4]);
  auto n60 = gate_and(n40, b[4]);
  auto n58 = gate_xor(n40, b[4]);
  auto n41 = gate_not(a[3]);
  auto n56 = gate_and(n41, b[3]);
  auto n54 = gate_xor(n41, b[3]);
  auto n42 = gate_not(a[2]);
  auto n52 = gate_and(n42, b[2]);
  auto n50 = gate_xor(n42, b[2]);
  auto n43 = gate_not(a[0]);
  auto n44 = gate_and(b[0], n43);
  auto n48 = gate_and(n44, b[1]);
  auto n46 = gate_xor(n44, b[1]);
  auto n45 = gate_not(a[1]);
  auto n47 = gate_and(n46, n45);
  auto n49 = gate_or(n48, n47);
  auto n51 = gate_and(n50, n49);
  auto n53 = gate_or(n52, n51);
  auto n55 = gate_and(n54, n53);
  auto n57 = gate_or(n56, n55);
  auto n59 = gate_and(n58, n57);
  auto n61 = gate_or(n60, n59);
  auto n63 = gate_and(n62, n61);
  auto n65 = gate_or(n64, n63);
  auto n67 = gate_and(n66, n65);
  auto n69 = gate_or(n68, n67);
  auto n71 = gate_and(n70, n69);
  y[0] = gate_or(n72, n71);
}
template<> void $NameUint<8>::d_ltsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n37 = gate_not(b[7]);
  auto n72 = gate_and(n37, a[7]);
  auto n70 = gate_xor(n37, a[7]);
  auto n38 = gate_not(a[6]);
  auto n68 = gate_and(n38, b[6]);
  auto n66 = gate_xor(n38, b[6]);
  auto n39 = gate_not(a[5]);
  auto n64 = gate_and(n39, b[5]);
  auto n62 = gate_xor(n39, b[5]);
  auto n40 = gate_not(a[4]);
  auto n60 = gate_and(n40, b[4]);
  auto n58 = gate_xor(n40, b[4]);
  auto n41 = gate_not(a[3]);
  auto n56 = gate_and(n41, b[3]);
  auto n54 = gate_xor(n41, b[3]);
  auto n42 = gate_not(a[2]);
  auto n52 = gate_and(n42, b[2]);
  auto n50 = gate_xor(n42, b[2]);
  auto n43 = gate_not(a[0]);
  auto n44 = gate_and(b[0], n43);
  auto n48 = gate_and(n44, b[1]);
  auto n46 = gate_xor(n44, b[1]);
  auto n45 = gate_not(a[1]);
  auto n47 = gate_and(n46, n45);
  auto n49 = gate_or(n48, n47);
  auto n51 = gate_and(n50, n49);
  auto n53 = gate_or(n52, n51);
  auto n55 = gate_and(n54, n53);
  auto n57 = gate_or(n56, n55);
  auto n59 = gate_and(n58, n57);
  auto n61 = gate_or(n60, n59);
  auto n63 = gate_and(n62, n61);
  auto n65 = gate_or(n64, n63);
  auto n67 = gate_and(n66, n65);
  auto n69 = gate_or(n68, n67);
  auto n71 = gate_and(n70, n69);
  y[0] = gate_or(n72, n71);
}
template<> void $NameUint<8>::d_mod
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n223 = gate_not(b[4]);
  auto n210 = gate_not(b[7]);
  auto n213 = gate_not(b[6]);
  auto n160 = gate_and(n210, n213);
  auto n218 = gate_not(b[5]);
  auto n115 = gate_and(n160, n218);
  auto n87 = gate_and(n115, n223);
  auto n228 = gate_not(b[3]);
  auto n60 = gate_and(n87, n228);
  auto n233 = gate_not(b[2]);
  auto n23 = gate_and(n60, n233);
  auto n185 = gate_not(b[1]);
  auto n22 = gate_xor(n185, a[7]);
  auto n25 = gate_and(n23, n22);
  auto n24 = gate_and(n23, n185);
  auto n34 = gate_and(b[0], n24);
  auto n27 = gate_or(n25, n34);
  auto n26 = gate_not(a[6]);
  auto n1 = gate_nand(n26, b[0]);
  auto n36 = gate_and(n27, n1);
  auto n21 = gate_nand(n36, b[0]);
  auto n45 = gate_and(a[6], n21);
  auto n32 = gate_and(n45, n185);
  auto n30 = gate_xor(n45, n185);
  auto n28 = gate_not(a[5]);
  auto n44 = gate_and(b[0], n28);
  auto n29 = gate_not(n44);
  auto n31 = gate_and(n30, n29);
  auto n42 = gate_or(n32, n31);
  auto n2 = gate_nand(n42, n233);
  auto n33 = gate_or(n233, a[7]);
  auto n40 = gate_and(n42, n33);
  auto n35 = gate_not(n34);
  auto n38 = gate_and(a[7], n35);
  auto n37 = gate_not(n36);
  auto n43 = gate_and(n38, n37);
  auto n39 = gate_and(n43, n233);
  auto n41 = gate_or(n40, n39);
  auto n48 = gate_and(n60, n41);
  auto n19 = gate_nand(n48, n44);
  auto n20 = gate_nand(n48, n2);
  auto n84 = gate_and(n20, n43);
  auto n58 = gate_xor(n228, n84);
  auto n46 = gate_and(n48, b[1]);
  auto n47 = gate_xor(n46, n45);
  auto n65 = gate_and(n19, n47);
  auto n57 = gate_and(n233, n65);
  auto n55 = gate_xor(n233, n65);
  auto n49 = gate_and(n48, b[0]);
  auto n69 = gate_xor(n49, a[5]);
  auto n54 = gate_and(n185, n69);
  auto n52 = gate_xor(n185, n69);
  auto n50 = gate_not(a[4]);
  auto n67 = gate_and(n50, b[0]);
  auto n51 = gate_not(n67);
  auto n53 = gate_and(n52, n51);
  auto n63 = gate_or(n54, n53);
  auto n56 = gate_and(n55, n63);
  auto n82 = gate_or(n57, n56);
  auto n59 = gate_and(n58, n82);
  auto n62 = gate_and(n87, n59);
  auto n61 = gate_and(n60, n84);
  auto n71 = gate_or(n62, n61);
  auto n64 = gate_xor(n63, n233);
  auto n66 = gate_and(n71, n64);
  auto n93 = gate_xor(n66, n65);
  auto n81 = gate_and(n93, n228);
  auto n79 = gate_xor(n228, n93);
  auto n68 = gate_xor(n67, b[1]);
  auto n70 = gate_and(n71, n68);
  auto n97 = gate_xor(n70, n69);
  auto n7 = gate_nand(n97, n233);
  auto n72 = gate_and(n71, b[0]);
  auto n100 = gate_xor(n72, a[4]);
  auto n6 = gate_nand(n185, n100);
  auto n73 = gate_not(a[3]);
  auto n98 = gate_and(b[0], n73);
  auto n74 = gate_xor(b[1], n100);
  auto n75 = gate_or(n98, n74);
  auto n94 = gate_and(n6, n75);
  auto n76 = gate_xor(b[2], n97);
  auto n77 = gate_or(n94, n76);
  auto n90 = gate_and(n7, n77);
  auto n78 = gate_not(n90);
  auto n80 = gate_and(n79, n78);
  auto n114 = gate_or(n81, n80);
  auto n83 = gate_xor(n82, n228);
  auto n5 = gate_nand(n83, n87);
  auto n117 = gate_and(n5, n84);
  auto n85 = gate_xor(n223, n117);
  auto n86 = gate_and(n114, n85);
  auto n89 = gate_and(n115, n86);
  auto n88 = gate_and(n87, n117);
  auto n102 = gate_or(n89, n88);
  auto n91 = gate_xor(n90, b[3]);
  auto n92 = gate_and(n102, n91);
  auto n127 = gate_xor(n93, n92);
  auto n18 = gate_nand(n223, n127);
  auto n95 = gate_xor(n94, b[2]);
  auto n96 = gate_and(n102, n95);
  auto n131 = gate_xor(n97, n96);
  auto n14 = gate_nand(n228, n131);
  auto n99 = gate_xor(n98, b[1]);
  auto n101 = gate_and(n102, n99);
  auto n135 = gate_xor(n101, n100);
  auto n12 = gate_nand(n233, n135);
  auto n103 = gate_and(n102, b[0]);
  auto n139 = gate_xor(n103, a[3]);
  auto n10 = gate_nand(n185, n139);
  auto n104 = gate_not(a[2]);
  auto n137 = gate_and(b[0], n104);
  auto n105 = gate_xor(b[1], n139);
  auto n106 = gate_or(n137, n105);
  auto n133 = gate_and(n10, n106);
  auto n107 = gate_xor(b[2], n135);
  auto n108 = gate_or(n133, n107);
  auto n129 = gate_and(n12, n108);
  auto n109 = gate_xor(b[3], n131);
  auto n110 = gate_or(n129, n109);
  auto n125 = gate_and(n14, n110);
  auto n111 = gate_xor(b[4], n127);
  auto n112 = gate_or(n125, n111);
  auto n119 = gate_and(n18, n112);
  auto n113 = gate_xor(n119, b[5]);
  auto n3 = gate_nand(n113, n160);
  auto n116 = gate_xor(n114, n223);
  auto n8 = gate_nand(n116, n115);
  auto n118 = gate_and(n8, n117);
  auto n206 = gate_and(n3, n118);
  auto n123 = gate_and(n118, n218);
  auto n121 = gate_xor(n218, n118);
  auto n120 = gate_not(n119);
  auto n122 = gate_and(n121, n120);
  auto n124 = gate_or(n123, n122);
  auto n141 = gate_and(n160, n124);
  auto n126 = gate_xor(b[4], n125);
  auto n128 = gate_and(n141, n126);
  auto n165 = gate_xor(n128, n127);
  auto n155 = gate_and(n165, n218);
  auto n153 = gate_xor(n218, n165);
  auto n130 = gate_xor(b[3], n129);
  auto n132 = gate_and(n141, n130);
  auto n169 = gate_xor(n132, n131);
  auto n13 = gate_nand(n223, n169);
  auto n134 = gate_xor(b[2], n133);
  auto n136 = gate_and(n141, n134);
  auto n173 = gate_xor(n136, n135);
  auto n11 = gate_nand(n228, n173);
  auto n138 = gate_xor(n137, b[1]);
  auto n140 = gate_and(n141, n138);
  auto n177 = gate_xor(n140, n139);
  auto n9 = gate_nand(n233, n177);
  auto n142 = gate_and(n141, b[0]);
  auto n181 = gate_xor(n142, a[2]);
  auto n4 = gate_nand(n185, n181);
  auto n143 = gate_not(a[1]);
  auto n179 = gate_and(b[0], n143);
  auto n144 = gate_xor(b[1], n181);
  auto n145 = gate_or(n179, n144);
  auto n175 = gate_and(n4, n145);
  auto n146 = gate_xor(b[2], n177);
  auto n147 = gate_or(n175, n146);
  auto n171 = gate_and(n9, n147);
  auto n148 = gate_xor(b[3], n173);
  auto n149 = gate_or(n171, n148);
  auto n167 = gate_and(n11, n149);
  auto n150 = gate_xor(b[4], n169);
  auto n151 = gate_or(n167, n150);
  auto n163 = gate_and(n13, n151);
  auto n152 = gate_not(n163);
  auto n154 = gate_and(n153, n152);
  auto n158 = gate_or(n155, n154);
  auto n156 = gate_xor(n213, n158);
  auto n17 = gate_nand(n210, n156);
  auto n212 = gate_and(n206, n17);
  auto n157 = gate_xor(n213, n206);
  auto n159 = gate_and(n158, n157);
  auto n162 = gate_and(n159, n210);
  auto n161 = gate_and(n160, n206);
  auto n183 = gate_or(n162, n161);
  auto n164 = gate_xor(b[5], n163);
  auto n166 = gate_and(n183, n164);
  auto n216 = gate_xor(n166, n165);
  auto n205 = gate_and(n216, n213);
  auto n203 = gate_xor(n213, n216);
  auto n168 = gate_xor(b[4], n167);
  auto n170 = gate_and(n183, n168);
  auto n221 = gate_xor(n170, n169);
  auto n202 = gate_and(n221, n218);
  auto n200 = gate_xor(n218, n221);
  auto n172 = gate_xor(b[3], n171);
  auto n174 = gate_and(n183, n172);
  auto n226 = gate_xor(n174, n173);
  auto n199 = gate_and(n226, n223);
  auto n197 = gate_xor(n223, n226);
  auto n176 = gate_xor(b[2], n175);
  auto n178 = gate_and(n183, n176);
  auto n231 = gate_xor(n178, n177);
  auto n196 = gate_and(n231, n228);
  auto n194 = gate_xor(n228, n231);
  auto n180 = gate_xor(n179, b[1]);
  auto n182 = gate_and(n183, n180);
  auto n236 = gate_xor(n182, n181);
  auto n193 = gate_and(n236, n233);
  auto n191 = gate_xor(n233, n236);
  auto n184 = gate_and(n183, b[0]);
  auto n241 = gate_xor(n184, a[1]);
  auto n190 = gate_and(n185, n241);
  auto n188 = gate_xor(n185, n241);
  auto n186 = gate_not(a[0]);
  auto n238 = gate_and(n186, b[0]);
  auto n187 = gate_not(n238);
  auto n189 = gate_and(n188, n187);
  auto n234 = gate_or(n190, n189);
  auto n192 = gate_and(n191, n234);
  auto n229 = gate_or(n193, n192);
  auto n195 = gate_and(n194, n229);
  auto n224 = gate_or(n196, n195);
  auto n198 = gate_and(n197, n224);
  auto n219 = gate_or(n199, n198);
  auto n201 = gate_and(n200, n219);
  auto n214 = gate_or(n202, n201);
  auto n204 = gate_and(n203, n214);
  auto n211 = gate_or(n205, n204);
  auto n15 = gate_nand(n211, n210);
  auto n207 = gate_or(n210, n206);
  auto n209 = gate_and(n211, n207);
  auto n208 = gate_and(n212, n210);
  auto n242 = gate_or(n209, n208);
  auto n16 = gate_nand(n242, n15);
  y[7] = gate_and(n212, n16);
  auto n215 = gate_xor(n214, n213);
  auto n217 = gate_and(n242, n215);
  y[6] = gate_xor(n217, n216);
  auto n220 = gate_xor(n219, n218);
  auto n222 = gate_and(n242, n220);
  y[5] = gate_xor(n222, n221);
  auto n225 = gate_xor(n224, n223);
  auto n227 = gate_and(n242, n225);
  y[4] = gate_xor(n227, n226);
  auto n230 = gate_xor(n229, n228);
  auto n232 = gate_and(n242, n230);
  y[3] = gate_xor(n232, n231);
  auto n235 = gate_xor(n234, n233);
  auto n237 = gate_and(n242, n235);
  y[2] = gate_xor(n237, n236);
  auto n239 = gate_xor(n238, b[1]);
  auto n240 = gate_and(n242, n239);
  y[1] = gate_xor(n241, n240);
  auto n243 = gate_and(n242, b[0]);
  y[0] = gate_xor(n243, a[0]);
}
template<> void $NameUint<8>::d_modsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n26 = gate_not(b[7]);
  auto n1 = gate_xnor(n26, b[3]);
  auto n2 = gate_not(n1);
  auto n186 = gate_xor(b[5], b[7]);
  auto n259 = gate_not(n186);
  auto n266 = gate_xor(b[6], b[7]);
  auto n190 = gate_not(n266);
  auto n138 = gate_and(n259, n190);
  auto n143 = gate_xor(b[4], b[7]);
  auto n253 = gate_not(n143);
  auto n95 = gate_and(n138, n253);
  auto n43 = gate_and(n95, n2);
  auto n233 = gate_xor(n26, b[2]);
  auto n74 = gate_xor(b[1], b[7]);
  auto n240 = gate_not(n74);
  auto n119 = gate_or(a[1], a[0]);
  auto n81 = gate_or(n119, a[2]);
  auto n56 = gate_or(n81, a[3]);
  auto n36 = gate_or(n56, a[4]);
  auto n27 = gate_or(n36, a[5]);
  auto n21 = gate_not(n27);
  auto n23 = gate_and(a[7], n21);
  auto n22 = gate_not(a[6]);
  auto n24 = gate_and(n23, n22);
  auto n25 = gate_not(b[0]);
  auto n211 = gate_and(n26, n25);
  auto n28 = gate_and(n27, a[7]);
  auto n35 = gate_xor(n28, a[6]);
  auto n29 = gate_or(n211, n35);
  auto n58 = gate_not(n211);
  auto n37 = gate_and(n36, a[7]);
  auto n55 = gate_xor(n37, a[5]);
  auto n18 = gate_nand(b[0], n55);
  auto n51 = gate_and(n58, n18);
  auto n38 = gate_not(n51);
  auto n57 = gate_and(n56, a[7]);
  auto n79 = gate_xor(n57, a[4]);
  auto n9 = gate_nand(n79, b[0]);
  auto n73 = gate_and(n58, n9);
  auto n69 = gate_not(n233);
  auto n3 = gate_not(n69);
  auto n46 = gate_and(n43, n3);
  auto n20 = gate_and(b[0], n46);
  auto n4 = gate_nand(n20, n240);
  auto n33 = gate_and(n4, n24);
  auto n31 = gate_xor(n33, n240);
  auto n30 = gate_and(n46, n29);
  auto n34 = gate_and(n31, n30);
  auto n19 = gate_nand(n34, b[0]);
  auto n32 = gate_not(n34);
  auto n45 = gate_and(n33, n32);
  auto n49 = gate_and(n35, n19);
  auto n41 = gate_and(n49, n240);
  auto n39 = gate_xor(n49, n240);
  auto n40 = gate_and(n39, n38);
  auto n44 = gate_or(n41, n40);
  auto n42 = gate_xor(n233, n44);
  auto n6 = gate_nand(n43, n42);
  auto n97 = gate_and(n45, n6);
  auto n66 = gate_and(n2, n97);
  auto n48 = gate_and(n44, n46);
  auto n47 = gate_and(n46, n45);
  auto n53 = gate_or(n48, n47);
  auto n5 = gate_nand(n53, n51);
  auto n50 = gate_and(n53, n74);
  auto n52 = gate_xor(n50, n49);
  auto n70 = gate_and(n52, n5);
  auto n64 = gate_and(n3, n70);
  auto n62 = gate_xor(n233, n70);
  auto n54 = gate_and(b[0], n53);
  auto n76 = gate_xor(n55, n54);
  auto n17 = gate_nand(n76, n240);
  auto n59 = gate_xor(n74, n76);
  auto n60 = gate_or(n73, n59);
  auto n68 = gate_and(n17, n60);
  auto n61 = gate_not(n68);
  auto n63 = gate_and(n62, n61);
  auto n94 = gate_or(n64, n63);
  auto n65 = gate_and(n2, n94);
  auto n67 = gate_or(n66, n65);
  auto n78 = gate_and(n95, n67);
  auto n8 = gate_nand(n78, n68);
  auto n71 = gate_and(n78, n69);
  auto n72 = gate_xor(n71, n70);
  auto n105 = gate_and(n8, n72);
  auto n92 = gate_and(n2, n105);
  auto n90 = gate_xor(n2, n105);
  auto n75 = gate_xor(n74, n73);
  auto n77 = gate_and(n78, n75);
  auto n110 = gate_xor(n77, n76);
  auto n89 = gate_and(n110, n3);
  auto n87 = gate_xor(n233, n110);
  auto n80 = gate_and(n78, b[0]);
  auto n114 = gate_xor(n80, n79);
  auto n86 = gate_and(n114, n240);
  auto n84 = gate_xor(n114, n240);
  auto n82 = gate_and(n81, a[7]);
  auto n117 = gate_xor(n82, a[3]);
  auto n83 = gate_and(b[0], n117);
  auto n112 = gate_or(n211, n83);
  auto n85 = gate_and(n84, n112);
  auto n108 = gate_or(n86, n85);
  auto n88 = gate_and(n87, n108);
  auto n103 = gate_or(n89, n88);
  auto n91 = gate_and(n90, n103);
  auto n99 = gate_or(n92, n91);
  auto n93 = gate_xor(n99, n253);
  auto n16 = gate_nand(n93, n138);
  auto n96 = gate_xor(n94, n2);
  auto n7 = gate_nand(n96, n95);
  auto n98 = gate_and(n7, n97);
  auto n137 = gate_and(n16, n98);
  auto n101 = gate_and(n98, n253);
  auto n100 = gate_and(n253, n99);
  auto n102 = gate_or(n101, n100);
  auto n116 = gate_and(n138, n102);
  auto n104 = gate_not(n103);
  auto n15 = gate_nand(n116, n104);
  auto n106 = gate_and(n116, n1);
  auto n107 = gate_xor(n106, n105);
  auto n144 = gate_and(n15, n107);
  auto n133 = gate_and(n144, n253);
  auto n131 = gate_xor(n253, n144);
  auto n109 = gate_xor(n233, n108);
  auto n111 = gate_and(n116, n109);
  auto n149 = gate_xor(n111, n110);
  auto n130 = gate_and(n2, n149);
  auto n128 = gate_xor(n2, n149);
  auto n113 = gate_xor(n240, n112);
  auto n115 = gate_and(n116, n113);
  auto n153 = gate_xor(n115, n114);
  auto n127 = gate_and(n153, n3);
  auto n125 = gate_xor(n153, n233);
  auto n118 = gate_and(n116, b[0]);
  auto n157 = gate_xor(n118, n117);
  auto n124 = gate_and(n157, n240);
  auto n122 = gate_xor(n157, n240);
  auto n120 = gate_and(n119, a[7]);
  auto n160 = gate_xor(n120, a[2]);
  auto n121 = gate_and(b[0], n160);
  auto n155 = gate_or(n211, n121);
  auto n123 = gate_and(n122, n155);
  auto n151 = gate_or(n124, n123);
  auto n126 = gate_and(n125, n151);
  auto n147 = gate_or(n127, n126);
  auto n129 = gate_and(n128, n147);
  auto n141 = gate_or(n130, n129);
  auto n132 = gate_and(n131, n141);
  auto n135 = gate_or(n133, n132);
  auto n134 = gate_xor(n259, n135);
  auto n14 = gate_nand(n190, n134);
  auto n180 = gate_and(n137, n14);
  auto n136 = gate_and(n135, n259);
  auto n140 = gate_and(n136, n190);
  auto n139 = gate_and(n138, n137);
  auto n159 = gate_or(n140, n139);
  auto n142 = gate_not(n141);
  auto n13 = gate_nand(n159, n142);
  auto n145 = gate_and(n159, n143);
  auto n146 = gate_xor(n145, n144);
  auto n187 = gate_and(n13, n146);
  auto n178 = gate_and(n187, n259);
  auto n176 = gate_xor(n259, n187);
  auto n148 = gate_xor(n2, n147);
  auto n150 = gate_and(n159, n148);
  auto n193 = gate_xor(n150, n149);
  auto n175 = gate_and(n193, n253);
  auto n173 = gate_xor(n253, n193);
  auto n152 = gate_xor(n3, n151);
  auto n154 = gate_and(n159, n152);
  auto n197 = gate_xor(n154, n153);
  auto n172 = gate_and(n197, n2);
  auto n170 = gate_xor(n2, n197);
  auto n156 = gate_xor(n240, n155);
  auto n158 = gate_and(n159, n156);
  auto n201 = gate_xor(n158, n157);
  auto n169 = gate_and(n201, n3);
  auto n167 = gate_xor(n201, n233);
  auto n161 = gate_and(n159, b[0]);
  auto n205 = gate_xor(n161, n160);
  auto n166 = gate_and(n205, n240);
  auto n164 = gate_xor(n205, n240);
  auto n162 = gate_and(a[7], a[0]);
  auto n208 = gate_xor(a[1], n162);
  auto n163 = gate_and(b[0], n208);
  auto n203 = gate_or(n211, n163);
  auto n165 = gate_and(n164, n203);
  auto n199 = gate_or(n166, n165);
  auto n168 = gate_and(n167, n199);
  auto n195 = gate_or(n169, n168);
  auto n171 = gate_and(n170, n195);
  auto n191 = gate_or(n172, n171);
  auto n174 = gate_and(n173, n191);
  auto n184 = gate_or(n175, n174);
  auto n177 = gate_and(n176, n184);
  auto n181 = gate_or(n178, n177);
  auto n179 = gate_xor(n181, n266);
  auto n231 = gate_and(n180, n179);
  auto n183 = gate_and(n180, n190);
  auto n182 = gate_and(n181, n190);
  auto n207 = gate_or(n183, n182);
  auto n185 = gate_not(n184);
  auto n10 = gate_nand(n207, n185);
  auto n188 = gate_and(n207, n186);
  auto n189 = gate_xor(n188, n187);
  auto n268 = gate_and(n10, n189);
  auto n229 = gate_and(n268, n190);
  auto n227 = gate_xor(n190, n268);
  auto n192 = gate_xor(n253, n191);
  auto n194 = gate_and(n207, n192);
  auto n261 = gate_xor(n194, n193);
  auto n226 = gate_and(n261, n259);
  auto n224 = gate_xor(n259, n261);
  auto n196 = gate_xor(n2, n195);
  auto n198 = gate_and(n207, n196);
  auto n255 = gate_xor(n198, n197);
  auto n223 = gate_and(n255, n253);
  auto n221 = gate_xor(n253, n255);
  auto n200 = gate_xor(n3, n199);
  auto n202 = gate_and(n207, n200);
  auto n249 = gate_xor(n202, n201);
  auto n220 = gate_and(n249, n2);
  auto n218 = gate_xor(n2, n249);
  auto n204 = gate_xor(n240, n203);
  auto n206 = gate_and(n207, n204);
  auto n235 = gate_xor(n206, n205);
  auto n217 = gate_and(n235, n3);
  auto n215 = gate_xor(n235, n233);
  auto n209 = gate_and(n207, b[0]);
  auto n244 = gate_xor(n209, n208);
  auto n214 = gate_and(n244, n240);
  auto n212 = gate_xor(n244, n240);
  auto n210 = gate_and(a[0], b[0]);
  auto n241 = gate_or(n211, n210);
  auto n213 = gate_and(n212, n241);
  auto n232 = gate_or(n214, n213);
  auto n216 = gate_and(n215, n232);
  auto n247 = gate_or(n217, n216);
  auto n219 = gate_and(n218, n247);
  auto n252 = gate_or(n220, n219);
  auto n222 = gate_and(n221, n252);
  auto n258 = gate_or(n223, n222);
  auto n225 = gate_and(n224, n258);
  auto n264 = gate_or(n226, n225);
  auto n228 = gate_and(n227, n264);
  auto n230 = gate_or(n229, n228);
  auto n12 = gate_nand(n231, n230);
  auto n273 = gate_and(a[7], n12);
  auto n267 = gate_or(n231, n230);
  auto n234 = gate_xor(n3, n232);
  auto n236 = gate_and(n267, n234);
  auto n237 = gate_xor(n236, n235);
  auto n283 = gate_xor(a[7], n237);
  auto n239 = gate_and(b[0], n267);
  auto n238 = gate_xor(a[0], a[7]);
  auto n287 = gate_xor(n239, n238);
  y[0] = gate_xor(a[7], n287);
  auto n246 = gate_and(a[7], n287);
  auto n242 = gate_xor(n241, n240);
  auto n243 = gate_and(n267, n242);
  auto n285 = gate_xor(n244, n243);
  auto n245 = gate_not(n285);
  auto n282 = gate_and(n246, n245);
  auto n281 = gate_and(n283, n282);
  auto n248 = gate_xor(n2, n247);
  auto n250 = gate_and(n267, n248);
  auto n251 = gate_xor(n250, n249);
  auto n280 = gate_xor(a[7], n251);
  auto n279 = gate_and(n281, n280);
  auto n254 = gate_xor(n253, n252);
  auto n256 = gate_and(n267, n254);
  auto n257 = gate_xor(n256, n255);
  auto n278 = gate_xor(a[7], n257);
  auto n277 = gate_and(n279, n278);
  auto n260 = gate_xor(n259, n258);
  auto n262 = gate_and(n267, n260);
  auto n263 = gate_xor(n262, n261);
  auto n276 = gate_xor(a[7], n263);
  auto n275 = gate_and(n277, n276);
  auto n265 = gate_not(n264);
  auto n11 = gate_nand(n267, n265);
  auto n269 = gate_and(n267, n266);
  auto n270 = gate_xor(n269, n268);
  auto n271 = gate_and(n11, n270);
  auto n274 = gate_xor(a[7], n271);
  auto n272 = gate_and(n275, n274);
  y[7] = gate_xor(n273, n272);
  y[6] = gate_xor(n275, n274);
  y[5] = gate_xor(n277, n276);
  y[4] = gate_xor(n279, n278);
  y[3] = gate_xor(n281, n280);
  y[2] = gate_xor(n283, n282);
  auto n284 = gate_not(n287);
  auto n286 = gate_and(n284, a[7]);
  y[1] = gate_xor(n286, n285);
}
template<> void $NameUint<8>::d_mul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  auto n4 = gate_and(a[1], b[0]);
  auto n3 = gate_and(a[0], b[1]);
  y[1] = gate_xor(n4, n3);
  auto n24 = gate_and(a[0], b[2]);
  auto n22 = gate_and(a[1], b[1]);
  auto n2 = gate_nand(n24, n22);
  auto n9 = gate_xor(n24, n22);
  auto n8 = gate_and(a[2], b[0]);
  auto n11 = gate_xor(n9, n8);
  auto n10 = gate_and(n4, n3);
  y[2] = gate_xor(n11, n10);
  auto n7 = gate_and(a[0], b[3]);
  auto n5 = gate_and(b[2], n2);
  auto n6 = gate_and(n5, a[1]);
  auto n15 = gate_xor(n7, n6);
  auto n21 = gate_and(b[0], a[3]);
  auto n20 = gate_and(a[2], b[1]);
  auto n14 = gate_xor(n21, n20);
  auto n17 = gate_xor(n15, n14);
  auto n13 = gate_and(n9, n8);
  auto n12 = gate_and(n11, n10);
  auto n16 = gate_or(n13, n12);
  y[3] = gate_xor(n17, n16);
  auto n19 = gate_and(n15, n14);
  auto n18 = gate_and(n17, n16);
  auto n43 = gate_or(n19, n18);
  auto n34 = gate_and(b[0], a[4]);
  auto n33 = gate_and(b[1], a[3]);
  auto n38 = gate_xor(n34, n33);
  auto n37 = gate_and(n21, n20);
  auto n40 = gate_xor(n38, n37);
  auto n27 = gate_and(a[1], b[3]);
  auto n23 = gate_or(n27, n22);
  auto n39 = gate_and(n24, n23);
  auto n44 = gate_xor(n40, n39);
  auto n26 = gate_and(b[4], a[0]);
  auto n29 = gate_xor(n27, n26);
  auto n28 = gate_and(b[2], a[2]);
  auto n46 = gate_xor(n29, n28);
  auto n25 = gate_xor(n44, n46);
  y[4] = gate_xor(n43, n25);
  auto n31 = gate_and(n27, n26);
  auto n30 = gate_and(n29, n28);
  auto n58 = gate_or(n31, n30);
  auto n72 = gate_and(b[3], a[2]);
  auto n75 = gate_and(a[0], b[5]);
  auto n73 = gate_and(a[1], b[4]);
  auto n32 = gate_xor(n75, n73);
  auto n59 = gate_xor(n72, n32);
  auto n35 = gate_and(a[3], b[2]);
  auto n68 = gate_and(n34, n33);
  auto n67 = gate_xor(n35, n68);
  auto n56 = gate_and(b[0], a[5]);
  auto n55 = gate_and(a[4], b[1]);
  auto n66 = gate_xor(n56, n55);
  auto n60 = gate_xor(n67, n66);
  auto n36 = gate_xor(n59, n60);
  auto n51 = gate_xor(n58, n36);
  auto n42 = gate_and(n38, n37);
  auto n41 = gate_and(n40, n39);
  auto n50 = gate_or(n42, n41);
  auto n48 = gate_and(n44, n43);
  auto n45 = gate_or(n44, n43);
  auto n47 = gate_and(n46, n45);
  auto n49 = gate_or(n48, n47);
  auto n52 = gate_xor(n50, n49);
  y[5] = gate_xor(n51, n52);
  auto n54 = gate_or(n50, n49);
  auto n53 = gate_not(n51);
  auto n1 = gate_nand(n53, n52);
  auto n81 = gate_and(n54, n1);
  auto n105 = gate_and(b[3], a[3]);
  auto n106 = gate_and(n56, n55);
  auto n103 = gate_and(b[4], a[2]);
  auto n57 = gate_xor(n106, n103);
  auto n87 = gate_xor(n105, n57);
  auto n63 = gate_or(n59, n58);
  auto n61 = gate_and(n59, n58);
  auto n62 = gate_or(n61, n60);
  auto n86 = gate_and(n63, n62);
  auto n113 = gate_and(a[1], b[5]);
  auto n116 = gate_and(a[0], b[6]);
  auto n114 = gate_and(b[2], a[4]);
  auto n64 = gate_xor(n116, n114);
  auto n88 = gate_xor(n113, n64);
  auto n65 = gate_xor(n86, n88);
  auto n80 = gate_xor(n87, n65);
  auto n70 = gate_and(n67, n66);
  auto n69 = gate_and(b[2], n68);
  auto n97 = gate_or(n70, n69);
  auto n71 = gate_and(a[5], b[1]);
  auto n121 = gate_and(b[0], a[6]);
  auto n96 = gate_xor(n71, n121);
  auto n77 = gate_and(n73, n72);
  auto n74 = gate_or(n73, n72);
  auto n76 = gate_and(n75, n74);
  auto n95 = gate_or(n77, n76);
  auto n98 = gate_xor(n96, n95);
  auto n82 = gate_xor(n97, n98);
  auto n78 = gate_xor(n80, n82);
  y[6] = gate_xor(n81, n78);
  auto n79 = gate_and(n82, n81);
  auto n84 = gate_or(n80, n79);
  auto n83 = gate_or(n82, n81);
  auto n135 = gate_and(n84, n83);
  auto n85 = gate_and(n88, n87);
  auto n90 = gate_or(n86, n85);
  auto n89 = gate_or(n88, n87);
  auto n133 = gate_and(n90, n89);
  auto n92 = gate_and(a[6], b[1]);
  auto n91 = gate_and(b[7], a[0]);
  auto n112 = gate_xor(n92, n91);
  auto n94 = gate_and(a[3], b[4]);
  auto n93 = gate_and(b[6], a[1]);
  auto n102 = gate_xor(n94, n93);
  auto n100 = gate_and(n96, n95);
  auto n99 = gate_and(n98, n97);
  auto n101 = gate_or(n100, n99);
  auto n110 = gate_xor(n102, n101);
  auto n104 = gate_or(n106, n105);
  auto n108 = gate_and(n104, n103);
  auto n107 = gate_and(n106, n105);
  auto n109 = gate_or(n108, n107);
  auto n111 = gate_xor(n110, n109);
  auto n131 = gate_xor(n112, n111);
  auto n120 = gate_and(a[4], b[3]);
  auto n118 = gate_and(n114, n113);
  auto n115 = gate_or(n114, n113);
  auto n117 = gate_and(n116, n115);
  auto n119 = gate_or(n118, n117);
  auto n129 = gate_xor(n120, n119);
  auto n122 = gate_and(b[1], n121);
  auto n123 = gate_xor(b[2], n122);
  auto n127 = gate_and(a[5], n123);
  auto n125 = gate_and(a[7], b[0]);
  auto n124 = gate_and(b[5], a[2]);
  auto n126 = gate_xor(n125, n124);
  auto n128 = gate_xor(n127, n126);
  auto n130 = gate_xor(n129, n128);
  auto n132 = gate_xor(n131, n130);
  auto n134 = gate_xor(n133, n132);
  y[7] = gate_xor(n135, n134);
}
template<> void $NameUint<8>::d_redand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n8 = gate_and(a[1], a[3]);
  auto n7 = gate_and(a[2], a[0]);
  auto n12 = gate_and(n8, n7);
  auto n10 = gate_and(a[5], a[7]);
  auto n9 = gate_and(a[6], a[4]);
  auto n11 = gate_and(n10, n9);
  y[0] = gate_and(n12, n11);
}
template<> void $NameUint<8>::d_rednand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n11 = gate_and(a[2], a[3]);
  auto n10 = gate_and(a[1], a[0]);
  auto n12 = gate_and(n11, n10);
  auto n15 = gate_and(n12, a[7]);
  auto n13 = gate_and(a[6], a[5]);
  auto n14 = gate_and(n13, a[4]);
  y[0] = gate_nand(n15, n14);
}
template<> void $NameUint<8>::d_rednor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n17 = gate_not(a[2]);
  auto n16 = gate_not(a[3]);
  auto n21 = gate_and(n17, n16);
  auto n19 = gate_not(a[0]);
  auto n18 = gate_not(a[1]);
  auto n20 = gate_and(n19, n18);
  auto n29 = gate_and(n21, n20);
  auto n23 = gate_not(a[6]);
  auto n22 = gate_not(a[7]);
  auto n27 = gate_and(n23, n22);
  auto n25 = gate_not(a[4]);
  auto n24 = gate_not(a[5]);
  auto n26 = gate_and(n25, n24);
  auto n28 = gate_and(n27, n26);
  y[0] = gate_and(n29, n28);
}
template<> void $NameUint<8>::d_redor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n8 = gate_or(a[1], a[0]);
  auto n7 = gate_or(a[3], a[2]);
  auto n12 = gate_or(n8, n7);
  auto n10 = gate_or(a[5], a[4]);
  auto n9 = gate_or(a[7], a[6]);
  auto n11 = gate_or(n10, n9);
  y[0] = gate_or(n12, n11);
}
template<> void $NameUint<8>::d_redxnor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n11 = gate_xor(a[0], a[1]);
  auto n14 = gate_xor(a[7], a[6]);
  auto n10 = gate_xor(a[2], a[3]);
  auto n13 = gate_xor(n11, n10);
  auto n12 = gate_xor(a[4], a[5]);
  auto n15 = gate_xor(n13, n12);
  y[0] = gate_xnor(n15, n14);
}
template<> void $NameUint<8>::d_redxor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n8 = gate_xor(a[0], a[1]);
  auto n7 = gate_xor(a[2], a[3]);
  auto n12 = gate_xor(n8, n7);
  auto n10 = gate_xor(a[4], a[5]);
  auto n9 = gate_xor(a[7], a[6]);
  auto n11 = gate_xor(n10, n9);
  y[0] = gate_xor(n12, n11);
}
template<> void $NameUint<8>::d_sll
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n69 = gate_not(b[3]);
  auto n68 = gate_not(b[5]);
  auto n71 = gate_and(n69, n68);
  auto n70 = gate_not(b[4]);
  auto n75 = gate_and(n71, n70);
  auto n73 = gate_not(b[6]);
  auto n72 = gate_not(b[7]);
  auto n74 = gate_and(n73, n72);
  auto n86 = gate_and(n75, n74);
  auto n76 = gate_not(b[2]);
  auto n127 = gate_and(n86, n76);
  auto n116 = gate_not(b[0]);
  auto n129 = gate_and(n127, n116);
  auto n107 = gate_not(b[1]);
  auto n78 = gate_and(a[7], n107);
  auto n77 = gate_and(b[1], a[5]);
  auto n79 = gate_or(n78, n77);
  auto n92 = gate_and(n129, n79);
  auto n81 = gate_and(a[3], n107);
  auto n80 = gate_and(b[1], a[1]);
  auto n118 = gate_or(n81, n80);
  auto n85 = gate_and(n118, n116);
  auto n83 = gate_and(a[2], n107);
  auto n82 = gate_and(b[1], a[0]);
  auto n94 = gate_or(n83, n82);
  auto n84 = gate_and(b[0], n94);
  auto n124 = gate_or(n85, n84);
  auto n114 = gate_and(b[2], n86);
  auto n90 = gate_and(n124, n114);
  auto n119 = gate_and(b[0], n127);
  auto n88 = gate_and(a[6], n107);
  auto n87 = gate_and(b[1], a[4]);
  auto n93 = gate_or(n88, n87);
  auto n89 = gate_and(n119, n93);
  auto n91 = gate_or(n90, n89);
  y[7] = gate_or(n92, n91);
  auto n102 = gate_and(n129, n93);
  auto n96 = gate_and(n94, n116);
  auto n106 = gate_and(a[1], n107);
  auto n95 = gate_and(b[0], n106);
  auto n125 = gate_or(n96, n95);
  auto n100 = gate_and(n114, n125);
  auto n98 = gate_and(a[5], n107);
  auto n97 = gate_and(b[1], a[3]);
  auto n103 = gate_or(n98, n97);
  auto n99 = gate_and(n119, n103);
  auto n101 = gate_or(n100, n99);
  y[6] = gate_or(n102, n101);
  auto n113 = gate_and(n129, n103);
  auto n105 = gate_and(a[4], n107);
  auto n104 = gate_and(b[1], a[2]);
  auto n117 = gate_or(n105, n104);
  auto n111 = gate_and(n119, n117);
  auto n109 = gate_and(n106, n116);
  auto n128 = gate_and(a[0], n107);
  auto n108 = gate_and(b[0], n128);
  auto n126 = gate_or(n109, n108);
  auto n110 = gate_and(n114, n126);
  auto n112 = gate_or(n111, n110);
  y[5] = gate_or(n113, n112);
  auto n115 = gate_and(n128, n114);
  auto n123 = gate_and(n116, n115);
  auto n121 = gate_and(n129, n117);
  auto n120 = gate_and(n119, n118);
  auto n122 = gate_or(n121, n120);
  y[4] = gate_or(n123, n122);
  y[3] = gate_and(n127, n124);
  y[2] = gate_and(n127, n125);
  y[1] = gate_and(n127, n126);
  y[0] = gate_and(n129, n128);
}
template<> void $NameUint<8>::d_slr
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n69 = gate_not(b[3]);
  auto n68 = gate_not(b[5]);
  auto n71 = gate_and(n69, n68);
  auto n70 = gate_not(b[4]);
  auto n75 = gate_and(n71, n70);
  auto n73 = gate_not(b[6]);
  auto n72 = gate_not(b[7]);
  auto n74 = gate_and(n73, n72);
  auto n118 = gate_and(n75, n74);
  auto n112 = gate_not(b[2]);
  auto n92 = gate_and(n118, n112);
  auto n108 = gate_not(b[0]);
  auto n123 = gate_and(n92, n108);
  auto n119 = gate_not(b[1]);
  auto n88 = gate_and(a[7], n119);
  y[7] = gate_and(n123, n88);
  auto n80 = gate_and(a[6], n119);
  auto n77 = gate_and(n80, n108);
  auto n76 = gate_and(b[0], n88);
  auto n100 = gate_or(n77, n76);
  y[6] = gate_and(n92, n100);
  auto n79 = gate_and(a[5], n119);
  auto n78 = gate_and(b[1], a[7]);
  auto n85 = gate_or(n79, n78);
  auto n82 = gate_and(n85, n108);
  auto n81 = gate_and(b[0], n80);
  auto n114 = gate_or(n82, n81);
  y[5] = gate_and(n92, n114);
  auto n84 = gate_and(a[4], n119);
  auto n83 = gate_and(b[1], a[6]);
  auto n93 = gate_or(n84, n83);
  auto n87 = gate_and(n93, n108);
  auto n86 = gate_and(b[0], n85);
  auto n124 = gate_or(n87, n86);
  y[4] = gate_and(n92, n124);
  auto n125 = gate_and(b[2], n118);
  auto n89 = gate_and(n88, n125);
  auto n97 = gate_and(n108, n89);
  auto n91 = gate_and(a[3], n119);
  auto n90 = gate_and(b[1], a[5]);
  auto n101 = gate_or(n91, n90);
  auto n95 = gate_and(n123, n101);
  auto n127 = gate_and(b[0], n92);
  auto n94 = gate_and(n127, n93);
  auto n96 = gate_or(n95, n94);
  y[3] = gate_or(n97, n96);
  auto n99 = gate_and(a[2], n119);
  auto n98 = gate_and(b[1], a[4]);
  auto n109 = gate_or(n99, n98);
  auto n105 = gate_and(n123, n109);
  auto n103 = gate_and(n125, n100);
  auto n102 = gate_and(n127, n101);
  auto n104 = gate_or(n103, n102);
  y[2] = gate_or(n105, n104);
  auto n107 = gate_and(a[1], n119);
  auto n106 = gate_and(b[1], a[3]);
  auto n126 = gate_or(n107, n106);
  auto n111 = gate_and(n126, n108);
  auto n110 = gate_and(b[0], n109);
  auto n113 = gate_or(n111, n110);
  auto n116 = gate_and(n113, n112);
  auto n115 = gate_and(b[2], n114);
  auto n117 = gate_or(n116, n115);
  y[1] = gate_and(n118, n117);
  auto n121 = gate_and(a[0], n119);
  auto n120 = gate_and(b[1], a[2]);
  auto n122 = gate_or(n121, n120);
  auto n131 = gate_and(n123, n122);
  auto n129 = gate_and(n125, n124);
  auto n128 = gate_and(n127, n126);
  auto n130 = gate_or(n129, n128);
  y[0] = gate_or(n131, n130);
}
template<> void $NameUint<8>::d_srasig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_buf(a[7]);
  auto n79 = gate_not(b[2]);
  auto n77 = gate_or(b[3], b[6]);
  auto n76 = gate_or(b[7], b[5]);
  auto n78 = gate_or(n77, n76);
  auto n110 = gate_or(b[4], n78);
  auto n111 = gate_not(n110);
  auto n102 = gate_and(n79, n111);
  auto n80 = gate_not(n102);
  auto n107 = gate_and(y[7], n80);
  auto n128 = gate_not(b[1]);
  auto n99 = gate_not(b[0]);
  auto n82 = gate_and(n128, n99);
  auto n81 = gate_not(n82);
  auto n84 = gate_and(y[7], n81);
  auto n83 = gate_and(n82, a[6]);
  auto n112 = gate_or(n84, n83);
  auto n85 = gate_and(n102, n112);
  y[6] = gate_or(n107, n85);
  auto n92 = gate_and(y[7], b[1]);
  auto n87 = gate_and(a[5], n99);
  auto n86 = gate_and(b[0], a[6]);
  auto n88 = gate_or(n87, n86);
  auto n89 = gate_and(n88, n128);
  auto n122 = gate_or(n92, n89);
  auto n90 = gate_and(n102, n122);
  y[5] = gate_or(n107, n90);
  auto n91 = gate_and(a[5], n128);
  auto n93 = gate_or(n92, n91);
  auto n97 = gate_and(b[0], n93);
  auto n95 = gate_and(a[4], n128);
  auto n94 = gate_and(b[1], a[6]);
  auto n103 = gate_or(n95, n94);
  auto n96 = gate_and(n103, n99);
  auto n133 = gate_or(n97, n96);
  auto n98 = gate_and(n102, n133);
  y[4] = gate_or(n107, n98);
  auto n132 = gate_and(n102, n99);
  auto n101 = gate_and(a[3], n128);
  auto n100 = gate_and(b[1], a[5]);
  auto n113 = gate_or(n101, n100);
  auto n105 = gate_and(n132, n113);
  auto n136 = gate_and(n102, b[0]);
  auto n104 = gate_and(n136, n103);
  auto n106 = gate_or(n105, n104);
  y[3] = gate_or(n107, n106);
  auto n109 = gate_and(a[2], n128);
  auto n108 = gate_and(b[1], a[4]);
  auto n121 = gate_or(n109, n108);
  auto n118 = gate_and(n132, n121);
  auto n140 = gate_and(y[7], n110);
  auto n134 = gate_and(b[2], n111);
  auto n115 = gate_and(n134, n112);
  auto n114 = gate_and(n136, n113);
  auto n116 = gate_or(n115, n114);
  auto n117 = gate_or(n140, n116);
  y[2] = gate_or(n118, n117);
  auto n120 = gate_and(a[1], n128);
  auto n119 = gate_and(b[1], a[3]);
  auto n135 = gate_or(n120, n119);
  auto n127 = gate_and(n132, n135);
  auto n124 = gate_and(n136, n121);
  auto n123 = gate_and(n134, n122);
  auto n125 = gate_or(n124, n123);
  auto n126 = gate_or(n140, n125);
  y[1] = gate_or(n127, n126);
  auto n130 = gate_and(a[0], n128);
  auto n129 = gate_and(b[1], a[2]);
  auto n131 = gate_or(n130, n129);
  auto n142 = gate_and(n132, n131);
  auto n138 = gate_and(n134, n133);
  auto n137 = gate_and(n136, n135);
  auto n139 = gate_or(n138, n137);
  auto n141 = gate_or(n140, n139);
  y[0] = gate_or(n142, n141);
}
template<> void $NameUint<8>::d_sub
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n8 = gate_not(a[0]);
  auto n11 = gate_and(b[0], n8);
  auto n10 = gate_xor(a[1], b[1]);
  y[1] = gate_xor(n11, n10);
  auto n9 = gate_not(b[1]);
  auto n3 = gate_nand(a[1], n9);
  auto n12 = gate_or(n11, n10);
  auto n15 = gate_and(n3, n12);
  auto n14 = gate_xor(a[2], b[2]);
  y[2] = gate_xor(n15, n14);
  auto n13 = gate_not(b[2]);
  auto n4 = gate_nand(a[2], n13);
  auto n16 = gate_or(n15, n14);
  auto n19 = gate_and(n4, n16);
  auto n18 = gate_xor(a[3], b[3]);
  y[3] = gate_xor(n19, n18);
  auto n17 = gate_not(b[3]);
  auto n5 = gate_nand(a[3], n17);
  auto n20 = gate_or(n19, n18);
  auto n23 = gate_and(n5, n20);
  auto n22 = gate_xor(a[4], b[4]);
  y[4] = gate_xor(n23, n22);
  auto n21 = gate_not(b[4]);
  auto n6 = gate_nand(a[4], n21);
  auto n24 = gate_or(n23, n22);
  auto n27 = gate_and(n6, n24);
  auto n26 = gate_xor(a[5], b[5]);
  y[5] = gate_xor(n27, n26);
  auto n25 = gate_not(b[5]);
  auto n7 = gate_nand(a[5], n25);
  auto n28 = gate_or(n27, n26);
  auto n30 = gate_and(n7, n28);
  auto n29 = gate_xor(a[6], b[6]);
  y[6] = gate_xor(n30, n29);
  auto n32 = gate_or(n30, n29);
  auto n31 = gate_not(b[6]);
  auto n2 = gate_nand(a[6], n31);
  auto n34 = gate_and(n32, n2);
  auto n33 = gate_xor(a[7], b[7]);
  y[7] = gate_xor(n34, n33);
}
template<> void $NameUint<8>::d_uminus
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_buf(a[0]);
  auto n12 = gate_or(a[1], y[0]);
  auto n11 = gate_or(a[2], n12);
  auto n10 = gate_or(a[3], n11);
  auto n9 = gate_or(a[4], n10);
  auto n8 = gate_or(a[5], n9);
  auto n7 = gate_or(a[6], n8);
  y[7] = gate_xor(a[7], n7);
  y[6] = gate_xor(a[6], n8);
  y[5] = gate_xor(a[5], n9);
  y[4] = gate_xor(a[4], n10);
  y[3] = gate_xor(a[3], n11);
  y[2] = gate_xor(a[2], n12);
  y[1] = gate_xor(a[1], y[0]);
}
