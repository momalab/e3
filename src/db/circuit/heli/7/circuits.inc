// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<> void $NameUint<7>::d_add
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  auto n2 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_and(b[1], a[1]);
  auto n4 = gate_and(n3, n2);
  auto n6 = gate_or(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_and(b[2], a[2]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_or(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_and(b[3], a[3]);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_or(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_and(b[4], a[4]);
  auto n16 = gate_and(n15, n14);
  auto n18 = gate_or(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n21 = gate_and(b[5], a[5]);
  auto n20 = gate_and(n19, n18);
  auto n22 = gate_or(n21, n20);
  auto n23 = gate_xor(b[6], n22);
  y[6] = gate_xor(a[6], n23);
}
template<> void $NameUint<7>::d_bitand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_and(b[6], a[6]);
  y[5] = gate_and(b[5], a[5]);
  y[4] = gate_and(b[4], a[4]);
  y[3] = gate_and(b[3], a[3]);
  y[2] = gate_and(b[2], a[2]);
  y[1] = gate_and(b[1], a[1]);
  y[0] = gate_and(b[0], a[0]);
}
template<> void $NameUint<7>::d_bitnot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[6] = gate_not(a[6]);
  y[5] = gate_not(a[5]);
  y[4] = gate_not(a[4]);
  y[3] = gate_not(a[3]);
  y[2] = gate_not(a[2]);
  y[1] = gate_not(a[1]);
  y[0] = gate_not(a[0]);
}
template<> void $NameUint<7>::d_bitor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_or(a[6], b[6]);
  y[5] = gate_or(a[5], b[5]);
  y[4] = gate_or(a[4], b[4]);
  y[3] = gate_or(a[3], b[3]);
  y[2] = gate_or(a[2], b[2]);
  y[1] = gate_or(a[1], b[1]);
  y[0] = gate_or(a[0], b[0]);
}
template<> void $NameUint<7>::d_bitxor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_xor(b[6], a[6]);
  y[5] = gate_xor(b[5], a[5]);
  y[4] = gate_xor(b[4], a[4]);
  y[3] = gate_xor(b[3], a[3]);
  y[2] = gate_xor(b[2], a[2]);
  y[1] = gate_xor(b[1], a[1]);
  y[0] = gate_xor(b[0], a[0]);
}
template<> void $NameUint<7>::d_boolmul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  y[1] = gate_and(a[0], b[1]);
  y[2] = gate_and(a[0], b[2]);
  y[3] = gate_and(a[0], b[3]);
  y[4] = gate_and(a[0], b[4]);
  y[5] = gate_and(a[0], b[5]);
  y[6] = gate_and(a[0], b[6]);
}
template<> void $NameUint<7>::d_boolmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n28 = gate_not(a[0]);
  auto n17 = gate_and(c[0], n28);
  auto n16 = gate_and(a[0], b[0]);
  y[0] = gate_or(n17, n16);
  auto n19 = gate_and(c[1], n28);
  auto n18 = gate_and(a[0], b[1]);
  y[1] = gate_or(n19, n18);
  auto n21 = gate_and(c[2], n28);
  auto n20 = gate_and(a[0], b[2]);
  y[2] = gate_or(n21, n20);
  auto n23 = gate_and(c[3], n28);
  auto n22 = gate_and(a[0], b[3]);
  y[3] = gate_or(n23, n22);
  auto n25 = gate_and(c[4], n28);
  auto n24 = gate_and(a[0], b[4]);
  y[4] = gate_or(n25, n24);
  auto n27 = gate_and(c[5], n28);
  auto n26 = gate_and(a[0], b[5]);
  y[5] = gate_or(n27, n26);
  auto n30 = gate_and(c[6], n28);
  auto n29 = gate_and(a[0], b[6]);
  y[6] = gate_or(n30, n29);
}
template<> void $NameUint<7>::d_dec
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[1], y[0]);
  auto n2 = gate_not(a[1]);
  auto n4 = gate_and(n2, y[0]);
  y[2] = gate_xor(a[2], n4);
  auto n3 = gate_not(a[2]);
  auto n6 = gate_and(n4, n3);
  y[3] = gate_xor(a[3], n6);
  auto n5 = gate_not(a[3]);
  auto n8 = gate_and(n6, n5);
  y[4] = gate_xor(a[4], n8);
  auto n7 = gate_not(a[4]);
  auto n10 = gate_and(n8, n7);
  y[5] = gate_xor(a[5], n10);
  auto n9 = gate_not(a[5]);
  auto n11 = gate_and(n10, n9);
  y[6] = gate_xor(a[6], n11);
}
template<> void $NameUint<7>::d_div
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n103 = gate_not(b[6]);
  auto n109 = gate_not(b[5]);
  auto n97 = gate_and(n103, n109);
  auto n115 = gate_not(b[4]);
  auto n41 = gate_and(n97, n115);
  auto n121 = gate_not(b[3]);
  auto n22 = gate_and(n41, n121);
  auto n127 = gate_not(b[2]);
  auto n5 = gate_and(n22, n127);
  auto n129 = gate_not(b[1]);
  auto n3 = gate_or(a[6], n129);
  auto n8 = gate_and(n5, n3);
  auto n2 = gate_nand(n8, b[0]);
  auto n128 = gate_not(b[0]);
  auto n4 = gate_or(a[5], n128);
  y[5] = gate_and(n8, n4);
  auto n7 = gate_and(n129, n5);
  auto n6 = gate_or(n128, a[6]);
  y[6] = gate_and(n7, n6);
  auto n23 = gate_and(a[5], n2);
  auto n13 = gate_and(n23, n129);
  auto n11 = gate_xor(n23, n129);
  auto n9 = gate_not(a[4]);
  auto n25 = gate_and(n9, b[0]);
  auto n10 = gate_not(n25);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_or(n13, n12);
  auto n20 = gate_and(n127, n14);
  auto n18 = gate_xor(n127, n14);
  auto n16 = gate_not(y[5]);
  auto n15 = gate_not(y[6]);
  auto n17 = gate_and(n16, n15);
  auto n36 = gate_and(a[6], n17);
  auto n19 = gate_and(n18, n36);
  auto n21 = gate_or(n20, n19);
  y[4] = gate_and(n22, n21);
  auto n1 = gate_nand(y[4], n25);
  auto n24 = gate_and(y[4], b[1]);
  auto n26 = gate_xor(n24, n23);
  auto n45 = gate_and(n26, n1);
  auto n33 = gate_and(n127, n45);
  auto n31 = gate_xor(n127, n45);
  auto n27 = gate_and(y[4], b[0]);
  auto n49 = gate_xor(n27, a[4]);
  auto n30 = gate_and(n129, n49);
  auto n28 = gate_xor(n129, n49);
  auto n46 = gate_or(a[3], n128);
  auto n29 = gate_and(n28, n46);
  auto n42 = gate_or(n30, n29);
  auto n32 = gate_and(n31, n42);
  auto n34 = gate_or(n33, n32);
  auto n39 = gate_and(n121, n34);
  auto n37 = gate_xor(n121, n34);
  auto n35 = gate_not(y[4]);
  auto n62 = gate_and(n36, n35);
  auto n38 = gate_and(n37, n62);
  auto n40 = gate_or(n39, n38);
  y[3] = gate_and(n41, n40);
  auto n43 = gate_xor(n42, n127);
  auto n44 = gate_and(n43, y[3]);
  auto n69 = gate_xor(n45, n44);
  auto n59 = gate_and(n69, n121);
  auto n57 = gate_xor(n69, n121);
  auto n47 = gate_xor(n46, n129);
  auto n48 = gate_and(n47, y[3]);
  auto n73 = gate_xor(n49, n48);
  auto n56 = gate_and(n73, n127);
  auto n54 = gate_xor(n73, n127);
  auto n50 = gate_and(y[3], b[0]);
  auto n77 = gate_xor(n50, a[3]);
  auto n53 = gate_and(n129, n77);
  auto n51 = gate_xor(n129, n77);
  auto n75 = gate_or(a[2], n128);
  auto n52 = gate_and(n51, n75);
  auto n71 = gate_or(n53, n52);
  auto n55 = gate_and(n54, n71);
  auto n67 = gate_or(n56, n55);
  auto n58 = gate_and(n57, n67);
  auto n60 = gate_or(n59, n58);
  auto n65 = gate_and(n60, n115);
  auto n63 = gate_xor(n60, n115);
  auto n61 = gate_not(y[3]);
  auto n96 = gate_and(n62, n61);
  auto n64 = gate_and(n63, n96);
  auto n66 = gate_or(n65, n64);
  y[2] = gate_and(n97, n66);
  auto n68 = gate_xor(n121, n67);
  auto n70 = gate_and(y[2], n68);
  auto n107 = gate_xor(n70, n69);
  auto n91 = gate_and(n107, n115);
  auto n89 = gate_xor(n107, n115);
  auto n72 = gate_xor(n127, n71);
  auto n74 = gate_and(y[2], n72);
  auto n113 = gate_xor(n74, n73);
  auto n88 = gate_and(n113, n121);
  auto n86 = gate_xor(n113, n121);
  auto n76 = gate_xor(n75, n129);
  auto n78 = gate_and(y[2], n76);
  auto n119 = gate_xor(n78, n77);
  auto n85 = gate_and(n119, n127);
  auto n83 = gate_xor(n119, n127);
  auto n79 = gate_and(y[2], b[0]);
  auto n125 = gate_xor(n79, a[2]);
  auto n82 = gate_and(n129, n125);
  auto n80 = gate_xor(n129, n125);
  auto n122 = gate_or(a[1], n128);
  auto n81 = gate_and(n80, n122);
  auto n116 = gate_or(n82, n81);
  auto n84 = gate_and(n83, n116);
  auto n110 = gate_or(n85, n84);
  auto n87 = gate_and(n86, n110);
  auto n104 = gate_or(n88, n87);
  auto n90 = gate_and(n89, n104);
  auto n93 = gate_or(n91, n90);
  auto n92 = gate_or(n109, n96);
  auto n94 = gate_and(n93, n92);
  auto n99 = gate_and(n94, n103);
  auto n95 = gate_not(y[2]);
  auto n101 = gate_and(n96, n95);
  auto n98 = gate_and(n97, n101);
  y[1] = gate_or(n99, n98);
  auto n100 = gate_not(y[1]);
  auto n102 = gate_and(n101, n100);
  auto n155 = gate_and(n103, n102);
  auto n153 = gate_xor(n103, n102);
  auto n105 = gate_xor(n104, n115);
  auto n106 = gate_and(n105, y[1]);
  auto n108 = gate_xor(n107, n106);
  auto n151 = gate_and(n109, n108);
  auto n149 = gate_xor(n109, n108);
  auto n111 = gate_xor(n110, n121);
  auto n112 = gate_and(n111, y[1]);
  auto n114 = gate_xor(n113, n112);
  auto n147 = gate_and(n115, n114);
  auto n145 = gate_xor(n115, n114);
  auto n117 = gate_xor(n116, n127);
  auto n118 = gate_and(n117, y[1]);
  auto n120 = gate_xor(n119, n118);
  auto n143 = gate_and(n121, n120);
  auto n141 = gate_xor(n121, n120);
  auto n123 = gate_xor(n122, n129);
  auto n124 = gate_and(n123, y[1]);
  auto n126 = gate_xor(n125, n124);
  auto n139 = gate_and(n127, n126);
  auto n137 = gate_xor(n127, n126);
  auto n130 = gate_or(a[0], n128);
  auto n135 = gate_and(n130, n129);
  auto n133 = gate_xor(n130, n129);
  auto n131 = gate_and(y[1], b[0]);
  auto n132 = gate_xor(n131, a[1]);
  auto n134 = gate_and(n133, n132);
  auto n136 = gate_or(n135, n134);
  auto n138 = gate_and(n137, n136);
  auto n140 = gate_or(n139, n138);
  auto n142 = gate_and(n141, n140);
  auto n144 = gate_or(n143, n142);
  auto n146 = gate_and(n145, n144);
  auto n148 = gate_or(n147, n146);
  auto n150 = gate_and(n149, n148);
  auto n152 = gate_or(n151, n150);
  auto n154 = gate_and(n153, n152);
  y[0] = gate_or(n155, n154);
}
template<> void $NameUint<7>::d_divsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n2 = gate_nand(b[0], a[0]);
  auto n35 = gate_or(b[6], b[0]);
  auto n21 = gate_and(n35, n2);
  auto n25 = gate_xor(b[1], b[6]);
  auto n133 = gate_and(n21, n25);
  auto n131 = gate_xor(n21, n25);
  auto n162 = gate_xor(b[5], b[6]);
  auto n154 = gate_xor(b[3], b[6]);
  auto n101 = gate_not(n154);
  auto n96 = gate_not(n162);
  auto n152 = gate_xor(b[4], b[6]);
  auto n94 = gate_not(n152);
  auto n69 = gate_and(n96, n94);
  auto n77 = gate_or(a[0], a[1]);
  auto n53 = gate_or(n77, a[2]);
  auto n36 = gate_or(n53, a[3]);
  auto n26 = gate_or(n36, a[4]);
  auto n23 = gate_not(n26);
  auto n22 = gate_not(a[5]);
  auto n24 = gate_and(n23, n22);
  auto n176 = gate_and(a[6], n24);
  auto n48 = gate_and(n69, n101);
  auto n144 = gate_xor(b[2], b[6]);
  auto n106 = gate_not(n144);
  auto n30 = gate_and(n48, n106);
  auto n135 = gate_not(n25);
  auto n194 = gate_and(n30, n135);
  auto n4 = gate_nand(n194, b[0]);
  auto n32 = gate_and(n176, n4);
  auto n20 = gate_nand(n32, n135);
  auto n27 = gate_and(n26, a[6]);
  auto n34 = gate_xor(n27, a[5]);
  auto n13 = gate_nand(b[0], n34);
  auto n28 = gate_and(n35, n13);
  auto n3 = gate_nand(n28, n20);
  auto n29 = gate_or(n135, n176);
  auto n31 = gate_and(n3, n29);
  auto n175 = gate_and(n31, n30);
  auto n33 = gate_not(n175);
  auto n64 = gate_and(n32, n33);
  auto n50 = gate_and(n34, n33);
  auto n42 = gate_and(n135, n50);
  auto n40 = gate_xor(n135, n50);
  auto n191 = gate_not(n35);
  auto n37 = gate_and(n36, a[6]);
  auto n51 = gate_xor(n37, a[4]);
  auto n38 = gate_and(b[0], n51);
  auto n39 = gate_or(n191, n38);
  auto n41 = gate_and(n40, n39);
  auto n44 = gate_or(n42, n41);
  auto n43 = gate_or(n64, n44);
  auto n46 = gate_and(n43, n106);
  auto n45 = gate_and(n44, n176);
  auto n47 = gate_or(n46, n45);
  auto n174 = gate_and(n48, n47);
  auto n49 = gate_not(n174);
  auto n93 = gate_and(n64, n49);
  auto n74 = gate_and(n50, n49);
  auto n62 = gate_and(n106, n74);
  auto n60 = gate_xor(n106, n74);
  auto n52 = gate_and(n174, b[0]);
  auto n72 = gate_xor(n52, n51);
  auto n58 = gate_and(n72, n135);
  auto n56 = gate_xor(n72, n135);
  auto n54 = gate_and(n53, a[6]);
  auto n76 = gate_xor(n54, a[3]);
  auto n55 = gate_and(b[0], n76);
  auto n70 = gate_or(n191, n55);
  auto n57 = gate_and(n56, n70);
  auto n59 = gate_or(n58, n57);
  auto n61 = gate_and(n60, n59);
  auto n65 = gate_or(n62, n61);
  auto n63 = gate_or(n93, n65);
  auto n67 = gate_and(n63, n101);
  auto n66 = gate_and(n65, n64);
  auto n68 = gate_or(n67, n66);
  auto n173 = gate_and(n69, n68);
  auto n71 = gate_xor(n135, n70);
  auto n73 = gate_and(n173, n71);
  auto n100 = gate_xor(n73, n72);
  auto n19 = gate_nand(n106, n100);
  auto n92 = gate_not(n173);
  auto n117 = gate_and(n92, n74);
  auto n85 = gate_xor(n101, n117);
  auto n83 = gate_xor(n100, n106);
  auto n75 = gate_and(b[0], n173);
  auto n104 = gate_xor(n76, n75);
  auto n82 = gate_and(n104, n135);
  auto n80 = gate_xor(n135, n104);
  auto n78 = gate_and(n77, a[6]);
  auto n107 = gate_xor(n78, a[2]);
  auto n79 = gate_and(b[0], n107);
  auto n102 = gate_or(n191, n79);
  auto n81 = gate_and(n80, n102);
  auto n97 = gate_or(n82, n81);
  auto n18 = gate_nand(n83, n97);
  auto n84 = gate_and(n19, n18);
  auto n91 = gate_and(n85, n84);
  auto n86 = gate_not(n117);
  auto n89 = gate_and(n154, n86);
  auto n87 = gate_not(n93);
  auto n88 = gate_and(n152, n87);
  auto n90 = gate_or(n89, n88);
  auto n95 = gate_or(n91, n90);
  auto n124 = gate_and(n93, n92);
  auto n1 = gate_nand(n124, n94);
  auto n5 = gate_nand(n95, n1);
  auto n172 = gate_and(n5, n96);
  auto n98 = gate_xor(n97, n106);
  auto n99 = gate_and(n172, n98);
  auto n158 = gate_xor(n100, n99);
  auto n17 = gate_nand(n101, n158);
  auto n103 = gate_xor(n135, n102);
  auto n105 = gate_and(n172, n103);
  auto n148 = gate_xor(n105, n104);
  auto n15 = gate_nand(n148, n106);
  auto n108 = gate_and(n172, b[0]);
  auto n139 = gate_xor(n108, n107);
  auto n12 = gate_nand(n139, n135);
  auto n111 = gate_xor(n139, n135);
  auto n109 = gate_and(a[0], a[6]);
  auto n129 = gate_xor(n109, a[1]);
  auto n110 = gate_and(b[0], n129);
  auto n136 = gate_or(n191, n110);
  auto n11 = gate_nand(n111, n136);
  auto n145 = gate_and(n12, n11);
  auto n112 = gate_xor(n144, n148);
  auto n113 = gate_or(n145, n112);
  auto n155 = gate_and(n15, n113);
  auto n114 = gate_xor(n154, n158);
  auto n115 = gate_or(n155, n114);
  auto n116 = gate_and(n17, n115);
  auto n121 = gate_and(n116, n152);
  auto n119 = gate_xor(n116, n152);
  auto n123 = gate_not(n172);
  auto n164 = gate_and(n117, n123);
  auto n118 = gate_not(n164);
  auto n120 = gate_and(n119, n118);
  auto n122 = gate_or(n121, n120);
  auto n128 = gate_and(n162, n122);
  auto n126 = gate_xor(n162, n122);
  auto n168 = gate_and(n124, n123);
  auto n125 = gate_not(n168);
  auto n127 = gate_and(n126, n125);
  auto n169 = gate_or(n128, n127);
  auto n6 = gate_nand(n169, n168);
  auto n7 = gate_nand(n164, n169);
  auto n171 = gate_not(n169);
  auto n130 = gate_and(n171, b[0]);
  auto n9 = gate_xnor(n130, n129);
  auto n132 = gate_and(n131, n9);
  auto n134 = gate_or(n133, n132);
  auto n142 = gate_and(n134, n144);
  auto n140 = gate_xor(n134, n144);
  auto n137 = gate_xor(n136, n135);
  auto n138 = gate_and(n171, n137);
  auto n10 = gate_xnor(n139, n138);
  auto n141 = gate_and(n140, n10);
  auto n143 = gate_or(n142, n141);
  auto n151 = gate_and(n143, n154);
  auto n149 = gate_xor(n143, n154);
  auto n146 = gate_xor(n145, n144);
  auto n147 = gate_and(n171, n146);
  auto n14 = gate_xnor(n148, n147);
  auto n150 = gate_and(n149, n14);
  auto n153 = gate_or(n151, n150);
  auto n161 = gate_and(n153, n152);
  auto n159 = gate_xor(n153, n152);
  auto n156 = gate_xor(n155, n154);
  auto n157 = gate_and(n171, n156);
  auto n16 = gate_xnor(n158, n157);
  auto n160 = gate_and(n159, n16);
  auto n163 = gate_or(n161, n160);
  auto n167 = gate_and(n163, n162);
  auto n165 = gate_xor(n163, n162);
  auto n166 = gate_and(n165, n7);
  auto n170 = gate_or(n167, n166);
  auto n195 = gate_and(n170, n6);
  auto n192 = gate_xor(a[6], b[6]);
  auto n190 = gate_and(n195, n192);
  auto n189 = gate_xor(n192, n171);
  auto n188 = gate_and(n190, n189);
  auto n187 = gate_xor(n192, n172);
  auto n186 = gate_and(n188, n187);
  auto n185 = gate_xor(n192, n173);
  auto n184 = gate_and(n186, n185);
  auto n183 = gate_xor(n192, n174);
  auto n182 = gate_and(n184, n183);
  auto n181 = gate_xor(n192, n175);
  auto n180 = gate_and(n182, n181);
  auto n177 = gate_and(n176, n194);
  auto n178 = gate_and(b[0], n177);
  auto n179 = gate_xor(n192, n178);
  y[6] = gate_xor(n180, n179);
  y[5] = gate_xor(n182, n181);
  y[4] = gate_xor(n184, n183);
  y[3] = gate_xor(n186, n185);
  y[2] = gate_xor(n188, n187);
  y[1] = gate_xor(n190, n189);
  auto n193 = gate_and(n192, n191);
  auto n196 = gate_and(n194, n193);
  y[0] = gate_xnor(n196, n195);
}
template<> void $NameUint<7>::d_eq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n20 = gate_xnor(b[6], a[6]);
  auto n21 = gate_xnor(b[0], a[0]);
  auto n22 = gate_xnor(a[4], b[4]);
  auto n23 = gate_not(b[1]);
  auto n26 = gate_xor(n23, a[1]);
  auto n24 = gate_not(a[2]);
  auto n25 = gate_xor(n24, b[2]);
  auto n27 = gate_and(n26, n25);
  auto n28 = gate_and(n27, n20);
  auto n34 = gate_and(n28, n21);
  auto n29 = gate_not(b[5]);
  auto n32 = gate_xor(n29, a[5]);
  auto n30 = gate_not(b[3]);
  auto n31 = gate_xor(n30, a[3]);
  auto n33 = gate_and(n32, n31);
  auto n35 = gate_and(n34, n33);
  y[0] = gate_and(n35, n22);
}
template<> void $NameUint<7>::d_ge
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(b[6]);
  auto n63 = gate_and(n35, a[6]);
  auto n61 = gate_xor(n35, a[6]);
  auto n36 = gate_not(b[5]);
  auto n59 = gate_and(n36, a[5]);
  auto n57 = gate_xor(n36, a[5]);
  auto n37 = gate_not(b[4]);
  auto n55 = gate_and(n37, a[4]);
  auto n53 = gate_xor(n37, a[4]);
  auto n38 = gate_not(b[3]);
  auto n51 = gate_and(n38, a[3]);
  auto n49 = gate_xor(n38, a[3]);
  auto n39 = gate_not(b[2]);
  auto n47 = gate_and(n39, a[2]);
  auto n45 = gate_xor(n39, a[2]);
  auto n40 = gate_not(a[0]);
  auto n43 = gate_and(b[0], n40);
  auto n34 = gate_nand(b[1], n43);
  auto n42 = gate_xor(b[1], n43);
  auto n41 = gate_not(a[1]);
  auto n33 = gate_nand(n42, n41);
  auto n44 = gate_and(n33, n34);
  auto n46 = gate_and(n45, n44);
  auto n48 = gate_or(n47, n46);
  auto n50 = gate_and(n49, n48);
  auto n52 = gate_or(n51, n50);
  auto n54 = gate_and(n53, n52);
  auto n56 = gate_or(n55, n54);
  auto n58 = gate_and(n57, n56);
  auto n60 = gate_or(n59, n58);
  auto n62 = gate_and(n61, n60);
  y[0] = gate_or(n63, n62);
}
template<> void $NameUint<7>::d_gesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(a[6]);
  auto n63 = gate_and(n35, b[6]);
  auto n61 = gate_xor(n35, b[6]);
  auto n36 = gate_not(b[5]);
  auto n59 = gate_and(n36, a[5]);
  auto n57 = gate_xor(n36, a[5]);
  auto n37 = gate_not(b[4]);
  auto n55 = gate_and(n37, a[4]);
  auto n53 = gate_xor(n37, a[4]);
  auto n38 = gate_not(b[3]);
  auto n51 = gate_and(n38, a[3]);
  auto n49 = gate_xor(n38, a[3]);
  auto n39 = gate_not(b[2]);
  auto n47 = gate_and(n39, a[2]);
  auto n45 = gate_xor(n39, a[2]);
  auto n40 = gate_not(a[0]);
  auto n43 = gate_and(b[0], n40);
  auto n34 = gate_nand(b[1], n43);
  auto n42 = gate_xor(b[1], n43);
  auto n41 = gate_not(a[1]);
  auto n33 = gate_nand(n42, n41);
  auto n44 = gate_and(n33, n34);
  auto n46 = gate_and(n45, n44);
  auto n48 = gate_or(n47, n46);
  auto n50 = gate_and(n49, n48);
  auto n52 = gate_or(n51, n50);
  auto n54 = gate_and(n53, n52);
  auto n56 = gate_or(n55, n54);
  auto n58 = gate_and(n57, n56);
  auto n60 = gate_or(n59, n58);
  auto n62 = gate_and(n61, n60);
  y[0] = gate_or(n63, n62);
}
template<> void $NameUint<7>::d_gt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n32 = gate_not(b[6]);
  auto n62 = gate_and(n32, a[6]);
  auto n60 = gate_xor(n32, a[6]);
  auto n33 = gate_not(b[5]);
  auto n58 = gate_and(n33, a[5]);
  auto n56 = gate_xor(n33, a[5]);
  auto n34 = gate_not(b[4]);
  auto n54 = gate_and(n34, a[4]);
  auto n52 = gate_xor(n34, a[4]);
  auto n35 = gate_not(b[3]);
  auto n50 = gate_and(n35, a[3]);
  auto n48 = gate_xor(n35, a[3]);
  auto n36 = gate_not(b[2]);
  auto n46 = gate_and(n36, a[2]);
  auto n44 = gate_xor(n36, a[2]);
  auto n37 = gate_not(b[0]);
  auto n38 = gate_and(a[0], n37);
  auto n42 = gate_and(n38, a[1]);
  auto n40 = gate_xor(n38, a[1]);
  auto n39 = gate_not(b[1]);
  auto n41 = gate_and(n40, n39);
  auto n43 = gate_or(n42, n41);
  auto n45 = gate_and(n44, n43);
  auto n47 = gate_or(n46, n45);
  auto n49 = gate_and(n48, n47);
  auto n51 = gate_or(n50, n49);
  auto n53 = gate_and(n52, n51);
  auto n55 = gate_or(n54, n53);
  auto n57 = gate_and(n56, n55);
  auto n59 = gate_or(n58, n57);
  auto n61 = gate_and(n60, n59);
  y[0] = gate_or(n62, n61);
}
template<> void $NameUint<7>::d_gtsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n32 = gate_not(a[6]);
  auto n62 = gate_and(n32, b[6]);
  auto n60 = gate_xor(n32, b[6]);
  auto n33 = gate_not(b[5]);
  auto n58 = gate_and(n33, a[5]);
  auto n56 = gate_xor(n33, a[5]);
  auto n34 = gate_not(b[4]);
  auto n54 = gate_and(n34, a[4]);
  auto n52 = gate_xor(n34, a[4]);
  auto n35 = gate_not(b[3]);
  auto n50 = gate_and(n35, a[3]);
  auto n48 = gate_xor(n35, a[3]);
  auto n36 = gate_not(b[2]);
  auto n46 = gate_and(n36, a[2]);
  auto n44 = gate_xor(n36, a[2]);
  auto n37 = gate_not(b[0]);
  auto n38 = gate_and(a[0], n37);
  auto n42 = gate_and(n38, a[1]);
  auto n40 = gate_xor(n38, a[1]);
  auto n39 = gate_not(b[1]);
  auto n41 = gate_and(n40, n39);
  auto n43 = gate_or(n42, n41);
  auto n45 = gate_and(n44, n43);
  auto n47 = gate_or(n46, n45);
  auto n49 = gate_and(n48, n47);
  auto n51 = gate_or(n50, n49);
  auto n53 = gate_and(n52, n51);
  auto n55 = gate_or(n54, n53);
  auto n57 = gate_and(n56, n55);
  auto n59 = gate_or(n58, n57);
  auto n61 = gate_and(n60, n59);
  y[0] = gate_or(n62, n61);
}
template<> void $NameUint<7>::d_inc
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[0], a[1]);
  auto n2 = gate_and(a[0], a[1]);
  y[2] = gate_xor(n2, a[2]);
  auto n3 = gate_and(n2, a[2]);
  y[3] = gate_xor(n3, a[3]);
  auto n4 = gate_and(n3, a[3]);
  y[4] = gate_xor(n4, a[4]);
  auto n5 = gate_and(n4, a[4]);
  y[5] = gate_xor(n5, a[5]);
  auto n6 = gate_and(n5, a[5]);
  y[6] = gate_xor(a[6], n6);
}
template<> void $NameUint<7>::d_ineq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n14 = gate_xor(b[2], a[2]);
  auto n13 = gate_xor(b[5], a[5]);
  auto n24 = gate_or(n14, n13);
  auto n22 = gate_xor(a[1], b[1]);
  auto n16 = gate_xor(b[3], a[3]);
  auto n15 = gate_xor(a[4], b[4]);
  auto n20 = gate_or(n16, n15);
  auto n18 = gate_xor(a[6], b[6]);
  auto n17 = gate_xor(b[0], a[0]);
  auto n19 = gate_or(n18, n17);
  auto n21 = gate_or(n20, n19);
  auto n23 = gate_or(n22, n21);
  y[0] = gate_or(n24, n23);
}
template<> void $NameUint<7>::d_intmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n23 = gate_or(a[1], a[6]);
  auto n22 = gate_or(a[3], a[0]);
  auto n24 = gate_or(n23, n22);
  auto n26 = gate_or(a[4], n24);
  auto n25 = gate_or(a[2], a[5]);
  auto n39 = gate_or(n26, n25);
  auto n28 = gate_and(b[0], n39);
  auto n40 = gate_not(n39);
  auto n27 = gate_and(n40, c[0]);
  y[0] = gate_or(n28, n27);
  auto n30 = gate_and(b[1], n39);
  auto n29 = gate_and(n40, c[1]);
  y[1] = gate_or(n30, n29);
  auto n32 = gate_and(b[2], n39);
  auto n31 = gate_and(n40, c[2]);
  y[2] = gate_or(n32, n31);
  auto n34 = gate_and(b[3], n39);
  auto n33 = gate_and(n40, c[3]);
  y[3] = gate_or(n34, n33);
  auto n36 = gate_and(b[4], n39);
  auto n35 = gate_and(n40, c[4]);
  y[4] = gate_or(n36, n35);
  auto n38 = gate_and(b[5], n39);
  auto n37 = gate_and(n40, c[5]);
  y[5] = gate_or(n38, n37);
  auto n42 = gate_and(b[6], n39);
  auto n41 = gate_and(n40, c[6]);
  y[6] = gate_or(n42, n41);
}
template<> void $NameUint<7>::d_le
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(a[6]);
  auto n63 = gate_and(n35, b[6]);
  auto n61 = gate_xor(n35, b[6]);
  auto n36 = gate_not(a[5]);
  auto n59 = gate_and(n36, b[5]);
  auto n57 = gate_xor(n36, b[5]);
  auto n37 = gate_not(a[4]);
  auto n55 = gate_and(n37, b[4]);
  auto n53 = gate_xor(n37, b[4]);
  auto n38 = gate_not(a[3]);
  auto n51 = gate_and(n38, b[3]);
  auto n49 = gate_xor(n38, b[3]);
  auto n39 = gate_not(a[2]);
  auto n47 = gate_and(n39, b[2]);
  auto n45 = gate_xor(n39, b[2]);
  auto n40 = gate_not(b[0]);
  auto n43 = gate_and(a[0], n40);
  auto n33 = gate_nand(a[1], n43);
  auto n42 = gate_xor(a[1], n43);
  auto n41 = gate_not(b[1]);
  auto n34 = gate_nand(n42, n41);
  auto n44 = gate_and(n34, n33);
  auto n46 = gate_and(n45, n44);
  auto n48 = gate_or(n47, n46);
  auto n50 = gate_and(n49, n48);
  auto n52 = gate_or(n51, n50);
  auto n54 = gate_and(n53, n52);
  auto n56 = gate_or(n55, n54);
  auto n58 = gate_and(n57, n56);
  auto n60 = gate_or(n59, n58);
  auto n62 = gate_and(n61, n60);
  y[0] = gate_or(n63, n62);
}
template<> void $NameUint<7>::d_lesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n35 = gate_not(b[6]);
  auto n63 = gate_and(n35, a[6]);
  auto n61 = gate_xor(n35, a[6]);
  auto n36 = gate_not(a[5]);
  auto n59 = gate_and(n36, b[5]);
  auto n57 = gate_xor(n36, b[5]);
  auto n37 = gate_not(a[4]);
  auto n55 = gate_and(n37, b[4]);
  auto n53 = gate_xor(n37, b[4]);
  auto n38 = gate_not(a[3]);
  auto n51 = gate_and(n38, b[3]);
  auto n49 = gate_xor(n38, b[3]);
  auto n39 = gate_not(a[2]);
  auto n47 = gate_and(n39, b[2]);
  auto n45 = gate_xor(n39, b[2]);
  auto n40 = gate_not(b[0]);
  auto n43 = gate_and(a[0], n40);
  auto n33 = gate_nand(a[1], n43);
  auto n42 = gate_xor(a[1], n43);
  auto n41 = gate_not(b[1]);
  auto n34 = gate_nand(n42, n41);
  auto n44 = gate_and(n34, n33);
  auto n46 = gate_and(n45, n44);
  auto n48 = gate_or(n47, n46);
  auto n50 = gate_and(n49, n48);
  auto n52 = gate_or(n51, n50);
  auto n54 = gate_and(n53, n52);
  auto n56 = gate_or(n55, n54);
  auto n58 = gate_and(n57, n56);
  auto n60 = gate_or(n59, n58);
  auto n62 = gate_and(n61, n60);
  y[0] = gate_or(n63, n62);
}
template<> void $NameUint<7>::d_logand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n14 = gate_or(a[1], a[6]);
  auto n13 = gate_or(a[3], a[0]);
  auto n15 = gate_or(n14, n13);
  auto n17 = gate_or(a[4], n15);
  auto n16 = gate_or(a[2], a[5]);
  auto n24 = gate_or(n17, n16);
  auto n19 = gate_or(b[1], b[6]);
  auto n18 = gate_or(b[3], b[0]);
  auto n20 = gate_or(n19, n18);
  auto n22 = gate_or(b[4], n20);
  auto n21 = gate_or(b[2], b[5]);
  auto n23 = gate_or(n22, n21);
  y[0] = gate_and(n24, n23);
}
template<> void $NameUint<7>::d_lognot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n21 = gate_not(a[4]);
  auto n15 = gate_not(a[6]);
  auto n14 = gate_not(a[2]);
  auto n19 = gate_and(n15, n14);
  auto n17 = gate_not(a[3]);
  auto n16 = gate_not(a[5]);
  auto n18 = gate_and(n17, n16);
  auto n20 = gate_and(n19, n18);
  auto n25 = gate_and(n21, n20);
  auto n23 = gate_not(a[1]);
  auto n22 = gate_not(a[0]);
  auto n24 = gate_and(n23, n22);
  y[0] = gate_and(n25, n24);
}
template<> void $NameUint<7>::d_logor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n14 = gate_or(a[1], a[0]);
  auto n13 = gate_or(a[3], a[2]);
  auto n24 = gate_or(n14, n13);
  auto n16 = gate_or(b[4], b[5]);
  auto n15 = gate_or(a[6], b[0]);
  auto n17 = gate_or(n16, n15);
  auto n22 = gate_or(a[4], n17);
  auto n19 = gate_or(b[2], b[3]);
  auto n18 = gate_or(b[1], b[6]);
  auto n20 = gate_or(n19, n18);
  auto n21 = gate_or(n20, a[5]);
  auto n23 = gate_or(n22, n21);
  y[0] = gate_or(n24, n23);
}
template<> void $NameUint<7>::d_lt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n32 = gate_not(a[6]);
  auto n62 = gate_and(n32, b[6]);
  auto n60 = gate_xor(n32, b[6]);
  auto n33 = gate_not(a[5]);
  auto n58 = gate_and(n33, b[5]);
  auto n56 = gate_xor(n33, b[5]);
  auto n34 = gate_not(a[4]);
  auto n54 = gate_and(n34, b[4]);
  auto n52 = gate_xor(n34, b[4]);
  auto n35 = gate_not(a[3]);
  auto n50 = gate_and(n35, b[3]);
  auto n48 = gate_xor(n35, b[3]);
  auto n36 = gate_not(a[2]);
  auto n46 = gate_and(n36, b[2]);
  auto n44 = gate_xor(n36, b[2]);
  auto n37 = gate_not(a[0]);
  auto n38 = gate_and(b[0], n37);
  auto n42 = gate_and(n38, b[1]);
  auto n40 = gate_xor(n38, b[1]);
  auto n39 = gate_not(a[1]);
  auto n41 = gate_and(n40, n39);
  auto n43 = gate_or(n42, n41);
  auto n45 = gate_and(n44, n43);
  auto n47 = gate_or(n46, n45);
  auto n49 = gate_and(n48, n47);
  auto n51 = gate_or(n50, n49);
  auto n53 = gate_and(n52, n51);
  auto n55 = gate_or(n54, n53);
  auto n57 = gate_and(n56, n55);
  auto n59 = gate_or(n58, n57);
  auto n61 = gate_and(n60, n59);
  y[0] = gate_or(n62, n61);
}
template<> void $NameUint<7>::d_ltsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n32 = gate_not(b[6]);
  auto n62 = gate_and(n32, a[6]);
  auto n60 = gate_xor(n32, a[6]);
  auto n33 = gate_not(a[5]);
  auto n58 = gate_and(n33, b[5]);
  auto n56 = gate_xor(n33, b[5]);
  auto n34 = gate_not(a[4]);
  auto n54 = gate_and(n34, b[4]);
  auto n52 = gate_xor(n34, b[4]);
  auto n35 = gate_not(a[3]);
  auto n50 = gate_and(n35, b[3]);
  auto n48 = gate_xor(n35, b[3]);
  auto n36 = gate_not(a[2]);
  auto n46 = gate_and(n36, b[2]);
  auto n44 = gate_xor(n36, b[2]);
  auto n37 = gate_not(a[0]);
  auto n38 = gate_and(b[0], n37);
  auto n42 = gate_and(n38, b[1]);
  auto n40 = gate_xor(n38, b[1]);
  auto n39 = gate_not(a[1]);
  auto n41 = gate_and(n40, n39);
  auto n43 = gate_or(n42, n41);
  auto n45 = gate_and(n44, n43);
  auto n47 = gate_or(n46, n45);
  auto n49 = gate_and(n48, n47);
  auto n51 = gate_or(n50, n49);
  auto n53 = gate_and(n52, n51);
  auto n55 = gate_or(n54, n53);
  auto n57 = gate_and(n56, n55);
  auto n59 = gate_or(n58, n57);
  auto n61 = gate_and(n60, n59);
  y[0] = gate_or(n62, n61);
}
template<> void $NameUint<7>::d_mod
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n168 = gate_not(b[3]);
  auto n155 = gate_not(b[6]);
  auto n158 = gate_not(b[5]);
  auto n115 = gate_and(n155, n158);
  auto n163 = gate_not(b[4]);
  auto n79 = gate_and(n115, n163);
  auto n178 = gate_not(b[1]);
  auto n39 = gate_and(n79, n168);
  auto n173 = gate_not(b[2]);
  auto n41 = gate_and(n39, n173);
  auto n20 = gate_and(b[0], n41);
  auto n23 = gate_and(n178, n20);
  auto n21 = gate_not(n23);
  auto n28 = gate_and(a[6], n21);
  auto n22 = gate_xor(n178, a[6]);
  auto n24 = gate_and(n41, n22);
  auto n26 = gate_or(n24, n23);
  auto n25 = gate_not(a[5]);
  auto n7 = gate_nand(n25, b[0]);
  auto n29 = gate_and(n26, n7);
  auto n8 = gate_nand(n29, b[0]);
  auto n27 = gate_not(n29);
  auto n40 = gate_and(n28, n27);
  auto n45 = gate_and(a[5], n8);
  auto n34 = gate_and(n45, n178);
  auto n32 = gate_xor(n45, n178);
  auto n30 = gate_not(a[4]);
  auto n44 = gate_and(b[0], n30);
  auto n31 = gate_not(n44);
  auto n33 = gate_and(n32, n31);
  auto n37 = gate_or(n34, n33);
  auto n35 = gate_xor(n173, n37);
  auto n1 = gate_nand(n39, n35);
  auto n81 = gate_and(n40, n1);
  auto n59 = gate_and(n168, n81);
  auto n57 = gate_xor(n168, n81);
  auto n36 = gate_xor(n40, n173);
  auto n38 = gate_and(n37, n36);
  auto n43 = gate_and(n39, n38);
  auto n42 = gate_and(n41, n40);
  auto n48 = gate_or(n43, n42);
  auto n10 = gate_nand(n48, n44);
  auto n46 = gate_and(n48, b[1]);
  auto n47 = gate_xor(n46, n45);
  auto n63 = gate_and(n10, n47);
  auto n56 = gate_and(n173, n63);
  auto n54 = gate_xor(n173, n63);
  auto n49 = gate_and(n48, b[0]);
  auto n66 = gate_xor(n49, a[4]);
  auto n53 = gate_and(n178, n66);
  auto n51 = gate_xor(n178, n66);
  auto n50 = gate_not(a[3]);
  auto n4 = gate_nand(n50, b[0]);
  auto n52 = gate_and(n51, n4);
  auto n61 = gate_or(n53, n52);
  auto n55 = gate_and(n54, n61);
  auto n78 = gate_or(n56, n55);
  auto n58 = gate_and(n57, n78);
  auto n60 = gate_or(n59, n58);
  auto n68 = gate_and(n79, n60);
  auto n62 = gate_xor(n61, n173);
  auto n64 = gate_and(n68, n62);
  auto n89 = gate_xor(n64, n63);
  auto n19 = gate_nand(n168, n89);
  auto n65 = gate_xor(n4, n178);
  auto n67 = gate_and(n68, n65);
  auto n93 = gate_xor(n67, n66);
  auto n15 = gate_nand(n173, n93);
  auto n69 = gate_and(n68, b[0]);
  auto n97 = gate_xor(n69, a[3]);
  auto n13 = gate_nand(n178, n97);
  auto n70 = gate_not(a[2]);
  auto n95 = gate_and(b[0], n70);
  auto n71 = gate_xor(b[1], n97);
  auto n72 = gate_or(n95, n71);
  auto n91 = gate_and(n13, n72);
  auto n73 = gate_xor(b[2], n93);
  auto n74 = gate_or(n91, n73);
  auto n87 = gate_and(n15, n74);
  auto n75 = gate_xor(b[3], n89);
  auto n76 = gate_or(n87, n75);
  auto n6 = gate_nand(n19, n76);
  auto n77 = gate_xor(n6, n163);
  auto n2 = gate_nand(n77, n115);
  auto n80 = gate_xor(n78, n168);
  auto n9 = gate_nand(n80, n79);
  auto n82 = gate_and(n9, n81);
  auto n151 = gate_and(n2, n82);
  auto n85 = gate_and(n82, n163);
  auto n83 = gate_xor(n163, n82);
  auto n84 = gate_and(n83, n6);
  auto n86 = gate_or(n85, n84);
  auto n99 = gate_and(n115, n86);
  auto n88 = gate_xor(b[3], n87);
  auto n90 = gate_and(n99, n88);
  auto n119 = gate_xor(n90, n89);
  auto n110 = gate_and(n119, n163);
  auto n108 = gate_xor(n163, n119);
  auto n92 = gate_xor(b[2], n91);
  auto n94 = gate_and(n99, n92);
  auto n123 = gate_xor(n94, n93);
  auto n14 = gate_nand(n123, n168);
  auto n96 = gate_xor(n95, b[1]);
  auto n98 = gate_and(n99, n96);
  auto n127 = gate_xor(n98, n97);
  auto n12 = gate_nand(n173, n127);
  auto n100 = gate_and(n99, b[0]);
  auto n131 = gate_xor(n100, a[2]);
  auto n11 = gate_nand(n178, n131);
  auto n101 = gate_not(a[1]);
  auto n129 = gate_and(b[0], n101);
  auto n102 = gate_xor(b[1], n131);
  auto n103 = gate_or(n129, n102);
  auto n125 = gate_and(n11, n103);
  auto n104 = gate_xor(b[2], n127);
  auto n105 = gate_or(n125, n104);
  auto n121 = gate_and(n12, n105);
  auto n106 = gate_xor(b[3], n123);
  auto n107 = gate_or(n121, n106);
  auto n5 = gate_nand(n14, n107);
  auto n109 = gate_and(n108, n5);
  auto n113 = gate_or(n110, n109);
  auto n111 = gate_xor(n158, n113);
  auto n18 = gate_nand(n155, n111);
  auto n157 = gate_and(n151, n18);
  auto n112 = gate_xor(n158, n151);
  auto n114 = gate_and(n113, n112);
  auto n117 = gate_and(n114, n155);
  auto n116 = gate_and(n115, n151);
  auto n133 = gate_or(n117, n116);
  auto n118 = gate_xor(n163, n5);
  auto n120 = gate_and(n133, n118);
  auto n161 = gate_xor(n120, n119);
  auto n150 = gate_and(n161, n158);
  auto n148 = gate_xor(n158, n161);
  auto n122 = gate_xor(b[3], n121);
  auto n124 = gate_and(n133, n122);
  auto n166 = gate_xor(n124, n123);
  auto n147 = gate_and(n166, n163);
  auto n145 = gate_xor(n163, n166);
  auto n126 = gate_xor(b[2], n125);
  auto n128 = gate_and(n133, n126);
  auto n171 = gate_xor(n128, n127);
  auto n144 = gate_and(n171, n168);
  auto n142 = gate_xor(n168, n171);
  auto n130 = gate_xor(n129, b[1]);
  auto n132 = gate_and(n133, n130);
  auto n176 = gate_xor(n132, n131);
  auto n141 = gate_and(n176, n173);
  auto n139 = gate_xor(n173, n176);
  auto n134 = gate_and(n133, b[0]);
  auto n181 = gate_xor(n134, a[1]);
  auto n138 = gate_and(n178, n181);
  auto n136 = gate_xor(n178, n181);
  auto n135 = gate_not(a[0]);
  auto n3 = gate_nand(n135, b[0]);
  auto n137 = gate_and(n136, n3);
  auto n174 = gate_or(n138, n137);
  auto n140 = gate_and(n139, n174);
  auto n169 = gate_or(n141, n140);
  auto n143 = gate_and(n142, n169);
  auto n164 = gate_or(n144, n143);
  auto n146 = gate_and(n145, n164);
  auto n159 = gate_or(n147, n146);
  auto n149 = gate_and(n148, n159);
  auto n156 = gate_or(n150, n149);
  auto n16 = gate_nand(n156, n155);
  auto n152 = gate_or(n155, n151);
  auto n154 = gate_and(n156, n152);
  auto n153 = gate_and(n157, n155);
  auto n182 = gate_or(n154, n153);
  auto n17 = gate_nand(n182, n16);
  y[6] = gate_and(n157, n17);
  auto n160 = gate_xor(n159, n158);
  auto n162 = gate_and(n182, n160);
  y[5] = gate_xor(n162, n161);
  auto n165 = gate_xor(n164, n163);
  auto n167 = gate_and(n182, n165);
  y[4] = gate_xor(n167, n166);
  auto n170 = gate_xor(n169, n168);
  auto n172 = gate_and(n182, n170);
  y[3] = gate_xor(n172, n171);
  auto n175 = gate_xor(n174, n173);
  auto n177 = gate_and(n182, n175);
  y[2] = gate_xor(n177, n176);
  auto n179 = gate_xor(n3, n178);
  auto n180 = gate_and(n182, n179);
  y[1] = gate_xor(n181, n180);
  auto n183 = gate_and(n182, b[0]);
  y[0] = gate_xor(n183, a[0]);
}
template<> void $NameUint<7>::d_modsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n1 = gate_nand(a[0], b[0]);
  auto n106 = gate_xor(b[2], b[6]);
  auto n176 = gate_not(n106);
  auto n138 = gate_xor(b[4], b[6]);
  auto n196 = gate_not(n138);
  auto n203 = gate_xor(b[5], b[6]);
  auto n142 = gate_not(n203);
  auto n97 = gate_and(n196, n142);
  auto n101 = gate_xor(b[3], b[6]);
  auto n190 = gate_not(n101);
  auto n64 = gate_and(n97, n190);
  auto n83 = gate_or(a[1], a[0]);
  auto n55 = gate_or(n83, a[2]);
  auto n35 = gate_or(n55, a[3]);
  auto n24 = gate_or(n35, a[4]);
  auto n23 = gate_and(n24, a[6]);
  auto n27 = gate_not(a[5]);
  auto n30 = gate_xor(n23, n27);
  auto n34 = gate_not(n30);
  auto n33 = gate_and(n64, n176);
  auto n111 = gate_xor(b[1], b[6]);
  auto n183 = gate_not(n111);
  auto n26 = gate_not(n24);
  auto n25 = gate_and(n33, b[0]);
  auto n8 = gate_nand(n183, n25);
  auto n28 = gate_and(n26, n8);
  auto n29 = gate_and(n28, n27);
  auto n44 = gate_and(a[6], n29);
  auto n31 = gate_xor(n183, n44);
  auto n157 = gate_or(b[0], b[6]);
  auto n4 = gate_nand(n157, n1);
  auto n22 = gate_nand(n30, n157);
  auto n32 = gate_and(n31, n22);
  auto n42 = gate_and(n33, n32);
  auto n9 = gate_nand(n42, b[0]);
  auto n48 = gate_and(n34, n9);
  auto n40 = gate_and(n48, n183);
  auto n38 = gate_xor(n48, n183);
  auto n36 = gate_and(n35, a[6]);
  auto n54 = gate_xor(n36, a[4]);
  auto n13 = gate_nand(b[0], n54);
  auto n50 = gate_and(n157, n13);
  auto n37 = gate_not(n50);
  auto n39 = gate_and(n38, n37);
  auto n41 = gate_or(n40, n39);
  auto n46 = gate_and(n176, n41);
  auto n65 = gate_xor(n41, n176);
  auto n3 = gate_nand(n65, n64);
  auto n43 = gate_not(n42);
  auto n66 = gate_and(n44, n43);
  auto n45 = gate_and(n65, n66);
  auto n47 = gate_or(n46, n45);
  auto n52 = gate_and(n64, n47);
  auto n14 = gate_nand(n52, n50);
  auto n49 = gate_and(n52, n111);
  auto n51 = gate_xor(n49, n48);
  auto n74 = gate_and(n51, n14);
  auto n62 = gate_and(n176, n74);
  auto n60 = gate_xor(n176, n74);
  auto n53 = gate_and(b[0], n52);
  auto n78 = gate_xor(n54, n53);
  auto n59 = gate_and(n78, n183);
  auto n57 = gate_xor(n183, n78);
  auto n56 = gate_and(n55, a[6]);
  auto n81 = gate_xor(n56, a[3]);
  auto n12 = gate_nand(b[0], n81);
  auto n6 = gate_nand(n157, n12);
  auto n58 = gate_and(n57, n6);
  auto n72 = gate_or(n59, n58);
  auto n61 = gate_and(n60, n72);
  auto n68 = gate_or(n62, n61);
  auto n63 = gate_xor(n68, n190);
  auto n21 = gate_nand(n63, n97);
  auto n67 = gate_and(n3, n66);
  auto n96 = gate_and(n21, n67);
  auto n70 = gate_and(n67, n190);
  auto n69 = gate_and(n190, n68);
  auto n71 = gate_or(n70, n69);
  auto n80 = gate_and(n97, n71);
  auto n73 = gate_not(n72);
  auto n20 = gate_nand(n80, n73);
  auto n75 = gate_and(n80, n106);
  auto n76 = gate_xor(n75, n74);
  auto n102 = gate_and(n20, n76);
  auto n92 = gate_and(n102, n190);
  auto n90 = gate_xor(n190, n102);
  auto n77 = gate_xor(n183, n6);
  auto n79 = gate_and(n80, n77);
  auto n108 = gate_xor(n79, n78);
  auto n19 = gate_nand(n176, n108);
  auto n82 = gate_and(n80, b[0]);
  auto n113 = gate_xor(n82, n81);
  auto n15 = gate_nand(n183, n113);
  auto n84 = gate_and(n83, a[6]);
  auto n116 = gate_xor(n84, a[2]);
  auto n11 = gate_nand(n116, b[0]);
  auto n110 = gate_and(n157, n11);
  auto n85 = gate_xor(n111, n113);
  auto n86 = gate_or(n110, n85);
  auto n105 = gate_and(n15, n86);
  auto n87 = gate_xor(n106, n108);
  auto n88 = gate_or(n105, n87);
  auto n100 = gate_and(n19, n88);
  auto n89 = gate_not(n100);
  auto n91 = gate_and(n90, n89);
  auto n94 = gate_or(n92, n91);
  auto n93 = gate_xor(n196, n94);
  auto n2 = gate_nand(n142, n93);
  auto n132 = gate_and(n96, n2);
  auto n95 = gate_and(n94, n196);
  auto n99 = gate_and(n95, n142);
  auto n98 = gate_and(n97, n96);
  auto n115 = gate_or(n99, n98);
  auto n7 = gate_nand(n115, n100);
  auto n103 = gate_and(n115, n101);
  auto n104 = gate_xor(n103, n102);
  auto n139 = gate_and(n7, n104);
  auto n130 = gate_and(n139, n196);
  auto n128 = gate_xor(n196, n139);
  auto n107 = gate_xor(n106, n105);
  auto n109 = gate_and(n115, n107);
  auto n145 = gate_xor(n109, n108);
  auto n127 = gate_and(n145, n190);
  auto n125 = gate_xor(n190, n145);
  auto n112 = gate_xor(n111, n110);
  auto n114 = gate_and(n115, n112);
  auto n149 = gate_xor(n114, n113);
  auto n124 = gate_and(n149, n176);
  auto n122 = gate_xor(n149, n176);
  auto n117 = gate_and(n115, b[0]);
  auto n152 = gate_xor(n117, n116);
  auto n121 = gate_and(n152, n183);
  auto n119 = gate_xor(n152, n183);
  auto n118 = gate_and(a[6], a[0]);
  auto n155 = gate_xor(a[1], n118);
  auto n10 = gate_nand(b[0], n155);
  auto n5 = gate_nand(n157, n10);
  auto n120 = gate_and(n119, n5);
  auto n147 = gate_or(n121, n120);
  auto n123 = gate_and(n122, n147);
  auto n143 = gate_or(n124, n123);
  auto n126 = gate_and(n125, n143);
  auto n136 = gate_or(n127, n126);
  auto n129 = gate_and(n128, n136);
  auto n133 = gate_or(n130, n129);
  auto n131 = gate_xor(n133, n203);
  auto n174 = gate_and(n132, n131);
  auto n135 = gate_and(n132, n142);
  auto n134 = gate_and(n133, n142);
  auto n154 = gate_or(n135, n134);
  auto n137 = gate_not(n136);
  auto n16 = gate_nand(n154, n137);
  auto n140 = gate_and(n154, n138);
  auto n141 = gate_xor(n140, n139);
  auto n205 = gate_and(n16, n141);
  auto n172 = gate_and(n205, n142);
  auto n170 = gate_xor(n142, n205);
  auto n144 = gate_xor(n190, n143);
  auto n146 = gate_and(n154, n144);
  auto n198 = gate_xor(n146, n145);
  auto n169 = gate_and(n198, n196);
  auto n167 = gate_xor(n196, n198);
  auto n148 = gate_xor(n176, n147);
  auto n150 = gate_and(n154, n148);
  auto n192 = gate_xor(n150, n149);
  auto n166 = gate_and(n192, n190);
  auto n164 = gate_xor(n190, n192);
  auto n151 = gate_xor(n183, n5);
  auto n153 = gate_and(n154, n151);
  auto n178 = gate_xor(n153, n152);
  auto n163 = gate_and(n178, n176);
  auto n161 = gate_xor(n178, n176);
  auto n156 = gate_and(n154, b[0]);
  auto n186 = gate_xor(n156, n155);
  auto n160 = gate_and(n186, n183);
  auto n158 = gate_xor(n186, n183);
  auto n159 = gate_and(n158, n4);
  auto n175 = gate_or(n160, n159);
  auto n162 = gate_and(n161, n175);
  auto n189 = gate_or(n163, n162);
  auto n165 = gate_and(n164, n189);
  auto n195 = gate_or(n166, n165);
  auto n168 = gate_and(n167, n195);
  auto n201 = gate_or(n169, n168);
  auto n171 = gate_and(n170, n201);
  auto n173 = gate_or(n172, n171);
  auto n18 = gate_nand(n174, n173);
  auto n210 = gate_and(a[6], n18);
  auto n204 = gate_or(n174, n173);
  auto n177 = gate_xor(n176, n175);
  auto n179 = gate_and(n204, n177);
  auto n180 = gate_xor(n179, n178);
  auto n218 = gate_xor(a[6], n180);
  auto n182 = gate_and(b[0], n204);
  auto n181 = gate_xor(a[0], a[6]);
  auto n222 = gate_xor(n182, n181);
  auto n188 = gate_and(a[6], n222);
  auto n184 = gate_xor(n4, n183);
  auto n185 = gate_and(n204, n184);
  auto n220 = gate_xor(n186, n185);
  auto n187 = gate_not(n220);
  auto n217 = gate_and(n188, n187);
  auto n216 = gate_and(n218, n217);
  auto n191 = gate_xor(n190, n189);
  auto n193 = gate_and(n204, n191);
  auto n194 = gate_xor(n193, n192);
  auto n215 = gate_xor(a[6], n194);
  auto n214 = gate_and(n216, n215);
  auto n197 = gate_xor(n196, n195);
  auto n199 = gate_and(n204, n197);
  auto n200 = gate_xor(n199, n198);
  auto n213 = gate_xor(a[6], n200);
  auto n212 = gate_and(n214, n213);
  auto n202 = gate_not(n201);
  auto n17 = gate_nand(n204, n202);
  auto n206 = gate_and(n204, n203);
  auto n207 = gate_xor(n206, n205);
  auto n208 = gate_and(n17, n207);
  auto n211 = gate_xor(a[6], n208);
  auto n209 = gate_and(n212, n211);
  y[6] = gate_xor(n210, n209);
  y[5] = gate_xor(n212, n211);
  y[4] = gate_xor(n214, n213);
  y[3] = gate_xor(n216, n215);
  y[2] = gate_xor(n218, n217);
  auto n219 = gate_not(n222);
  auto n221 = gate_and(n219, a[6]);
  y[1] = gate_xor(n221, n220);
  y[0] = gate_xor(a[6], n222);
}
template<> void $NameUint<7>::d_mul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  auto n7 = gate_and(a[1], b[0]);
  auto n6 = gate_and(a[0], b[1]);
  y[1] = gate_xor(n7, n6);
  auto n27 = gate_and(a[0], b[2]);
  auto n25 = gate_and(a[1], b[1]);
  auto n2 = gate_nand(n27, n25);
  auto n12 = gate_xor(n27, n25);
  auto n11 = gate_and(a[2], b[0]);
  auto n14 = gate_xor(n12, n11);
  auto n13 = gate_and(n7, n6);
  y[2] = gate_xor(n14, n13);
  auto n8 = gate_and(b[2], n2);
  auto n10 = gate_and(n8, a[1]);
  auto n9 = gate_and(b[3], a[0]);
  auto n18 = gate_xor(n10, n9);
  auto n24 = gate_and(b[0], a[3]);
  auto n23 = gate_and(a[2], b[1]);
  auto n17 = gate_xor(n24, n23);
  auto n20 = gate_xor(n18, n17);
  auto n16 = gate_and(n12, n11);
  auto n15 = gate_and(n14, n13);
  auto n19 = gate_or(n16, n15);
  y[3] = gate_xor(n20, n19);
  auto n29 = gate_and(a[0], b[4]);
  auto n28 = gate_and(a[1], b[3]);
  auto n31 = gate_xor(n29, n28);
  auto n30 = gate_and(b[2], a[2]);
  auto n41 = gate_xor(n31, n30);
  auto n22 = gate_and(n18, n17);
  auto n21 = gate_and(n20, n19);
  auto n40 = gate_or(n22, n21);
  auto n43 = gate_xor(n41, n40);
  auto n47 = gate_and(n24, n23);
  auto n75 = gate_and(b[0], a[4]);
  auto n34 = gate_and(b[1], a[3]);
  auto n46 = gate_xor(n75, n34);
  auto n49 = gate_xor(n47, n46);
  auto n26 = gate_or(n28, n25);
  auto n48 = gate_and(n27, n26);
  auto n42 = gate_xor(n49, n48);
  y[4] = gate_xor(n43, n42);
  auto n33 = gate_and(n29, n28);
  auto n32 = gate_and(n31, n30);
  auto n52 = gate_or(n33, n32);
  auto n35 = gate_and(a[3], b[2]);
  auto n68 = gate_and(n75, n34);
  auto n5 = gate_nand(n68, b[2]);
  auto n67 = gate_xor(n35, n68);
  auto n37 = gate_and(a[5], b[0]);
  auto n36 = gate_and(a[4], b[1]);
  auto n66 = gate_xor(n37, n36);
  auto n1 = gate_nand(n67, n66);
  auto n55 = gate_xor(n67, n66);
  auto n78 = gate_and(b[3], a[2]);
  auto n81 = gate_and(a[0], b[5]);
  auto n79 = gate_and(b[4], a[1]);
  auto n4 = gate_nand(n79, n78);
  auto n38 = gate_xor(n81, n79);
  auto n53 = gate_xor(n78, n38);
  auto n39 = gate_xor(n55, n53);
  auto n61 = gate_xor(n52, n39);
  auto n45 = gate_and(n41, n40);
  auto n44 = gate_and(n43, n42);
  auto n59 = gate_or(n45, n44);
  auto n51 = gate_and(n47, n46);
  auto n50 = gate_and(n49, n48);
  auto n58 = gate_or(n51, n50);
  auto n60 = gate_xor(n59, n58);
  y[5] = gate_xor(n61, n60);
  auto n57 = gate_and(n53, n52);
  auto n54 = gate_or(n53, n52);
  auto n56 = gate_and(n55, n54);
  auto n65 = gate_or(n57, n56);
  auto n63 = gate_and(n59, n58);
  auto n62 = gate_and(n61, n60);
  auto n64 = gate_or(n63, n62);
  auto n74 = gate_xor(n65, n64);
  auto n72 = gate_and(n1, n5);
  auto n70 = gate_and(a[4], b[2]);
  auto n69 = gate_and(b[5], a[1]);
  auto n71 = gate_xor(n70, n69);
  auto n73 = gate_xor(n72, n71);
  auto n93 = gate_xor(n74, n73);
  auto n76 = gate_not(n75);
  auto n77 = gate_and(n76, a[5]);
  auto n87 = gate_and(b[1], n77);
  auto n80 = gate_or(n79, n78);
  auto n3 = gate_nand(n81, n80);
  auto n85 = gate_and(n4, n3);
  auto n83 = gate_and(a[3], b[3]);
  auto n82 = gate_and(a[2], b[4]);
  auto n84 = gate_xor(n83, n82);
  auto n86 = gate_xor(n85, n84);
  auto n91 = gate_xor(n87, n86);
  auto n89 = gate_and(a[6], b[0]);
  auto n88 = gate_and(b[6], a[0]);
  auto n90 = gate_xor(n89, n88);
  auto n92 = gate_xor(n91, n90);
  y[6] = gate_xor(n93, n92);
}
template<> void $NameUint<7>::d_redand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_and(a[2], a[4]);
  auto n6 = gate_and(a[3], a[1]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_and(n8, a[6]);
  auto n9 = gate_and(a[0], a[5]);
  y[0] = gate_and(n10, n9);
}
template<> void $NameUint<7>::d_rednand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_and(a[2], a[4]);
  auto n12 = gate_and(a[0], a[5]);
  auto n9 = gate_and(a[3], a[1]);
  auto n11 = gate_and(n10, n9);
  auto n13 = gate_and(n11, a[6]);
  y[0] = gate_nand(n13, n12);
}
template<> void $NameUint<7>::d_rednor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n21 = gate_not(a[4]);
  auto n15 = gate_not(a[6]);
  auto n14 = gate_not(a[2]);
  auto n19 = gate_and(n15, n14);
  auto n17 = gate_not(a[3]);
  auto n16 = gate_not(a[5]);
  auto n18 = gate_and(n17, n16);
  auto n20 = gate_and(n19, n18);
  auto n25 = gate_and(n21, n20);
  auto n23 = gate_not(a[1]);
  auto n22 = gate_not(a[0]);
  auto n24 = gate_and(n23, n22);
  y[0] = gate_and(n25, n24);
}
template<> void $NameUint<7>::d_redor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_or(a[1], a[6]);
  auto n6 = gate_or(a[3], a[0]);
  auto n8 = gate_or(n7, n6);
  auto n10 = gate_or(a[4], n8);
  auto n9 = gate_or(a[2], a[5]);
  y[0] = gate_or(n10, n9);
}
template<> void $NameUint<7>::d_redxnor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_xor(a[1], a[6]);
  auto n9 = gate_xor(a[3], a[2]);
  auto n8 = gate_xnor(n10, n9);
  auto n12 = gate_xor(n8, a[4]);
  auto n11 = gate_xor(a[0], a[5]);
  y[0] = gate_xor(n12, n11);
}
template<> void $NameUint<7>::d_redxor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_xor(a[1], a[6]);
  auto n6 = gate_xor(a[3], a[2]);
  auto n8 = gate_xor(n7, n6);
  auto n10 = gate_xor(n8, a[4]);
  auto n9 = gate_xor(a[0], a[5]);
  y[0] = gate_xor(n10, n9);
}
template<> void $NameUint<7>::d_sll
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n86 = gate_not(b[0]);
  auto n58 = gate_and(a[2], n86);
  auto n57 = gate_and(b[0], a[1]);
  auto n96 = gate_or(n58, n57);
  auto n94 = gate_not(b[1]);
  auto n60 = gate_and(n96, n94);
  auto n109 = gate_and(a[0], n86);
  auto n59 = gate_and(b[1], n109);
  auto n106 = gate_or(n60, n59);
  auto n62 = gate_not(b[6]);
  auto n61 = gate_not(b[3]);
  auto n66 = gate_and(n62, n61);
  auto n64 = gate_not(b[5]);
  auto n63 = gate_not(b[4]);
  auto n65 = gate_and(n64, n63);
  auto n84 = gate_and(n66, n65);
  auto n92 = gate_and(b[2], n84);
  auto n75 = gate_and(n106, n92);
  auto n89 = gate_not(b[2]);
  auto n108 = gate_and(n84, n89);
  auto n110 = gate_and(n108, n94);
  auto n68 = gate_and(a[6], n86);
  auto n67 = gate_and(b[0], a[5]);
  auto n69 = gate_or(n68, n67);
  auto n73 = gate_and(n110, n69);
  auto n103 = gate_and(b[1], n108);
  auto n71 = gate_and(a[4], n86);
  auto n70 = gate_and(b[0], a[3]);
  auto n95 = gate_or(n71, n70);
  auto n72 = gate_and(n103, n95);
  auto n74 = gate_or(n73, n72);
  y[6] = gate_or(n75, n74);
  auto n77 = gate_and(a[5], n86);
  auto n76 = gate_and(b[0], a[4]);
  auto n78 = gate_or(n77, n76);
  auto n83 = gate_and(n78, n94);
  auto n80 = gate_and(a[3], n86);
  auto n79 = gate_and(b[0], a[2]);
  auto n101 = gate_or(n80, n79);
  auto n81 = gate_and(b[1], n101);
  auto n82 = gate_or(n81, b[2]);
  auto n85 = gate_or(n83, n82);
  auto n91 = gate_and(n85, n84);
  auto n88 = gate_and(a[1], n86);
  auto n87 = gate_and(b[0], a[0]);
  auto n102 = gate_or(n88, n87);
  auto n107 = gate_and(n94, n102);
  auto n90 = gate_or(n89, n107);
  y[5] = gate_and(n91, n90);
  auto n93 = gate_and(n92, n109);
  auto n100 = gate_and(n94, n93);
  auto n98 = gate_and(n110, n95);
  auto n97 = gate_and(n103, n96);
  auto n99 = gate_or(n98, n97);
  y[4] = gate_or(n100, n99);
  auto n105 = gate_and(n110, n101);
  auto n104 = gate_and(n103, n102);
  y[3] = gate_or(n105, n104);
  y[2] = gate_and(n108, n106);
  y[1] = gate_and(n108, n107);
  y[0] = gate_and(n110, n109);
}
template<> void $NameUint<7>::d_slr
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n58 = gate_not(b[6]);
  auto n57 = gate_not(b[3]);
  auto n62 = gate_and(n58, n57);
  auto n60 = gate_not(b[5]);
  auto n59 = gate_not(b[4]);
  auto n61 = gate_and(n60, n59);
  auto n97 = gate_and(n62, n61);
  auto n91 = gate_not(b[2]);
  auto n72 = gate_and(n97, n91);
  auto n87 = gate_not(b[0]);
  auto n102 = gate_and(n72, n87);
  auto n98 = gate_not(b[1]);
  auto n78 = gate_and(a[6], n98);
  y[6] = gate_and(n102, n78);
  auto n67 = gate_and(a[5], n98);
  auto n64 = gate_and(n67, n87);
  auto n63 = gate_and(b[0], n78);
  auto n93 = gate_or(n64, n63);
  y[5] = gate_and(n72, n93);
  auto n66 = gate_and(a[4], n98);
  auto n65 = gate_and(b[1], a[6]);
  auto n73 = gate_or(n66, n65);
  auto n69 = gate_and(n73, n87);
  auto n68 = gate_and(b[0], n67);
  auto n103 = gate_or(n69, n68);
  y[4] = gate_and(n72, n103);
  auto n71 = gate_and(a[3], n98);
  auto n70 = gate_and(b[1], a[5]);
  auto n80 = gate_or(n71, n70);
  auto n75 = gate_and(n102, n80);
  auto n106 = gate_and(b[0], n72);
  auto n74 = gate_and(n106, n73);
  y[3] = gate_or(n75, n74);
  auto n77 = gate_and(a[2], n98);
  auto n76 = gate_and(b[1], a[4]);
  auto n88 = gate_or(n77, n76);
  auto n84 = gate_and(n102, n88);
  auto n104 = gate_and(b[2], n97);
  auto n79 = gate_and(n78, n104);
  auto n82 = gate_and(n87, n79);
  auto n81 = gate_and(n106, n80);
  auto n83 = gate_or(n82, n81);
  y[2] = gate_or(n84, n83);
  auto n86 = gate_and(a[1], n98);
  auto n85 = gate_and(b[1], a[3]);
  auto n105 = gate_or(n86, n85);
  auto n90 = gate_and(n105, n87);
  auto n89 = gate_and(b[0], n88);
  auto n92 = gate_or(n90, n89);
  auto n95 = gate_and(n92, n91);
  auto n94 = gate_and(b[2], n93);
  auto n96 = gate_or(n95, n94);
  y[1] = gate_and(n97, n96);
  auto n100 = gate_and(a[0], n98);
  auto n99 = gate_and(b[1], a[2]);
  auto n101 = gate_or(n100, n99);
  auto n110 = gate_and(n102, n101);
  auto n108 = gate_and(n104, n103);
  auto n107 = gate_and(n106, n105);
  auto n109 = gate_or(n108, n107);
  y[0] = gate_or(n110, n109);
}
template<> void $NameUint<7>::d_srasig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_buf(a[6]);
  auto n61 = gate_or(b[5], b[4]);
  auto n60 = gate_or(b[3], b[6]);
  auto n106 = gate_or(n61, n60);
  auto n62 = gate_or(n106, b[2]);
  auto n90 = gate_and(y[6], n62);
  auto n76 = gate_not(n62);
  auto n75 = gate_not(b[0]);
  auto n108 = gate_not(b[1]);
  auto n64 = gate_and(n75, n108);
  auto n63 = gate_not(n64);
  auto n66 = gate_and(y[6], n63);
  auto n65 = gate_and(n64, a[5]);
  auto n92 = gate_or(n66, n65);
  auto n67 = gate_and(n76, n92);
  y[5] = gate_or(n90, n67);
  auto n69 = gate_and(a[4], n75);
  auto n68 = gate_and(b[0], a[5]);
  auto n70 = gate_or(n69, n68);
  auto n71 = gate_and(n70, n108);
  auto n74 = gate_and(b[1], y[6]);
  auto n104 = gate_or(n71, n74);
  auto n72 = gate_and(n76, n104);
  y[4] = gate_or(n90, n72);
  auto n103 = gate_and(b[0], n76);
  auto n73 = gate_and(n103, a[4]);
  auto n82 = gate_and(n108, n73);
  auto n80 = gate_and(b[0], n74);
  auto n112 = gate_and(n76, n75);
  auto n78 = gate_and(a[3], n108);
  auto n77 = gate_and(b[1], a[5]);
  auto n86 = gate_or(n78, n77);
  auto n79 = gate_and(n112, n86);
  auto n81 = gate_or(n80, n79);
  auto n83 = gate_or(n82, n81);
  y[3] = gate_or(n90, n83);
  auto n85 = gate_and(a[2], n108);
  auto n84 = gate_and(b[1], a[4]);
  auto n97 = gate_or(n85, n84);
  auto n88 = gate_and(n112, n97);
  auto n87 = gate_and(n103, n86);
  auto n89 = gate_or(n88, n87);
  y[2] = gate_or(n90, n89);
  auto n91 = gate_not(y[6]);
  auto n59 = gate_nand(n91, n106);
  auto n93 = gate_and(b[2], n92);
  auto n94 = gate_or(n106, n93);
  auto n101 = gate_and(n59, n94);
  auto n96 = gate_and(a[1], n108);
  auto n95 = gate_and(b[1], a[3]);
  auto n102 = gate_or(n96, n95);
  auto n99 = gate_and(n112, n102);
  auto n98 = gate_and(n103, n97);
  auto n100 = gate_or(n99, n98);
  y[1] = gate_or(n101, n100);
  auto n116 = gate_and(n103, n102);
  auto n105 = gate_and(b[2], n104);
  auto n107 = gate_or(n106, n105);
  auto n114 = gate_and(n59, n107);
  auto n110 = gate_and(a[0], n108);
  auto n109 = gate_and(b[1], a[2]);
  auto n111 = gate_or(n110, n109);
  auto n113 = gate_and(n112, n111);
  auto n115 = gate_or(n114, n113);
  y[0] = gate_or(n116, n115);
}
template<> void $NameUint<7>::d_sub
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n7 = gate_not(a[0]);
  auto n10 = gate_and(b[0], n7);
  auto n9 = gate_xor(a[1], b[1]);
  y[1] = gate_xor(n10, n9);
  auto n8 = gate_not(b[1]);
  auto n3 = gate_nand(a[1], n8);
  auto n11 = gate_or(n10, n9);
  auto n14 = gate_and(n3, n11);
  auto n13 = gate_xor(a[2], b[2]);
  y[2] = gate_xor(n14, n13);
  auto n12 = gate_not(b[2]);
  auto n4 = gate_nand(a[2], n12);
  auto n15 = gate_or(n14, n13);
  auto n18 = gate_and(n4, n15);
  auto n17 = gate_xor(a[3], b[3]);
  y[3] = gate_xor(n18, n17);
  auto n16 = gate_not(b[3]);
  auto n5 = gate_nand(a[3], n16);
  auto n19 = gate_or(n18, n17);
  auto n22 = gate_and(n5, n19);
  auto n21 = gate_xor(a[4], b[4]);
  y[4] = gate_xor(n22, n21);
  auto n20 = gate_not(b[4]);
  auto n6 = gate_nand(a[4], n20);
  auto n23 = gate_or(n22, n21);
  auto n25 = gate_and(n6, n23);
  auto n24 = gate_xor(a[5], b[5]);
  y[5] = gate_xor(n25, n24);
  auto n27 = gate_or(n25, n24);
  auto n26 = gate_not(b[5]);
  auto n2 = gate_nand(a[5], n26);
  auto n29 = gate_and(n27, n2);
  auto n28 = gate_xor(a[6], b[6]);
  y[6] = gate_xor(n29, n28);
}
template<> void $NameUint<7>::d_uminus
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_buf(a[0]);
  auto n10 = gate_or(a[1], y[0]);
  auto n9 = gate_or(a[2], n10);
  auto n8 = gate_or(a[3], n9);
  auto n7 = gate_or(a[4], n8);
  auto n6 = gate_or(a[5], n7);
  y[6] = gate_xor(a[6], n6);
  y[5] = gate_xor(a[5], n7);
  y[4] = gate_xor(a[4], n8);
  y[3] = gate_xor(a[3], n9);
  y[2] = gate_xor(a[2], n10);
  y[1] = gate_xor(a[1], y[0]);
}
